public class PurchaseOrderShipmentHandler {
    
    public static void createPurchaseOrderShipment(List<AcctSeedERP__Purchase_Order_Inventory_Movement__c> poMovements){
        integer i = 0;
        if(i == 0) return;
        Set<Id> movementIds = new Map<Id, AcctSeedERP__Purchase_Order_Inventory_Movement__c>(poMovements).keySet();
        Map<Id, Id> pol_inventoryBalance = new Map<Id, Id>();
        if(movementIds.isEmpty()) return;
        List<AcctSeedERP__Purchase_Order_Inventory_Movement__c>  movements = [SELECT Id, Name, 
                                                                                    AcctSeedERP__Inventory_Balance__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Name,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.project__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.AcctSeedERP__Type__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Sales_Order__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Unreceived_Quantity__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.Sales_Order_Line__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.Sales_Order_Line__r.AcctSeedERP__Sales_Order__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.Description__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Quantity__c,
                                                                                    AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Product__c,
                                                                                    AcctSeedERP__GL_Account_Variable_1__c, 
                                                                                    AcctSeedERP__Location__c, 
                                                                                    AcctSeedERP__Movement_Date__c,
                                                                                    AcctSeedERP__Quantity__c, 
                                                                                    AcctSeedERP__Product__c, AcctSeedERP__ProductId__c, AcctSeedERP__Unit_Cost__c 
                                                                                FROM AcctSeedERP__Purchase_Order_Inventory_Movement__c 
                                                                                WHERE id in:movementIds];

        for(AcctSeedERP__Purchase_Order_Inventory_Movement__c poim : movements){
            pol_inventoryBalance.put(poim.AcctSeedERP__Purchase_Order_Line__r.Sales_Order_Line__c, poim.AcctSeedERP__Inventory_Balance__c);
        }

        AcctSeedERP__Purchase_Order_Inventory_Movement__c poim = movements[0];
        Po_shipment__c purchaseOrderShipment = createPOShipmentRecord(poim);

        insert purchaseOrderShipment;

        List<Po_shipment_Line__c> POShipmentLines = createPOShipmentLines(movements, purchaseOrderShipment.Id);

        if(!POShipmentLines.isEmpty()) insert POShipmentLines;
        if(poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.AcctSeedERP__Type__c == 'Drop Shipment'){
            createSalesOrderShipment(movements, purchaseOrderShipment, pol_inventoryBalance);
        }
    }

    public static Po_shipment__c createPOShipmentRecord(AcctSeedERP__Purchase_Order_Inventory_Movement__c poim){
        Po_shipment__c ps = new Po_Shipment__c();
                        
        ps.Date__c = poim.AcctSeedERP__Movement_Date__c;
        ps.GL_Account_Variable_1__c = poim.AcctSeedERP__GL_Account_Variable_1__c;
        ps.Project__c = poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.project__c;
        ps.Purchase_Order__c = poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__c;
        ps.Sales_Order__c = poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Sales_Order__c;
        ps.Reference__c = 
        poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.AcctSeedERP__Type__c +' - '
            +poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Name;
        ps.Status__c = 'Received';
        
        return ps;
    }

    public static List<Po_shipment_Line__c> createPOShipmentLines(List<AcctSeedERP__Purchase_Order_Inventory_Movement__c> movements, Id purchaseOrderShipmentId){
        List<Po_shipment_Line__c> purchaseOrderShipmentLines = new List<Po_shipment_Line__c>();
        for(AcctSeedERP__Purchase_Order_Inventory_Movement__c mvt : movements){
            system.debug('mvt: '+mvt.Id);
            Po_shipment_Line__c sl = new PO_Shipment_Line__c();
                
            sl.PO_Shipment__c = purchaseOrderShipmentId;
            sl.Product__c = mvt.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Product__c;
            sl.Purchase_Order__c = mvt.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__c;
            sl.Purchase_Order_Line__c = mvt.AcctSeedERP__Purchase_Order_Line__c;
            sl.Quantity_Shipped__c = mvt.AcctSeedERP__Quantity__c;
            sl.Description__c = mvt.AcctSeedERP__Purchase_Order_Line__r.Description__c;
            sl.Sales_Order_Line__c = mvt.AcctSeedERP__Purchase_Order_Line__r.Sales_Order_Line__c;
            sl.Sales_Order__c = mvt.AcctSeedERP__Purchase_Order_Line__r.Sales_Order_Line__r.AcctSeedERP__Sales_Order__c;
            sl.Purchase_Order_Inventory_Movement__c = mvt.Id;
            purchaseOrderShipmentLines.add(sl); 
        }

        return purchaseOrderShipmentLines;
    }

    public static void createSalesOrderShipment(List<AcctSeedERP__Purchase_Order_Inventory_Movement__c> movements, Po_shipment__c purchaseOrderShipment, Map<Id, Id> pol_inventoryBalance){
        List<AcctSeedERP__Sales_Order_Inventory_Movement__c> salesOrderLinesAllocating = new List<AcctSeedERP__Sales_Order_Inventory_Movement__c>();

        AcctSeedERP__Purchase_Order_Inventory_Movement__c poim = movements[0];

        if(poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Unreceived_Quantity__c == 0) return;
        List<AcctSeedERP__Shipment_Line__c> shipmentLines = new List<AcctSeedERP__Shipment_Line__c>();
        Id shipmentRecordType = [SELECT Id, Name, DeveloperName, SobjectType FROM RecordType where SobjectType='AcctSeedERP__Shipment__c' and name='Default Shipment' LIMIT 1].Id;

        AcctSeedERP__Shipment__c so_shipment = new AcctSeedERP__Shipment__c();
        so_shipment.AcctSeedERP__Shipment_Date__c = poim.AcctSeedERP__Movement_Date__c;
        so_shipment.Project__c = poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.project__c;
        so_shipment.Purchase_Order_Shipment__c = purchaseOrderShipment.Id;
        so_shipment.AcctSeedERP__Sales_Order__c = poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Sales_Order__c;
        so_shipment.AcctSeedERP__Shipping_Reference__c = poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.AcctSeedERP__Type__c +' - '
            +poim.AcctSeedERP__Purchase_Order_Line__r.AcctSeedERP__Purchase_Order__r.Name;
        so_shipment.AcctSeedERP__Status__c = 'Received';
        so_shipment.tracking_number__c = purchaseOrderShipment.Tracking_Number__c;
        so_shipment.RecordTypeId = shipmentRecordType;

        insert so_shipment;

        for(AcctSeedERP__Purchase_Order_Inventory_Movement__c mvt : movements){
            //SO Shipment lines
            AcctSeedERP__Shipment_Line__c so_ship_line = new AcctSeedERP__Shipment_Line__c();
            so_ship_line.AcctSeedERP__Shipment__c = so_shipment.Id;
            so_ship_line.AcctSeedERP__Sales_Order_Line__c = mvt.AcctSeedERP__Purchase_Order_Line__r.Sales_Order_Line__c;
            so_ship_line.AcctSeedERP__Quantity_Shipped__c = mvt.AcctSeedERP__Quantity__c;
            so_ship_line.Item_Description__c = mvt.AcctSeedERP__Purchase_Order_Line__r.Description__c;

            shipmentLines.add(so_ship_line);
            salesOrderLinesAllocating.add(createSOLAllocating(so_ship_line, poim, pol_inventoryBalance.get(so_ship_line.AcctSeedERP__Sales_Order_Line__c)));
            // shipmentLines.add(createSOLAllocating(so_ship_line, poim, pol_inventoryBalance.get(so_ship_line.AcctSeedERP__Sales_Order_Line__c)));
        }

        try{
            // if(!salesOrderLinesAllocating.isEmpty()) insert salesOrderLinesAllocating;
            // if(!shipmentLines.isEmpty()) insert shipmentLines;
            insertSOLinesAsync(JSON.serialize(salesOrderLinesAllocating), JSON.serialize(shipmentLines), so_shipment.Id);
        }catch(Exception e){
            system.debug('FULL RECEIVED PO.');
        }
        

    }
    
    @future 
    public static void insertSOLinesAsync(String salesOrderLinesAllocatingJS, String shipmentLinesJS, String shipmentId){
        List<AcctSeedERP__Sales_Order_Inventory_Movement__c> salesOrderLinesAllocating = (List<AcctSeedERP__Sales_Order_Inventory_Movement__c>)JSON.deserialize(salesOrderLinesAllocatingJS, List<AcctSeedERP__Sales_Order_Inventory_Movement__c>.class);
        List<AcctSeedERP__Shipment_Line__c> shipmentLines = (List<AcctSeedERP__Shipment_Line__c>)JSON.deserialize(shipmentLinesJS, List<AcctSeedERP__Shipment_Line__c>.class);

        try{
            insert salesOrderLinesAllocating;
            insert shipmentLines;
        }catch(Exception e){
            List<AcctSeedERP__Shipment__c> shipments = [SELECT Id FROM AcctSeedERP__Shipment__c WHERE id=:shipmentId];
            if(!shipments.isEmpty()) delete shipments;
        }
        
    }
    public static AcctSeedERP__Sales_Order_Inventory_Movement__c createSOLAllocating(AcctSeedERP__Shipment_Line__c shipment_line, AcctSeedERP__Purchase_Order_Inventory_Movement__c poim, Id inv_balance_id){
        AcctSeedERP__Sales_Order_Inventory_Movement__c soim = new AcctSeedERP__Sales_Order_Inventory_Movement__c();
        soim.AcctSeedERP__GL_Account_Variable_1__c = poim.AcctSeedERP__GL_Account_Variable_1__c;
        soim.AcctSeedERP__Inventory_Balance__c = inv_balance_id;
        soim.AcctSeedERP__Quantity__c = shipment_line.AcctSeedERP__Quantity_Shipped__c;
        soim.AcctSeedERP__Movement_Date__c = date.today();
        soim.AcctSeedERP__Sales_Order_Line__c = shipment_line.AcctSeedERP__Sales_Order_Line__c;
        // soim.AcctSeedERP__Unit_Cost__c = shipment_line.AcctSeedERP__Sales_Order_Line__c;
        return soim;

    }






    public static void coverage(){

        integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
}