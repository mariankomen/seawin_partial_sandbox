<apex:page controller="SpecifiedDashboardController">
    <style>
        .listButtons li:not(.lastItem) {
        display: none;
        }
        html, body, #collection_performance {
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
        }
        .gauge-value{
        font-size: 16px;
        font-weight: bold;
        margin-top: 20px;
        }
        img {
        border-radius: 50%;
        }
        table.tableClass {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 60%;
        cursor: pointer;
        }
        
        .tableClass td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
        }
        
        .tableClass tr:nth-child(even) {
        background-color: #dddddd;
        }
        
        .highcharts-background{
        cursor: pointer;
        }
        
        .blankspace{
        width: 1234px; height: 400px; background: white;
        }
        .message .messageText {
            font-size: 12px;
        }
        .title-dashboard{
            font-size: 2em;
            font-weight: bold;
        }
        .listViewportWrapper .listViewport .topNav h2.title {
            font-size: 1.5em;
        }
        .center {
          text-align: center;
        }
        .monthClass {
            background-color:#60cc63 !important;
        }
        .yearClass {
            background-color:#91e0d9 !important;
        }
        .totalClass{
        
        background-color:#c1caca !important;
        }
        .emptySpace{
            background-color: white;
            width: 100%; 
            height: 500px; 
        }
        .whiteSpace{
            background-color: white;
            width: 50%; 
            height: 500px; 
        }
        .dtatable{
            background-color: white;
            width: 100%; 
            height: 333px; 
        }
        .dashboard-title{
            text-align: center;
        }
        .transparentBg{
        
            background-color: transparent !important;
        
        }
        
        .float-left-half{
            width: 50%; 
            float: left; 
            position: relative; 
            z-index: 10;
        }
        .float-right-half{
            width: 50%; 
            float: right; 
            position: relative; 
            z-index: 10;
        }
        .float-full{
            width: 100%; 
        }
        .float-left-70{ 
            width: 70%; 
            float: left; 
            position: relative; 
            z-index: 10
        
        }
        .float-right-70{    
            width: 70%; 
            float: right; 
            position: relative; 
            z-index: 10
        
        }
        .float-left-30{ 
            width: 30%; 
            float: left; 
            position: relative; 
            z-index: 10
        
        }
        .float-right-30{    
            width: 30%; 
            float: right; 
            position: relative; 
            z-index: 10
        
        }
        .float-left-65{ 
            width: 65%; 
            float: left; 
            position: relative; 
            z-index: 10
        
        }
        .float-right-35{    
            width: 35%; 
            float: right; 
            position: relative; 
            z-index: 10
        
        }
        .width-33{    
            width: 33%; 
            position: relative; 
            display: inline-block;
            z-index: 10
        
        }
        .spinnerBg{
            width: 100%;
            height: 100%;
            position: absolute;
            background-color: transparent;
            opacity: 0.1;
            z-index: 999999;
        }
        .spinner{
            width: 100%;
            height: 100%;
            background-image: url("/img/loading32.gif");
            background-size: 56px;
            background-repeat: no-repeat;
            background-position: center;
            z-index: 9999999;
            opacity: 1;
        }
        .spinner_adjusted{
            width: 100%;
            height: 30%;
            background-image: url("/img/loading32.gif");
            background-size: 56px;
            background-repeat: no-repeat;
            background-position: center;
            z-index: 9999999;
            opacity: 1;
        }
        
    </style>

    <apex:outputPanel >
        
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'jquery.min.js')}"/>
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'highcharts.js')}"/>
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'accessibility.js')}"/>
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'gauge.min.js')}"/>
    </apex:outputPanel>
    <apex:pageBlock >

        <div class="dashboard-title">
            <apex:outputText value="Specified Rep Dashboard" styleClass="title-dashboard"></apex:outputText>
        </div>

        <br/>
        <br/>
        <!-- Start Spec Rep 1 row -->
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Last 12 Months by Specified Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Monthly_Sales_Last_12_Months_Spec_Rep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Pre-Orders Pipeline last 12 months by Specified Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart will show statistics about loss reasons of Closed Lost opportunities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, for all Sales reps in the Seawin USA jurisdiction, Opportunity Parent equal to null, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="preorderpipeline_specrep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Forecast by Specified Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for the next 12 months involving Sum of Expected Revenue(Amount * Probability%) from Opportunties having record type Seawin USA Hospitality, based on close date, Forecast Category equals Pipeline, for all Sales rep in the Seawin USA jurisdiction, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA and grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="sales_forecast_pipeline_by_spec" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Company Total Specified Pipeline Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="total_pipeline_specified" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Pipeline Last 12 Months by Specified Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows this year's data from sales orders where orders are created this year, total greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="pipeline_by_spec_rep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" /></div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>


        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Newly Submitted Specified Opportunities Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="newly_submitted_specified" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Lost Specified Opportunities Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart will show statistics about loss reasons of Closed Lost opportunities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, for all Sales reps in the Seawin USA jurisdiction, Opportunity Parent equal to null, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="lost_specified" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Win Rate by Specified Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for the next 12 months involving Sum of Expected Revenue(Amount * Probability%) from Opportunties having record type Seawin USA Hospitality, based on close date, Forecast Category equals Pipeline, for all Sales rep in the Seawin USA jurisdiction, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA and grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="win_rate_specified" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <!-- Specified 2 row  END-->


    </apex:pageBlock>

    <!-- Referral Dashboards -->
    <apex:pageBlock >

        <div class="dashboard-title">
            <apex:outputText value="Referral Rep Dashboard" styleClass="title-dashboard"></apex:outputText>
        </div>

        <br/>
        <br/>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Last 12 Months by Referral Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Monthly_Sales_Last_12_Months_Ref_Rep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Pre-Orders Pipeline last 12 months by Referral Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart will show statistics about loss reasons of Closed Lost opportunities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, for all Sales reps in the Seawin USA jurisdiction, Opportunity Parent equal to null, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="preorderpipeline_refrep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Forecast by Referral Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for the next 12 months involving Sum of Expected Revenue(Amount * Probability%) from Opportunties having record type Seawin USA Hospitality, based on close date, Forecast Category equals Pipeline, for all Sales rep in the Seawin USA jurisdiction, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA and grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="sales_forecast_pipeline_by_ref" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>


        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Company Total Referral Pipeline Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="total_pipeline_referral" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Pipeline Last 12 Months by Referral Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows this year's data from sales orders where orders are created this year, total greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="pipeline_by_ref_rep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" /></div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>


        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Newly Submitted Referral Opportunities Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="newly_submitted_referral" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Lost Referral Opportunities Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart will show statistics about loss reasons of Closed Lost opportunities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, for all Sales reps in the Seawin USA jurisdiction, Opportunity Parent equal to null, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="lost_referral" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Win Rate by Referral Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for the next 12 months involving Sum of Expected Revenue(Amount * Probability%) from Opportunties having record type Seawin USA Hospitality, based on close date, Forecast Category equals Pipeline, for all Sales rep in the Seawin USA jurisdiction, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA and grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="win_rate_referral" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>


    </apex:pageBlock>

    <!-- END Referral Dashboards -->
    <apex:pageBlock >

        <div class="dashboard-title">
            <apex:outputText value="Manufacturer Rep Dashboard" styleClass="title-dashboard"></apex:outputText>
        </div>

        <br/>
        <br/>
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Last 12 Months by Manufacturer Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin USA Hospitality, Sales Reps belongs to Seawin USA Jurisdiction and GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Monthly_Sales_Last_12_Months_Man_Rep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Pre-Orders Pipeline last 12 months by Manufacturer  Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart will show statistics about loss reasons of Closed Lost opportunities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, for all Sales reps in the Seawin USA jurisdiction, Opportunity Parent equal to null, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="preorderpipeline_manrep" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Forecast by Manufacturer Rep<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for the next 12 months involving Sum of Expected Revenue(Amount * Probability%) from Opportunties having record type Seawin USA Hospitality, based on close date, Forecast Category equals Pipeline, for all Sales rep in the Seawin USA jurisdiction, record type equals Seawin USA Hospitality, GL Account Variable 1 belongs to Seawin USA and grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="sales_forecast_pipeline_by_man" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <!-- END Spec Rep 3 row -->
    <!-- New Graphs 25.07.22 -->




    </apex:pageBlock>




    <script>
        console.log(444)

        /*----------------------- Last 12 Months ------------------------- */
    
        var Last12MonthsCategories = new Array();
                
        function Last12Months() {
            var now = new Date();
            var currentMonth = now.getMonth();
            var month = now.getMonth();
            
            var names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
            
            for (var i = 0; i < 12; ++i) {
                var d = new Date();
                d.setMonth(parseInt(currentMonth) - i);
                Last12MonthsCategories.push(names[month] + ' \'' + d.getFullYear().toString().substring(2));
                if (--month === -1) {
                    month = 11;
                }
            }
        }
                
        Last12Months();

        /*----------------------- Last 12 Months Reverse ------------------------- */

        var Last12MonthsReverseCategories = new Array();
        var Last12MonthsReverseCategories_Temp = new Array();

        function Last12Months_Reverse() {
                var now = new Date();
                var currentMonth = now.getMonth();
                var month = now.getMonth();
                
                var names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                
                for (var i = 0; i < 12; ++i) {
                    var d = new Date();
                    d.setMonth(parseInt(currentMonth) - i);
                    Last12MonthsReverseCategories_Temp.push(names[month] + ' \'' + d.getFullYear().toString().substring(2));
                    if (--month === -1) {
                        month = 11;
                    }
                }
                
                for (var i = 11; i >= 0; i--) {
                    Last12MonthsReverseCategories.push(Last12MonthsReverseCategories_Temp[i]);
                }
            }

            
        Last12Months_Reverse();

        /*----------------------- Next 12 Months ------------------------- */

        var Next12MonthsCategories = new Array();
            
        function Next12Months() {
            var now = new Date();
            var currentMonth = parseInt(now.getMonth());
            var month = parseInt(now.getMonth());
            
            var names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                            'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];

            for (var i = 0; i < 12; ++i) {
                var d = new Date();
                d.setMonth(parseInt(currentMonth) + i);
                if(i == 0) Next12MonthsCategories.push("Missed");
                Next12MonthsCategories.push(names[month] + ' \'' + d.getFullYear().toString().substring(2));
                if (++month === 12) {
                    month = 0;
                }
            }
        }

        Next12Months();
    
        function onlyUnique(value, index, self) {
            return self.indexOf(value) === index;
        }
    </script>
    <script>

        var colorList = new Array('#058DC7','#64E572','#6AF9C4','#AA4643','#89A54E','#80699B','#3D96AE','#DB843D','#92A8CD', '#A47D7C','#B5CA92',"#7cb5ec","#434348","#90ed7d", "#00203FFF","#ADEFD1FF","#606060FF","#D6ED17FF","#D85A7FFF","#2C5F2D","#97BC62FF","#00539CFF","#EEA47FFF", "#603F83FF","#C7D3D4FF","#2BAE66FF","#FAD0C9FF","#6E6E6DFF","#2D2926FF","#E94B3CFF","#DAA03DFF","#616247FF", '#FFF263', "#990011FF","#435E55FF","#D64161FF","#76528BFF","#FAEBEFFF","#333D79FF","#F93822FF","#FDD20EFF", "#ED561B", "#50B432", "#F2EDD7FF","#755139FF","#006B38FF","#FFD662FF","#D7C49EFF","#343148FF", "#f7a35c","#8085e9","#f15c80","#e4d354", "#FFA177FF","#F5C7B8FF","#DF6589FF","#3C1053FF","#FFE77AFF","#2C5F2DFF","#DD4132FF","#9E1030FF","#F1F4FFFF",'#24CBE5', "#FCF951FF","#422057FF","#4B878BFF","#D01C1FFF","#1C1C1BFF","#CE4A7EFF","#00B1D2FF","#FDDB27FF","#79C000FF","#FF7F41FF", "#BD7F37FF","#A13941FF","#E3C9CEFF","#9FC131FF","#00239CFF","#E10600FF","#B0B8B4FF","#184A45FF","#FFA351FF", '#DDDF00', "#FFBE7BFF","#EED971FF","#567572FF","#964F4CFF","#696667FF","#DA291CFF","#56A8CBFF","#53A567FF","#D7A9E3FF","#8BBEE8FF", "#A8D5BAFF","#7DB46CFF","#E7EBE0FF","#ABD6DFFF","#F9A12EFF","#9B4A97FF","#A59C94FF","#AE0E36FF","#D32E5EFF","#EDC2D8FF", "#8ABAD3FF","#FC766AFF","#783937FF","#F1AC88FF","#F6EA7BFF","#FFBA52FF","#E683A9FF","#F65058FF", "#FBDE44FF","#28334AFF","#95DBE5FF","#078282FF","#339E66FF","#643E46FF","#BA0020FF","#EE2737FF","#FF3EA5FF","#EDFF00FF", "#00A4CCFF","#E95C20FF","#006747FF","#4F2C1DFF","#D9514EFF","#2A2B2DFF","#2DA8D8FF","#963CBDFF","#FF6F61FF","#C5299BFF", "#FEAE51FF","#F0E1B9FF","#F3DB74FF","#2460A7FF","#85B3D1FF","#B3C7D6FF","#D9B48FFF","#FFD653FF","#ED2B33FF", '#FF9655', "#0063B2FF","#9CC3D5FF","#D198C5FF","#E0C568FF","#101820FF","#FEE715FF","#CBCE91FF","#EA738DFF","#B1624EFF","#5CC8D7FF", "#89ABE3FF","#FCF6F5FF","#E3CD81FF","#B1B3B3FF","#101820FF","#F2AA4CFF","#A07855FF","#D4B996FF","#195190FF","#A2A2A1FF", "#DDB65DFF","#EEB238FF","#6E4C1EFF","#669DB3FF","#F0F6F7FF","#A89C94FF","#FF4F58FF","#0A5E2AFF","#6DAC4FFF","#EFEFE8FF", "#FE0000FF","#FFDDE2FF","#FAA094FF","#9ED9CCFF","#008C76FF","#93385FFF","#9F6B99FF","#4F3466FF","#301728FF","#F1F3FFFF", "#F7CED7FF","#F99FC9FF","#EF6079FF","#ABD1C9FF","#DFDCE5FF","#DBB04AFF","#97B3D0FF","#5F4B8BFF", "#e87855", "#F95700FF", "#2b908f","#f45b5b","#91e8e1","#592e6f","#703585","#5B84B1FF","#E69A8DFF","#42EADDFF","#CDB599FF","#000000FF",'#4572A7');

        var allSalesRep = {};
        var iterator = 0;
        <apex:repeat value="{!All_SalesReps}" var="rep">
            if(!allSalesRep.hasOwnProperty('{!rep}')){
                allSalesRep['{!rep}'] = colorList[iterator];
                iterator++;
            }
        </apex:repeat>

        iterator = 0;
        var allSpecifiedNames = {};
        <apex:repeat value="{!All_Specified}" var="name">
            if(!allSpecifiedNames.hasOwnProperty('{!name}')){
                allSpecifiedNames['{!name}'] = colorList[iterator];
                iterator++;
            }
        </apex:repeat>

        iterator = 0;
        var allLeadSoruces = {};
        <apex:repeat value="{!All_Lead_Soruces}" var="leadSource">
            if(!allLeadSoruces.hasOwnProperty('{!leadSource}')){
                allLeadSoruces['{!leadSource}'] = colorList[iterator];
                iterator++;
            }
        </apex:repeat>

        iterator = 0;
        var allAccountTypes = {};
        <apex:repeat value="{!All_Account_Types}" var="accountType">
            if(!allAccountTypes.hasOwnProperty('{!accountType}')){
                allAccountTypes['{!accountType}'] = colorList[iterator];
                iterator++;
            }
        </apex:repeat>

        var allReferralUsersObj = {};

        console.log(444444)
        let data = "{!AllReferralUsers}"
        iterator = 0;
        data = data.replace('[','').replace(']').split(', ')
        // console.log('DATA: ',JSON.parse(data))
        for(let char of data){
            if(!allReferralUsersObj.hasOwnProperty(char)){

                if(char != 'George Slater'){
                    allReferralUsersObj[char] = colorList[iterator]
                    iterator++
                }else{
                    allReferralUsersObj['George Slater'] = 'red'
                }
                
            }
        }

        console.log('allReferralUsersObj: '+ JSON.stringify(allReferralUsersObj));
        // <apex:repeat value="{!AllReferralUsers}" var="refName">
        //     if(!allReferralUsersObj.hasOwnProperty('{!refName}')){
        //         allReferralUsersObj['{!refName}'] = colorList[iterator];
        //         iterator++;
        //     }
        // </apex:repeat>
        
        

        // console.log('allReferralUsersObj: '+JSON.stringify(allReferralUsersObj))
        function getRepsColor(repName){
            color = repName in allSalesRep ? allSalesRep[repName] : 'red';
            return color; 
        }
        function getSpecColor(repName){
            color = repName in allSpecifiedNames ? allSpecifiedNames[repName] : 'red';
            return color; 
            // return 'red';
        }

        function getReferralColorTest(dataTest){
            console.log('dataTest: ', dataTest);
            return getReferralColor(dataTest)
        }
        function getReferralColor(repName){
            console.log('repName: ', repName)
            console.log('allReferralUsersObj[repName]: ', JSON.stringify(allReferralUsersObj))
            console.log(repName in allReferralUsersObj)
            console.log('==================================================');
            if(repName.includes('Series')) return allReferralUsersObj['George Slater']
            let ref_color = repName in allReferralUsersObj ? allReferralUsersObj[repName] : 'red';
            return ref_color; 
        }


        function getLeadSourceColor(leadSource){

            color = leadSource in allLeadSoruces ? allLeadSoruces[leadSource] : 'red';
            return color; 
        }


        function getAccountTypeColor(accountType){

            color = accountType in allAccountTypes ? allAccountTypes[accountType] : 'red';
            return color; 
        }
        

        function getMonthNumberFromMonthName(monthString){

            var month = 1;

            if(monthString.trim() == 'Jan'){
                month = 1;
            } else if(monthString.trim() == 'Feb'){
                month = 2;
            } else if(monthString.trim() == 'Mar'){
                month = 3;
            } else if(monthString.trim() == 'Apr'){
                month = 4;
            } else if(monthString.trim() == 'May'){
                month = 5;
            } else if(monthString.trim() == 'Jun'){
                month = 6;
            } else if(monthString.trim() == 'Jul'){
                month = 7;
            } else if(monthString.trim() == 'Aug'){
                month = 8;
            } else if(monthString.trim() == 'Sept'){
                month = 9;
            } else if(monthString.trim() == 'Oct'){
                month = 10;
            } else if(monthString.trim() == 'Nov'){
                month = 11;
            } else if(monthString.trim() == 'Dec'){
                month = 12;
            } else if(monthString.trim() == 'Missed'){
                month = 'Missed';
            }
            return month;
        }
        
    </script>
    <script>
                
        /* ---------------- Pre-Orders Pipeline last 12 months by Specified Rep ----------------------*/
        var SalesRepTotalPipelineData = new Array();
        
        var SalesRepTotalPipelineCategories_Temp = new Array();
        var SalesRepTotalPipelineCategories = new Array();
        function getMapLast12Month(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = 12 - month;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }
                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }

            return year_month_obj;
        }
        var mainArray = new Array(); 
        var midArray;
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Specififed_Reps_Total_Pipeline_Pre_Order_Last_12_Months}',
            function(result, event){
                if (event.status) {
                    const month_year_map = getMapLast12Month();
                    const sales_rep_data = []
                    for(let char in result){
                        const month_amount = []
                        result[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        sales_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })

                    }
                    RenderCompanyPipelineNegotiationLast12MonthsbySpecified(sales_rep_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Pipeline Last 12 Months by Sales Rep / Team...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Pipeline Last 12 Months by Sales Rep / Team...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyPipelineNegotiationLast12MonthsbySpecified(SalesRepTotalPipelineData){
        
            var salesRepsTotalPipelineLastTwelveMonths = Highcharts.chart('preorderpipeline_specrep', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Pre-Orders Pipeline last 12 months by Specified Rep";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Spec_Pre_Order_Pipeline_SMD_USA&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br>'+this.series.userOptions.name+'<br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getSpecColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                
                                //var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = '20' + YearIndex
                                var duration = '';

                                var chartName = "Pre-Orders Pipeline last 12 months by Specified Rep";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Spec_Pre_Order_Pipeline_SMD_USA&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                    event.point.series.userOptions.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            },
                            afterAnimate: function () {
                                this.chart.redraw();
                            }
                        }
                    }
                },
                
                series: SalesRepTotalPipelineData
                
            });

            //For redraw the chart to add colors to the legend symbols
            salesRepsTotalPipelineLastTwelveMonths.addSeries({"data":[]});
            salesRepsTotalPipelineLastTwelveMonths.series[salesRepsTotalPipelineLastTwelveMonths.series.length - 1].remove();

        }

    </script>


    <script>
        /* --------------------- Sales Last 12 Months by Specified Rep ------------------------- */
        var MonthlySalesData = new Array();

        var mainArray = new Array();
        var midArray;
        var subArray = new Array();

        function getMapLast12MonthSpec(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = month-1;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }

                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }
            return year_month_obj;
        }

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Specififed_Reps_Sales_Last_12_Months}',
            function(result, event){

                if (event.status) {
                    const month_year_map = getMapLast12MonthSpec();

                    const spec_rep_obj = {}
                    const spec_rep_data = []

                    result.forEach(el => {
                        if(!spec_rep_obj[el.name]){
                            spec_rep_obj[el.name] = [el]
                        }else{
                            spec_rep_obj[el.name].push(el)
                        }
                    })

                    for(let char in spec_rep_obj){
                        const month_amount = []
                        spec_rep_obj[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        spec_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })
                    }
                    RenderMonthlySalesLast12MonthsSalRep(spec_rep_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Monthly Sales Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Monthly Sales Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderMonthlySalesLast12MonthsSalRep(MonthlySalesData){

                var monthlySalesLastTwelveMonths = Highcharts.chart('Monthly_Sales_Last_12_Months_Spec_Rep', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Spec_SMD_H&title=Sales Last 12 Months by Specified Rep&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: Last12MonthsCategories,
                    min: 0,
                    max: 11,
                    labels: {
                        useHTML: true,
                        formatter: function(){

                            var monthYearList = this.value.split('\'');
                            var year = '20'+monthYearList[1];
                            var month = getMonthNumberFromMonthName(monthYearList[0]);
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Spec_SMD_H&title=Sales Last 12 Months by Specified Rep&click=left&dashboard=SMD_USA&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function () {
                        return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                            this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    },
                    split: true,
                    positioner: function(labelWidth, labelHeight, point) {
                        return {
                            x: point.plotX - point.h/2 + labelWidth/2,
                            y: point.plotY
                        };
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getSpecColor(this.name);
                        //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        enabled: true,
                        events: {
                            legendItemClick: function(event) {

                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Spec_SMD_H&title=Sales Last 12 Months by Specified Rep&click=legend';
                                url += '&duration=&str='+event.target.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                                event.preventDefault();
                                
                            },
                            click: function(event) { 

                                var d = new Date();
                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                                var duration = '';

                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Spec_SMD_H&title=Sales Last 12 Months by Specified Rep&click=bar';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: MonthlySalesData
            });

            //For redraw the chart to add colors to the legend symbols
            monthlySalesLastTwelveMonths.addSeries({"data":[]});
            monthlySalesLastTwelveMonths.series[monthlySalesLastTwelveMonths.series.length - 1].remove();

        }
    </script>

    <script>
        /* --------------- Sales Forecast Pipeline ----------------------*/
        let ForecastDataSpec = new Array();
        let midArraySpec;
        let mainArraySpec = new Array();
        let subArraySpec = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Sales_Forecast_Pipeline_Spicified}',
            function(result, event){
                
                if (event.status) {
                    for (let key in result) {
                        mainArraySpec = new Array();
                        subArraySpec = new Array();
                        let i = 0;
                        
                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            if(i == 0){
                                subArraySpec = new Array();
                                let checkNum = item.misc + "abc";
                                let valueIs = 0;
                                if(checkNum == "abc" || checkNum == "0abc"){
                                
                                valueIs = null;
                                }else{
                                
                                valueIs = parseFloat(item.misc);
                                }
                                
                                subArraySpec.push(0, valueIs);
                                mainArraySpec.push(subArraySpec);
                            }
                            
                            subArraySpec = new Array();
                            subArraySpec.push(parseInt(item.valueindex + 1), item.amount);
                            mainArraySpec.push(subArraySpec);
                            i++;
                        }

                        midArraySpec = {name:key, data:mainArraySpec, custom:"{!YEAR(TODAY())}"};
                        ForecastDataSpec.push(midArraySpec);
                    }
                    RenderSalesForecastPipelineSpeccc(ForecastDataSpec);
                } else if (event.type === 'exception') {
                    
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderSalesForecastPipelineSpeccc(ForecastData){
        
            var salesForecastPipeline = Highcharts.chart('sales_forecast_pipeline_by_spec', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pre_Order_Pipeline_SMD&title=Sales Forecast by Specified Rep&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: Next12MonthsCategories,
                    min: 0,
                    max: 12, 
                    labels: {
                        useHTML: true,
                        formatter: function(){
                            var monthYearList = this.value.split('\'');
                            var year = '20'+monthYearList[1];
                            var month = getMonthNumberFromMonthName(monthYearList[0]);
                            var urlString = '';
                            if(month == 'Missed'){
                                urlString = 'duration='+month;
                            } else {
                                urlString = 'year='+year+'&month='+month;
                            }
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pre_Order_Pipeline_SMD&title=Sales Forecast by Specified Rep&click=left&dashboard=SMD_USA&'+urlString+'\' target=\'blank\'>'+this.value+'</a>';    
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.series.name 
                        + '</span><br/><span style="font-weight: bold">' + this.x 
                        + '</span><br/>Expected Sales: ' + this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                    },
                    split: true
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getSpecColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pre_Order_Pipeline_SMD&title=Sales Forecast by Specified Rep&click=legend';
                                url += '&duration=&str='+this.userOptions.name+'&month=&year=';
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                                event.preventDefault();
                            },
                            click: function(event) {                        
                                var numberToMinus = parseInt(event.point.x);
                                var d = new Date();
                                d.setMonth(d.getMonth() + numberToMinus);
                                
                                var month = d.getMonth();
                                var year = d.getFullYear();
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pre_Order_Pipeline_SMD&title=Sales Forecast by Specified Rep&click=bar';
                                url += '&duration='+event.point.category+'&str='+this.userOptions.name+'&month='+month+'&year='+year;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: ForecastData
            });

            //For redraw the chart to add colors to the legend symbols
            salesForecastPipeline.addSeries({"data":[]});
            salesForecastPipeline.series[salesForecastPipeline.series.length - 1].remove();

        }

    </script>

    
    <script>
        /* ---------------------- Company Total Specified Pipeline Last 12 Months ---------------------- */
        var CompanyTotalPipelineData = new Array();

        //Calculate map of last 12 year-month
        function getMapLast12Month(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = 12 - month;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }
                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }

            return year_month_obj;
        }
        
        var DataArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Company_Total_Pipeline_Last_12_Months_Specified}',
            function(result, event){

                if (event.status) {
                    const month_year_map = getMapLast12Month();

                    const dashboard_arr = []
                    const month_amount = []
                    result.forEach(el => {
                        for(let char in month_year_map){
                            if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                month_amount.push([char, el.amount])
                            }
                        }
                    })
                    let setted_month = []
                    month_amount.forEach(el => {
                        setted_month.push(el[0])
                    })

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i.toString())){
                            month_amount.push([i.toString(), 0])
                        }
                    }
                    month_amount.sort((a, b) => b[0] - a[0]).reverse()
                    dashboard_arr.push({
                        name: 'companydata',
                        data: month_amount
                    })

                    RenderCompanyTotalPipelineLast12MonthsSpecified(dashboard_arr);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Company Total Specified Pipeline Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Company Total Pipeline Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyTotalPipelineLast12MonthsSpecified(CompanyTotalPipelineData){
        
            Highcharts.chart('total_pipeline_specified', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Company Total Specified Pipeline Last 12 Months";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_Specified_SMD_USA&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    enabled: false
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {

                                var chartName = "Company Total Specified Pipeline Last 12 Months";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_Specified_SMD_USA&title='+encodeURI(chartName)+'&click=legend';
                            url += '&duration=&str='+event.target.userOptions.name+'&year=';
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                                event.preventDefault();
                                
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                let full_year = '20'
                                // var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = full_year + YearIndex
                                var duration = '';

                                var chartName = "Company Total Specified Pipeline Last 12 Months";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_Specified_SMD_USA&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                    event.point.series.userOptions.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                
                series: CompanyTotalPipelineData
                
            });
        }
    </script>

<script>
                
    /* ---------------- Pipeline Last 12 Months by Specified Rep ----------------------*/
    var SalesRepTotalPipelineData = new Array();
    
    var SalesRepTotalPipelineCategories_Temp = new Array();
    var SalesRepTotalPipelineCategories = new Array();
    function getMapLast12Month(){
        let date = new Date();
        date.setDate(1);
        let year_month_obj = {};
        for(let month = 1; month <= 12; month++){
            let index = 12 - month;
            let iteration_month = date.getMonth() + 1;
            let iteration_year = date.getFullYear();

            year_month_obj[index] = {
                month: iteration_month,
                year: iteration_year
            }
            //month_year_map[month] = year_month_obj;
            date.setMonth(date.getMonth() - 1);
        }

        return year_month_obj;
    }
    var mainArray = new Array(); 
    var midArray;
    var subArray = new Array();

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Specififed_Reps_Total_Pipeline_Last_12_Months}',
        function(result, event){
            if (event.status) {
                const month_year_map = getMapLast12Month();
                const sales_rep_data = []
                for(let char in result){
                    const month_amount = []
                    result[char].forEach(el => {
                        for(let char in month_year_map){
                            if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                month_amount.push([char, el.amount])
                            }
                        }
                    })
                    let setted_month = []
                    month_amount.forEach(el => {
                        setted_month.push(el[0])
                    })
                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i.toString())){
                            month_amount.push([i.toString(), 0])
                        }
                    }
                    month_amount.sort((a, b) => b[0] - a[0]).reverse()

                    sales_rep_data.push({
                        name: char,
                        data: month_amount,
                        custom: char
                    })

                }
                RenderCompanyPipelineLast12MonthBySpecifiedRep(sales_rep_data);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Pipeline Last 12 Months by Specified Rep...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Pipeline Last 12 Months by Specified Rep...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderCompanyPipelineLast12MonthBySpecifiedRep(SalesRepTotalPipelineData){
    
        var salesRepsTotalPipelineLastTwelveMonths = Highcharts.chart('pipeline_by_spec_rep', {
            credits: {
                enabled: false
            },
            title: {
                text: ''
            },
            chart: {
                events: {
                    click: function(event) {
                        var chartName = "Pipeline Last 12 Months by Specified Rep";
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Pipeline_By_Specified_SMD_USA&title='+encodeURI(chartName)+'&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            subtitle: {
                text: ''
            },
            
            yAxis: {
                min: 0,
                title: {
                    text: 'Amount ($)'
                },
                allowDecimals: false
            },
            
            xAxis: {
                min: 0,
                categories: Last12MonthsReverseCategories,
                max:11
            },
            tooltip: {
                formatter: function () {
                    return '<b style="color: '+this.color+'; font-weight:bold">' + 
                        this.x + '</b><br>'+this.series.userOptions.name+'<br> Amount: '+ this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                }
            },
            
            legend: {
                layout: 'horizontal',
                align: 'center',
                verticalAlign: 'bottom',
                floating: false,
                enabled: true,
                labelFormatter: function () {
                    this.color = getSpecColor(this.name);
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    events: {
                        legendItemClick: function(event) {
                        },
                        click: function(event) {
                            var d = new Date();

                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var YearIndex = (CategArray[1]).replace("'", "");
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            
                            //var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                            var year = '20' + YearIndex
                            var duration = '';

                            var chartName = "Pipeline Last 12 Months by Specified Rep";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Pipeline_By_Specified_SMD_USA&title='+encodeURI(chartName)+'&click=point';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                event.point.series.userOptions.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        },
                        afterAnimate: function () {
                            this.chart.redraw();
                        }
                    }
                }
            },
            
            series: SalesRepTotalPipelineData
            
        });

        //For redraw the chart to add colors to the legend symbols
        salesRepsTotalPipelineLastTwelveMonths.addSeries({"data":[]});
        salesRepsTotalPipelineLastTwelveMonths.series[salesRepsTotalPipelineLastTwelveMonths.series.length - 1].remove();

    }

</script>

<script>
   /* ------------------- Newly Submitted Spec Opportunities Last 12 Months ------------------------ */
   var NewlySubmittedOpportunitiesDataCountPerMonthSpecNewly = new Array();
        var NewlySubmittedOpportunitiesDataSpecNewly = new Array();
        var NewlySubmittedOpportunitiesCategoriesSpec = new Array();

        
        function NewlySubmittedOpportunitiesSpec() {
            
            for (var i = 11; i >= 0; i--) {

                if(typeof NewlySubmittedOpportunitiesDataCountPerMonthSpecNewly[11-i] === 'undefined') {
                    NewlySubmittedOpportunitiesDataCountPerMonthSpecNewly[11-i] = 0;
                }
                NewlySubmittedOpportunitiesCategoriesSpec.push(Last12MonthsCategories[i]+ 
                                                        ' ('+NewlySubmittedOpportunitiesDataCountPerMonthSpecNewly[11-i]+')');
            }
        }

        var mainArraySpecNewly = new Array(); 
        var DataArraySpecNewly = new Array();
        var subArraySpecNewly = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Newly_Submitted_Opportunities_By_Specified_Rep}',
            function(result, event){
                console.log('PLEASE LOOK THERE::::: '+JSON.stringify(result))
                if (event.status) {
                    for (var key in result) {

                        DataArraySpecNewly = new Array();

                        mainArraySpecNewly = new Array(); 

                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            subArraySpecNewly = new Array();
                            var amount = item.amount;
                            if(amount != ""){
                                amount = parseInt(amount);
                                subArraySpecNewly.push(item.valueindex, item.amount ? item.amount : 0);
                                DataArraySpecNewly.push(subArraySpecNewly);
                                if(typeof NewlySubmittedOpportunitiesDataCountPerMonthSpecNewly[item.valueindex] === 'undefined') {
                                    NewlySubmittedOpportunitiesDataCountPerMonthSpecNewly[item.valueindex] = amount;
                                }
                                else{
                                    NewlySubmittedOpportunitiesDataCountPerMonthSpecNewly[item.valueindex] += amount;
                                }
                            }
                        }

                        mainArraySpecNewly = {name:"newlySubmittedData", data:DataArraySpecNewly};
                        NewlySubmittedOpportunitiesDataSpecNewly.push(mainArraySpecNewly);
                    }
                    
                    NewlySubmittedOpportunitiesSpec();
                    let setted_month = []
                    NewlySubmittedOpportunitiesDataSpecNewly[0].data.forEach(el => setted_month.push(el[0]))

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            NewlySubmittedOpportunitiesDataSpecNewly[0].data.push([i, 0])
                        }
                    }
                    NewlySubmittedOpportunitiesDataSpecNewly[0].data.sort((a, b) => b[0] - a[0]).reverse()
                    RenderNewlySubmittedSpecifiedOpportunitiesLast12Months(NewlySubmittedOpportunitiesDataSpecNewly);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Newly Submitted Opportunities Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Newly Submitted Opportunities Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );  

    function RenderNewlySubmittedSpecifiedOpportunitiesLast12Months(NewlySubmittedOpportunitiesData){

        var NewlySubmittedOpportunitiesLastTwelveMonths = Highcharts.chart('newly_submitted_specified', {

            credits: {
                enabled: false
            },
            chart: {

                type: 'line',

                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_Specified&title=Newly Submitted Specified Opportunities Last 12 Months&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: NewlySubmittedOpportunitiesCategoriesSpec,
                min: 0,
                max: 11
            },
            yAxis: {
                min: 0,
                title: {
                    text: '# of Opportunities'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/># of Opportunities: ' + this.y;
                }
            },
            legend: {
                layout: 'vertical',
                align: 'center',
                verticalAlign: 'bottom',
                enabled: false
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    events: {
                        click: function(event) {

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_Specified&title=Newly Submitted Specified Opportunities Last 12 Months&click=month-point';
                            url += '&duration=&month='+month+'&year='+year+'&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: NewlySubmittedOpportunitiesData
        });

        //For redraw the chart to add colors to the legend symbols
        NewlySubmittedOpportunitiesLastTwelveMonths.addSeries({"data":[]});
        NewlySubmittedOpportunitiesLastTwelveMonths.series[NewlySubmittedOpportunitiesLastTwelveMonths.series.length - 1].remove();
    }
</script>
<script>

    /* ---------------------- Lost Specified Opportunities Last 12 Months ------------------------ */
    var LostOpptysDataCountPerMonthSpec = new Array();
    var LostOpptysDataSpec = new Array();
    var LostOpptysCategoriesSpec = new Array();
    
    function LostOpportunitiesSpec() {
        
        for (var i = 11; i >= 0; i--) {
            if(typeof LostOpptysDataCountPerMonthSpec[11-i] === 'undefined') {
                LostOpptysDataCountPerMonthSpec[11-i] = 0;
            }
            LostOpptysCategoriesSpec.push(Last12MonthsCategories[i]+ 
            ' ('+LostOpptysDataCountPerMonthSpec[11-i]+')');
        }
    }
    
    var dataArraySpec = new Array();

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Lost_Specified_Opportunities}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();  

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        var subArray = new Array();
                        var amount = item.amount;
                        if(amount != ""){
                            amount = parseInt(amount);
                            subArray.push(item.valueindex, item.amount);
                            dataArraySpec.push(subArray);
                            if(typeof LostOpptysDataCountPerMonthSpec[item.valueindex] === 'undefined') {
                                LostOpptysDataCountPerMonthSpec[item.valueindex] = amount;
                            }
                            else{
                                LostOpptysDataCountPerMonthSpec[item.valueindex] += amount;
                            }
                        }
                    }
                }

                var mainArray = {name:"lostOpportunities", data:dataArraySpec};
                LostOpptysDataSpec.push(mainArray);

                LostOpportunitiesSpec();
                let setted_month = []
                LostOpptysDataSpec[0].data.forEach(el => setted_month.push(el[0]))

                for(let i = 0; i<12; i++){
                    if(!setted_month.includes(i)){
                        LostOpptysDataSpec[0].data.push([i, 0])
                    }
                }
                LostOpptysDataSpec[0].data.sort((a, b) => b[0] - a[0]).reverse()
                RenderChartLostSpecifiedOpportunities(LostOpptysDataSpec);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Lost Specified Opportunities Last 12 Months...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Lost Opportunities Specified Last 12 Months...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartLostSpecifiedOpportunities(LostOpptysData){
    
        var LostOpportunitiesLastTwelveMonths = Highcharts.chart('lost_specified', {
            credits: {
                enabled: false
            },
            chart: {
                
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_Specified&title=Lost Specified Opportunities Last 12 Months&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: LostOpptysCategoriesSpec,
                min:0,
                max:11
            },
            yAxis: {
                min: 0,
                title: {
                    text: '# of Opportunities'
                },
                allowDecimals: false
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/># of Opportunities: ' + this.y;
                }
            },
            legend: {
                layout: 'vertical',
                align: 'center',
                verticalAlign: 'bottom',
                enabled: false
            },             
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    
                    events: {
                        click: function(event) { 
                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';
                            
                            
                            var chartName = "Lost Specified Opportunities Last 12 Months";          
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_Specified&title='+encodeURI(chartName)+'&click=month-point';                                 
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: LostOpptysData
        });

        //For redraw the chart to add colors to the legend symbols
        LostOpportunitiesLastTwelveMonths.addSeries({"data":[]});
        LostOpportunitiesLastTwelveMonths.series[LostOpportunitiesLastTwelveMonths.series.length - 1].remove();

    }

</script>



    <script>
        /* -------------------- Win Rate by Specified Rep ------------------------ */
        var WinRateData = new Array();
        var WinRateCategoriesSpecified = new Array();
        var midArray;

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Win_Rate_Specified_New}',
            function(result, event){

                if (event.status) {

   
                    const specified_rep_map = {}
                    const main_data = []
                    result.forEach(rep => {
                        if(!specified_rep_map[rep.Specified_Rep__r.Name]){
                            specified_rep_map[rep.Specified_Rep__r.Name] = [rep];
                        }else{
                            specified_rep_map[rep.Specified_Rep__r.Name].push(rep);
                        }
                    })
                    let counter_win = 0
                    for(let char in specified_rep_map){
                        let counter_won = 0
                        let counter_lost = 0
                        let total_opp = 0
                        specified_rep_map[char].forEach(el => {
                            if(el.StageName == 'Closed Won'){
                                counter_won++
                            }else if(el.StageName == 'Closed Lost'){
                                counter_lost++
                            }

                            total_opp++;
                        })
                        let win_percent = counter_won == 0 ? 0 : (counter_won * 100)/total_opp;
                        main_data.push({
                            name: char,
                            data: [[counter_win, win_percent]],
                            custom: char
                        })
                        // WinRateCategoriesSpecified.push(char)
                        counter_win++;
                    }
                    
                    if(main_data.length > 0){
                        main_data.forEach(el => {
                            WinRateCategoriesSpecified.push(el.name)
                        })
                    }
                    RenderChartWinRateSpecified(main_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Win Rate...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                        console.log('Error occured in Win Rate...');
                        console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderChartWinRateSpecified(WinRateData){
            var winRateSMDSpec = Highcharts.chart('win_rate_specified', {
                credits:{
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Win_Rate_Specified&title=Win Rate by Specified Rep&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,  
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getSpecColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name;
                    }     
                },
                title: {
                    text: ''
                },
                subtitle: {
                    text: ''
                },
                xAxis: {
                    categories: WinRateCategoriesSpecified,
                    crosshair: false,
                    min: 0 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Rate (%)'
                    }
                },
                tooltip: {
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                        + '</span><br/>Win Rate: '+this.y+'%';
                    },
                    shared: false
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        minPointLength: 5,
                        cursor: 'pointer',
                        events: {
                            click: function(event) { 
                                
                                var category = event.point.category;
                                // var duration = this.userOptions.name;
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Win_Rate_Specified&title=Win Rate by Specified Rep&click=bar';
                                url += '&duration=&year=&str='+category;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                                
                            }
                        }
                    }
                },
                series: WinRateData
            });
            //For redraw the chart to add colors to the legend symbols
            winRateSMDSpec.addSeries({"data":[]});
            winRateSMDSpec.series[winRateSMDSpec.series.length - 1].remove();
        }
    </script>



























    


    <!-- Refferall Graphs -->
    <script>
        /* --------------------- Monthly_Sales_Last_12_Months_Refferral_H ------------------------- */
        var MonthlySalesData = new Array();

        var mainArray = new Array();
        var midArray;
        var subArray = new Array();

        function getMapLast12MonthSpec(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = month-1;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }

                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }
            return year_month_obj;
        }

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Refferal_Reps_Sales_Last_12_Months}',
            function(result, event){

                if (event.status) {
                    const month_year_map = getMapLast12MonthSpec();

                    const spec_rep_obj = {}
                    const spec_rep_data = []

                    result.forEach(el => {
                        if(!spec_rep_obj[el.name]){
                            spec_rep_obj[el.name] = [el]
                        }else{
                            spec_rep_obj[el.name].push(el)
                        }
                    })

                    for(let char in spec_rep_obj){
                        const month_amount = []
                        spec_rep_obj[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        spec_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })
                    }
                    console.log('spec_rep_data: '+JSON.stringify(spec_rep_data))
                    RenderMonthlySalesLast12MonthsRefRep(spec_rep_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Monthly Sales Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Monthly Sales Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderMonthlySalesLast12MonthsRefRep(MonthlySalesData){

                var monthlySalesLastTwelveMonths = Highcharts.chart('Monthly_Sales_Last_12_Months_Ref_Rep', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Refferral_H&title=Sales Last 12 Months by Referral Rep&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: Last12MonthsCategories,
                    min: 0,
                    max: 11,
                    labels: {
                        useHTML: true,
                        formatter: function(){

                            var monthYearList = this.value.split('\'');
                            var year = '20'+monthYearList[1];
                            var month = getMonthNumberFromMonthName(monthYearList[0]);
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Refferral_H&title=Sales Last 12 Months by Referral Rep&click=left&dashboard=SMD_USA&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function () {
                        return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                            this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    },
                    split: true,
                    positioner: function(labelWidth, labelHeight, point) {
                        return {
                            x: point.plotX - point.h/2 + labelWidth/2,
                            y: point.plotY
                        };
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getReferralColor(this.name);
                        //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        enabled: true,
                        events: {
                            legendItemClick: function(event) {

                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Refferral_H&title=Sales Last 12 Months by Referral Rep&click=legend';
                                url += '&duration=&str='+event.target.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                                event.preventDefault();
                                
                            },
                            click: function(event) { 

                                var d = new Date();
                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                                var duration = '';

                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Refferral_H&title=Sales Last 12 Months by Referral Rep&click=bar';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: MonthlySalesData
            });

            //For redraw the chart to add colors to the legend symbols
            monthlySalesLastTwelveMonths.addSeries({"data":[]});
            monthlySalesLastTwelveMonths.series[monthlySalesLastTwelveMonths.series.length - 1].remove();

        }
    </script>

    <script>
            
        /* ---------------- Pre-Orders Pipeline last 12 months by Referral Rep ----------------------*/
        var SalesRepTotalPipelineData = new Array();
        
        var SalesRepTotalPipelineCategories_Temp = new Array();
        var SalesRepTotalPipelineCategories = new Array();
        function getMapLast12Month(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = 12 - month;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }
                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }

            return year_month_obj;
        }
        var mainArray = new Array(); 
        var midArray;
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Refferral_Reps_Total_Pipeline_Pre_Order_Last_12_Months}',
            function(result, event){
                if (event.status) {
                    const month_year_map = getMapLast12Month();
                    const sales_rep_data = []
                    for(let char in result){
                        const month_amount = []
                        result[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        sales_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })

                    }

                    console.log('sales_rep_data: '+JSON.stringify(sales_rep_data))
                    RenderCompanyPipelinePreorderLast12MonthsbyRefTeam(sales_rep_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Pipeline Last 12 Months by Sales Rep / Team...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Pipeline Last 12 Months by Sales Rep / Team...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyPipelinePreorderLast12MonthsbyRefTeam(SalesRepTotalPipelineData){
        
            var salesRepsTotalPipelineLastTwelveMonths = Highcharts.chart('preorderpipeline_refrep', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Pre-Orders Pipeline last 12 months by Referral Rep";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Ref_Reps_Total_Pipeline_SMD_USA&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br>'+this.series.userOptions.name+'<br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getReferralColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                
                                //var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = '20' + YearIndex
                                var duration = '';

                                var chartName = "Pre-Orders Pipeline last 12 months by Referral Rep";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Ref_Reps_Total_Pipeline_SMD_USA&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                    event.point.series.userOptions.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            },
                            afterAnimate: function () {
                                this.chart.redraw();
                            }
                        }
                    }
                },
                
                series: SalesRepTotalPipelineData
                
            });

            //For redraw the chart to add colors to the legend symbols
            salesRepsTotalPipelineLastTwelveMonths.addSeries({"data":[]});
            salesRepsTotalPipelineLastTwelveMonths.series[salesRepsTotalPipelineLastTwelveMonths.series.length - 1].remove();

        }

    </script>

    <script>
        /* --------------- Sales Forecast by Referral Rep ----------------------*/
        let ForecastDataReff = new Array();
        let midArrayRef;
        let mainArrayReff = new Array();
        let subArrayReff = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Sales_Forecast_Pipeline_Refferrall}',
            function(result, event){
                
                if (event.status) {
                    for (let key in result) {
                        mainArrayReff = new Array();
                        subArrayReff = new Array();
                        let i = 0;
                        
                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            if(i == 0){
                                subArrayReff = new Array();
                                let checkNum = item.misc + "abc";
                                let valueIs = 0;
                                if(checkNum == "abc" || checkNum == "0abc"){
                                
                                valueIs = null;
                                }else{
                                
                                valueIs = parseFloat(item.misc);
                                }
                                
                                subArrayReff.push(0, valueIs);
                                mainArrayReff.push(subArrayReff);
                            }
                            
                            subArrayReff = new Array();
                            subArrayReff.push(parseInt(item.valueindex + 1), item.amount);
                            mainArrayReff.push(subArrayReff);
                            i++;
                        }

                        midArrayRef = {name:key, data:mainArrayReff, custom:"{!YEAR(TODAY())}"};
                        ForecastDataReff.push(midArrayRef);
                    }
                    RenderSalesForecastPipelineReff(ForecastDataReff);
                } else if (event.type === 'exception') {
                    
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderSalesForecastPipelineReff(ForecastData){
        
            var salesForecastPipeline = Highcharts.chart('sales_forecast_pipeline_by_ref', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Reff_Pipeline_SMD&title=Sales Forecast by Referral Rep&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: Next12MonthsCategories,
                    min: 0,
                    max: 12, 
                    labels: {
                        useHTML: true,
                        formatter: function(){
                            var monthYearList = this.value.split('\'');
                            var year = '20'+monthYearList[1];
                            var month = getMonthNumberFromMonthName(monthYearList[0]);
                            var urlString = '';
                            if(month == 'Missed'){
                                urlString = 'duration='+month;
                            } else {
                                urlString = 'year='+year+'&month='+month;
                            }
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Reff_Pipeline_SMD&title=Sales Forecast by Referral Rep&click=left&dashboard=SMD_USA&'+urlString+'\' target=\'blank\'>'+this.value+'</a>';    
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.series.name 
                        + '</span><br/><span style="font-weight: bold">' + this.x 
                        + '</span><br/>Expected Sales: ' + this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                    },
                    split: true
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getReferralColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Reff_Pipeline_SMD&title=Sales Forecast by Referral Rep&click=legend';
                                url += '&duration=&str='+this.userOptions.name+'&month=&year=';
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                                event.preventDefault();
                            },
                            click: function(event) {                        
                                var numberToMinus = parseInt(event.point.x);
                                var d = new Date();
                                d.setMonth(d.getMonth() + numberToMinus);
                                
                                var month = d.getMonth();
                                var year = d.getFullYear();
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Reff_Pipeline_SMD&title=Sales Forecast by Referral Rep&click=bar';
                                url += '&duration='+event.point.category+'&str='+this.userOptions.name+'&month='+month+'&year='+year;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: ForecastData
            });

            //For redraw the chart to add colors to the legend symbols
            salesForecastPipeline.addSeries({"data":[]});
            salesForecastPipeline.series[salesForecastPipeline.series.length - 1].remove();

        }

    </script>

    <script>
        /* ---------------------- Company Total Referral Pipeline Last 12 Months ---------------------- */
        var CompanyTotalPipelineData = new Array();

        //Calculate map of last 12 year-month
        function getMapLast12Month(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = 12 - month;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }
                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }

            return year_month_obj;
        }
        
        var DataArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Company_Total_Pipeline_Last_12_Months_Referral}',
            function(result, event){

                if (event.status) {
                    const month_year_map = getMapLast12Month();

                    const dashboard_arr = []
                    const month_amount = []
                    result.forEach(el => {
                        for(let char in month_year_map){
                            if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                month_amount.push([char, el.amount])
                            }
                        }
                    })
                    let setted_month = []
                    month_amount.forEach(el => {
                        setted_month.push(el[0])
                    })

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i.toString())){
                            month_amount.push([i.toString(), 0])
                        }
                    }
                    month_amount.sort((a, b) => b[0] - a[0]).reverse()
                    dashboard_arr.push({
                        name: 'companydata',
                        data: month_amount
                    })

                    RenderCompanyTotalPipelineLast12MonthsReff(dashboard_arr);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Company Total Referral Pipeline Last 12 Monthss...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Company Total Pipeline Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyTotalPipelineLast12MonthsReff(CompanyTotalPipelineData){
        
            Highcharts.chart('total_pipeline_referral', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Company Total Referral Pipeline Last 12 Months";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_Referral_SMD_USA&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    enabled: false
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {

                                var chartName = "Company Total Referral Pipeline Last 12 Months";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_Referral_SMD_USA&title='+encodeURI(chartName)+'&click=legend';
                            url += '&duration=&str='+event.target.userOptions.name+'&year=';
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                                event.preventDefault();
                                
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                let full_year = '20'
                                // var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = full_year + YearIndex
                                var duration = '';

                                var chartName = "Company Total Referral Pipeline Last 12 Months";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_Referral_SMD_USA&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                    event.point.series.userOptions.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                
                series: CompanyTotalPipelineData
                
            });
        }
    </script>

    <script>
                    
        /* ---------------- Pipeline Last 12 Months by Referral Rep ----------------------*/
        var SalesRepTotalPipelineData = new Array();
        
        var SalesRepTotalPipelineCategories_Temp = new Array();
        var SalesRepTotalPipelineCategories = new Array();
        function getMapLast12Month(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = 12 - month;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }
                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }

            return year_month_obj;
        }
        var mainArray = new Array(); 
        var midArray;
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Referral_Reps_Total_Pipeline_Last_12_Months}',
            function(result, event){
                if (event.status) {
                    const month_year_map = getMapLast12Month();
                    const sales_rep_data = []
                    for(let char in result){
                        const month_amount = []
                        result[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        sales_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })

                    }
                    RenderCompanyPipelineLast12MonthByRefRep(sales_rep_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Pipeline Last 12 Months by Referral Rep...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Pipeline Last 12 Months by Referral Rep...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyPipelineLast12MonthByRefRep(SalesRepTotalPipelineData){
        
            var salesRepsTotalPipelineLastTwelveMonths = Highcharts.chart('pipeline_by_ref_rep', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Pipeline Last 12 Months by Referral Rep";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Referral_Pipeline_Last_12_Month&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br>'+this.series.userOptions.name+'<br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getReferralColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                
                                //var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = '20' + YearIndex
                                var duration = '';

                                var chartName = "Pipeline Last 12 Months by Referral Rep";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Referral_Pipeline_Last_12_Month&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                    event.point.series.userOptions.name;
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            },
                            afterAnimate: function () {
                                this.chart.redraw();
                            }
                        }
                    }
                },
                
                series: SalesRepTotalPipelineData
                
            });

            //For redraw the chart to add colors to the legend symbols
            salesRepsTotalPipelineLastTwelveMonths.addSeries({"data":[]});
            salesRepsTotalPipelineLastTwelveMonths.series[salesRepsTotalPipelineLastTwelveMonths.series.length - 1].remove();

        }

    </script>
    <script>

        
        /* ------------------- Newly Submitted Referral Opportunities Last 12 Months ------------------------ */
        var NewlySubmittedOpportunitiesDataCountPerMonthRef = new Array();
        var NewlySubmittedOpportunitiesDataRef = new Array();
        var NewlySubmittedOpportunitiesCategoriesRef = new Array();

        
        function NewlySubmittedOpportunitiesRef() {
            
            for (var i = 11; i >= 0; i--) {

                if(typeof NewlySubmittedOpportunitiesDataCountPerMonthRef[11-i] === 'undefined') {
                    NewlySubmittedOpportunitiesDataCountPerMonthRef[11-i] = 0;
                }
                NewlySubmittedOpportunitiesCategoriesRef.push(Last12MonthsCategories[i]+ 
                                                        ' ('+NewlySubmittedOpportunitiesDataCountPerMonthRef[11-i]+')');
            }
        }

        var mainArray = new Array(); 
        var DataArray = new Array();
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.SpecifiedDashboardController.Newly_Submitted_Opportunities_By_Referrall_Rep}',
            function(result, event){

                if (event.status) {
                    for (var key in result) {

                        DataArray = new Array();

                        mainArray = new Array(); 

                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            subArray = new Array();
                            var amount = item.amount;
                            if(amount != ""){
                                amount = parseInt(amount);
                                subArray.push(item.valueindex, item.amount ? item.amount : 0);
                                DataArray.push(subArray);
                                if(typeof NewlySubmittedOpportunitiesDataCountPerMonthRef[item.valueindex] === 'undefined') {
                                    NewlySubmittedOpportunitiesDataCountPerMonthRef[item.valueindex] = amount;
                                }
                                else{
                                    NewlySubmittedOpportunitiesDataCountPerMonthRef[item.valueindex] += amount;
                                }
                            }
                        }

                        MainArray = {name:"newlySubmittedData", data:DataArray};
                        NewlySubmittedOpportunitiesDataRef.push(MainArray);
                    }
                    
                    NewlySubmittedOpportunitiesRef();
                    let setted_month = []
                    NewlySubmittedOpportunitiesDataRef[0].data.forEach(el => setted_month.push(el[0]))

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            NewlySubmittedOpportunitiesDataRef[0].data.push([i, 0])
                        }
                    }
                    NewlySubmittedOpportunitiesDataRef[0].data.sort((a, b) => b[0] - a[0]).reverse()
                    RenderNewlySubmittedReferralOpportunitiesLast12Months(NewlySubmittedOpportunitiesDataRef);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Newly Submitted Opportunities Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Newly Submitted Opportunities Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        ); 

        function RenderNewlySubmittedReferralOpportunitiesLast12Months(NewlySubmittedOpportunitiesData){

            var NewlySubmittedOpportunitiesLastTwelveMonthsRef = Highcharts.chart('newly_submitted_referral', {

                credits: {
                    enabled: false
                },
                chart: {

                    type: 'line',

                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Referral_Opportunities_Last_12_Month&title=Newly Submitted Referral Opportunities Last 12 Months&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: NewlySubmittedOpportunitiesCategoriesRef,
                    min: 0,
                    max: 11
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: '# of Opportunities'
                    }
                },
                tooltip: {
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                        + '</span><br/># of Opportunities: ' + this.y;
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'center',
                    verticalAlign: 'bottom',
                    enabled: false
                },
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            click: function(event) {

                                var d = new Date();
                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                                var duration = '';

                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Referral_Opportunities_Last_12_Month&title=Newly Submitted Referral Opportunities Last 12 Months&click=month-point';
                                url += '&duration=&month='+month+'&year='+year+'&str=';
                                url += '&dashboard=SMD_USA';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: NewlySubmittedOpportunitiesData
            });

            //For redraw the chart to add colors to the legend symbols
            NewlySubmittedOpportunitiesLastTwelveMonthsRef.addSeries({"data":[]});
            NewlySubmittedOpportunitiesLastTwelveMonthsRef.series[NewlySubmittedOpportunitiesLastTwelveMonthsRef.series.length - 1].remove();
        }
    </script>


<script>
    /* ---------------------- Lost Referral Opportunities Last 12 Months ------------------------ */
    let LostOpptysDataCountPerMonthRef = new Array();
    let LostOpptysDataRef = new Array();
    let LostOpptysCategoriesRef = new Array();
    
    function LostOpportunitiesRef() {
        for (let i = 11; i >= 0; i--) {
            if(typeof LostOpptysDataCountPerMonthRef[11-i] === 'undefined') {
                LostOpptysDataCountPerMonthRef[11-i] = 0;
            }
            LostOpptysCategoriesRef.push(Last12MonthsCategories[i]+ 
            ' ('+LostOpptysDataCountPerMonthRef[11-i]+')');
        }
    }
    
    let dataArrayRef = new Array();

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Lost_Referrall_Opportunities}',
        function(result, event){

            if (event.status) {
                for (let key in result) {

                    let mainArray = new Array();  

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        let subArray = new Array();
                        let amount = item.amount;
                        if(amount != ""){
                            amount = parseInt(amount);
                            subArray.push(item.valueindex, item.amount);
                            dataArrayRef.push(subArray);
                            if(typeof LostOpptysDataCountPerMonthRef[item.valueindex] === 'undefined') {
                                LostOpptysDataCountPerMonthRef[item.valueindex] = amount;
                            }
                            else{
                                LostOpptysDataCountPerMonthRef[item.valueindex] += amount;
                            }
                        }
                    }
                }

                mainArray = {name:"lostOpportunities", data:dataArrayRef};
                LostOpptysDataRef.push(mainArray);

                LostOpportunitiesRef();
                let setted_month = []
                LostOpptysDataRef[0].data.forEach(el => setted_month.push(el[0]))

                for(let i = 0; i<12; i++){
                    if(!setted_month.includes(i)){
                        LostOpptysDataRef[0].data.push([i, 0])
                    }
                }
                LostOpptysDataRef[0].data.sort((a, b) => b[0] - a[0]).reverse()
                RenderChartLostReferrallOpportunities(LostOpptysDataRef);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Lost Opportunities Specified Last 12 Months...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Lost Opportunities Specified Last 12 Months...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartLostReferrallOpportunities(LostOpptysData){
    
        var LostOpportunitiesLastTwelveMonthsRef = Highcharts.chart('lost_referral', {
            credits: {
                enabled: false
            },
            chart: {
                
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_Referrall&title=Lost Referral Opportunities Last 12 Months&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: LostOpptysCategoriesRef,
                min:0,
                max:11
            },
            yAxis: {
                min: 0,
                title: {
                    text: '# of Opportunities'
                },
                allowDecimals: false
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/># of Opportunities: ' + this.y;
                }
            },
            legend: {
                layout: 'vertical',
                align: 'center',
                verticalAlign: 'bottom',
                enabled: false
            },             
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    
                    events: {
                        click: function(event) { 
                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';
                            
                            
                            var chartName = "Lost Referral Opportunities Last 12 Months";          
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_Referrall&title='+encodeURI(chartName)+'&click=month-point';                                 
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str=';
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: LostOpptysData
        });

        //For redraw the chart to add colors to the legend symbols
        LostOpportunitiesLastTwelveMonthsRef.addSeries({"data":[]});
        LostOpportunitiesLastTwelveMonthsRef.series[LostOpportunitiesLastTwelveMonthsRef.series.length - 1].remove();

    }

    </script>

<script>
    /* -------------------- Win Rate by Referral Rep ------------------------ */
    var WinRateDataRef = new Array();
    var WinRateCategoriesRef = new Array();
    var winRateMidArrayRef;

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Win_Rate_Ref_New}',
        function(result, event){

            if (event.status) {
                const specified_rep_map = {}
                    const main_data = []
                    result.forEach(rep => {
                        if(!specified_rep_map[rep.Referral_Sales_Rep__r.Name]){
                            specified_rep_map[rep.Referral_Sales_Rep__r.Name] = [rep];
                        }else{
                            specified_rep_map[rep.Referral_Sales_Rep__r.Name].push(rep);
                        }
                    })
                    let counter_win = 0
                    for(let char in specified_rep_map){
                        let counter_won = 0
                        let counter_lost = 0
                        let total_opp = 0
                        specified_rep_map[char].forEach(el => {
                            if(el.StageName == 'Closed Won'){
                                counter_won++
                            }else if(el.StageName == 'Closed Lost'){
                                counter_lost++
                            }

                            total_opp++;
                        })
                        let win_percent = counter_won == 0 ? 0 : (counter_won * 100)/total_opp;
                        main_data.push({
                            name: char,
                            data: [[counter_win, win_percent]],
                            custom: char
                        })
                        // WinRateCategoriesRef.push(char)
                        counter_win++;
                    }

                if(main_data.length > 0){
                    main_data.forEach(el => {
                        WinRateCategoriesRef.push(el.name)
                    })
                }
                console.log('WinRateCategoriesRef: '+WinRateCategoriesRef)
                console.log('main_data: ', JSON.stringify(main_data))

                RenderChartWinRateReferral(main_data);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Win Rate by Referral Rep...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in Win Rate by Referral Repe...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartWinRateReferral(WinRateData){
        var winRateSMDRef = Highcharts.chart('win_rate_referral', {
            credits:{
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Win_Rate_Referrall&title=Win Rate by Referral Rep&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,  
                enabled: true,
                labelFormatter: function () {
                    this.color = getReferralColor(this.name);
                    return '<span style="color: '+this.color+'"></span>' + this.name;
                }     
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: WinRateCategoriesRef,
                crosshair: false,
                min: 0,  
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Rate (%)'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/>Win Rate: '+this.y+'%';
                },
                shared: false
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    minPointLength: 5,
                    cursor: 'pointer',
                    events: {
                        click: function(event) { 
                            
                            var category = event.point.category;
                            // var duration = this.userOptions.name;
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Win_Rate_Referrall&title=Win Rate by Referral Rep&click=bar';
                            url += '&duration=&year=&str='+category;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                            
                        }
                    }
                }
            },
            series: WinRateData
        });

        //For redraw the chart to add colors to the legend symbols
        winRateSMDRef.addSeries({"data":[]});
        winRateSMDRef.series[winRateSMDRef.series.length - 1].remove();
    }
</script>

<!-- Manufacture -->
 <!-- Refferall -->
 <script>
    /* --------------------- Monthly Sales Last 12 Months ------------------------- */
    var MonthlySalesData = new Array();

    var mainArray = new Array();
    var midArray;
    var subArray = new Array();

    function getMapLast12MonthMan(){
        let date = new Date();
        date.setDate(1);
        let year_month_obj = {};
        for(let month = 1; month <= 12; month++){
            let index = month-1;
            let iteration_month = date.getMonth() + 1;
            let iteration_year = date.getFullYear();

            year_month_obj[index] = {
                month: iteration_month,
                year: iteration_year
            }

            //month_year_map[month] = year_month_obj;
            date.setMonth(date.getMonth() - 1);
        }
        return year_month_obj;
    }

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Manuf_Reps_Sales_Last_12_Months}',
        function(result, event){

            if (event.status) {
                const month_year_map = getMapLast12MonthMan();

                const spec_rep_obj = {}
                const spec_rep_data = []

                result.forEach(el => {
                    if(!spec_rep_obj[el.name]){
                        spec_rep_obj[el.name] = [el]
                    }else{
                        spec_rep_obj[el.name].push(el)
                    }
                })

                for(let char in spec_rep_obj){
                    const month_amount = []
                    spec_rep_obj[char].forEach(el => {
                        for(let char in month_year_map){
                            if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                month_amount.push([char, el.amount])
                            }
                        }
                    })
                    let setted_month = []
                    month_amount.forEach(el => {
                        setted_month.push(el[0])
                    })
                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i.toString())){
                            month_amount.push([i.toString(), 0])
                        }
                    }
                    month_amount.sort((a, b) => b[0] - a[0]).reverse()

                    spec_rep_data.push({
                        name: char,
                        data: month_amount,
                        custom: char
                    })
                }
                RenderMonthlySalesLast12MonthsManRep(spec_rep_data);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Monthly Sales Last 12 Months...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Monthly Sales Last 12 Months...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderMonthlySalesLast12MonthsManRep(MonthlySalesData){

            var monthlySalesLastTwelveMonths = Highcharts.chart('Monthly_Sales_Last_12_Months_Man_Rep', {
            credits: {
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Manuf_H&title=Sales Last 12 Months by Manufacturer Rep&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: Last12MonthsCategories,
                min: 0,
                max: 11,
                labels: {
                    useHTML: true,
                    formatter: function(){

                        var monthYearList = this.value.split('\'');
                        var year = '20'+monthYearList[1];
                        var month = getMonthNumberFromMonthName(monthYearList[0]);
                        return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Manuf_H&title=Sales Last 12 Months by Manufacturer Rep&click=left&dashboard=SMD_USA&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                    }
                } 
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Amount ($)'
                }
            },
            tooltip: {
                shared: false,
                formatter: function () {
                    return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                        this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                },
                split: true,
                positioner: function(labelWidth, labelHeight, point) {
                    return {
                        x: point.plotX - point.h/2 + labelWidth/2,
                        y: point.plotY
                    };
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,
                enabled: true,
                labelFormatter: function () {
                    this.color = getSpecColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    cursor: 'pointer',
                    enabled: true,
                    events: {
                        legendItemClick: function(event) {

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Manuf_H&title=Sales Last 12 Months by Manufacturer Rep&click=legend';
                            url += '&duration=&str='+event.target.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                            event.preventDefault();
                            
                        },
                        click: function(event) { 

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_Manuf_H&title=Sales Last 12 Months by Manufacturer Rep&click=bar';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: MonthlySalesData
        });

        //For redraw the chart to add colors to the legend symbols
        monthlySalesLastTwelveMonths.addSeries({"data":[]});
        monthlySalesLastTwelveMonths.series[monthlySalesLastTwelveMonths.series.length - 1].remove();

    }
</script>

<script>
    
/* ---------------- Pipeline Last 12 Months by Sales Rep / Team ----------------------*/
var SalesRepTotalPipelineData = new Array();

var SalesRepTotalPipelineCategories_Temp = new Array();
var SalesRepTotalPipelineCategories = new Array();
function getMapLast12Month(){
    let date = new Date();
    date.setDate(1);
    let year_month_obj = {};
    for(let month = 1; month <= 12; month++){
        let index = 12 - month;
        let iteration_month = date.getMonth() + 1;
        let iteration_year = date.getFullYear();

        year_month_obj[index] = {
            month: iteration_month,
            year: iteration_year
        }
        //month_year_map[month] = year_month_obj;
        date.setMonth(date.getMonth() - 1);
    }

    return year_month_obj;
}
var mainArray = new Array(); 
var midArray;
var subArray = new Array();

Visualforce.remoting.timeout = 120000;

Visualforce.remoting.Manager.invokeAction(
'{!$RemoteAction.SpecifiedDashboardController.Manuf_Reps_Total_Pipeline_Pre_Order_Last_12_Months}',
    function(result, event){
        if (event.status) {
            const month_year_map = getMapLast12Month();
            const sales_rep_data = []
            for(let char in result){
                const month_amount = []
                result[char].forEach(el => {
                    for(let char in month_year_map){
                        if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                            month_amount.push([char, el.amount])
                        }
                    }
                })
                let setted_month = []
                month_amount.forEach(el => {
                    setted_month.push(el[0])
                })
                for(let i = 0; i<12; i++){
                    if(!setted_month.includes(i.toString())){
                        month_amount.push([i.toString(), 0])
                    }
                }
                month_amount.sort((a, b) => b[0] - a[0]).reverse()

                sales_rep_data.push({
                    name: char,
                    data: month_amount,
                    custom: char
                })

            }
            RenderCompanyPipelinePreorderLast12MonthsbyManTeam(sales_rep_data);
        } else if (event.type === 'exception') {
            
                console.log('Exception has occured in Pipeline Last 12 Months by Sales Rep / Team...');
                console.log(event.message);
                console.log(event.where);
        } else {
            console.log('Error occured in Pipeline Last 12 Months by Sales Rep / Team...');
            console.log(event.message);
        }
    }, 
    {escape: true}
);

function RenderCompanyPipelinePreorderLast12MonthsbyManTeam(SalesRepTotalPipelineData){

    var salesRepsTotalPipelineLastTwelveMonths = Highcharts.chart('preorderpipeline_manrep', {
        credits: {
            enabled: false
        },
        title: {
            text: ''
        },
        chart: {
            events: {
                click: function(event) {
                    var chartName = "Pre-Orders Pipeline last 12 months by Referral Rep";
                    var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Reps_Total_Pipeline_Manuf_USA&title='+encodeURI(chartName)+'&click=chart';
                    url += '&duration=&str=';
                    url += '&dashboard=SMD_USA';
                    window.open(url, '_blank');
                }
            }
        },
        subtitle: {
            text: ''
        },
        
        yAxis: {
            min: 0,
            title: {
                text: 'Amount ($)'
            },
            allowDecimals: false
        },
        
        xAxis: {
            min: 0,
            categories: Last12MonthsReverseCategories,
            max:11
        },
        tooltip: {
            formatter: function () {
                return '<b style="color: '+this.color+'; font-weight:bold">' + 
                    this.x + '</b><br>'+this.series.userOptions.name+'<br> Amount: '+ this.y.toLocaleString('en-US', {
                        style: 'currency',
                        currency: 'USD',
                    });
            }
        },
        
        legend: {
            layout: 'horizontal',
            align: 'center',
            verticalAlign: 'bottom',
            floating: false,
            enabled: true,
            labelFormatter: function () {
                this.color = getSpecColor(this.name);
                return '<span style="color: '+this.color+'"></span>' + this.name ;
            }
        },
        
        plotOptions: {
            line: {
                dataLabels: {
                    enabled: false
                }
            },
            series: {
                label: {
                    connectorAllowed: false
                },
                marker: {
                    enabled: true
                },
                stickyTracking: false,
                cursor: 'pointer',
                events: {
                    legendItemClick: function(event) {
                    },
                    click: function(event) {
                        var d = new Date();

                        var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                        
                        var CategArray = event.point.category.split(" ");
                        var CurrentMonth = parseInt(d.getMonth()) + 1;
                        
                        var YearIndex = (CategArray[1]).replace("'", "");
                        
                        var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                        
                        //var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                        var year = '20' + YearIndex
                        var duration = '';

                        var chartName = "Pre-Orders Pipeline last 12 months by Referral Rep";
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Reps_Total_Pipeline_Manuf_USA&title='+encodeURI(chartName)+'&click=point';
                        url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                            event.point.series.userOptions.name;
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    },
                    afterAnimate: function () {
                        this.chart.redraw();
                    }
                }
            }
        },
        
        series: SalesRepTotalPipelineData
        
    });

    //For redraw the chart to add colors to the legend symbols
    salesRepsTotalPipelineLastTwelveMonths.addSeries({"data":[]});
    salesRepsTotalPipelineLastTwelveMonths.series[salesRepsTotalPipelineLastTwelveMonths.series.length - 1].remove();

}

</script>

<script>
/* --------------- Sales Forecast Pipeline ----------------------*/
let ForecastDataMan = new Array();
let midArrayMan;
let mainArrayMan = new Array();
let subArrayMan = new Array();

Visualforce.remoting.timeout = 120000;

Visualforce.remoting.Manager.invokeAction(
'{!$RemoteAction.SpecifiedDashboardController.Sales_Forecast_Pipeline_Manuf}',
    function(result, event){
        
        if (event.status) {
            for (let key in result) {
                mainArrayMan = new Array();
                subArrayMan = new Array();
                let i = 0;
                
                result[key].forEach(buildarray);
                
                function buildarray(item, index) {

                    if(i == 0){
                        subArrayMan = new Array();
                        let checkNum = item.misc + "abc";
                        let valueIs = 0;
                        if(checkNum == "abc" || checkNum == "0abc"){
                        
                        valueIs = null;
                        }else{
                        
                        valueIs = parseFloat(item.misc);
                        }
                        
                        subArrayMan.push(0, valueIs);
                        mainArrayMan.push(subArrayMan);
                    }
                    
                    subArrayMan = new Array();
                    subArrayMan.push(parseInt(item.valueindex + 1), item.amount);
                    mainArrayMan.push(subArrayMan);
                    i++;
                }

                midArrayMan = {name:key, data:mainArrayMan, custom:"{!YEAR(TODAY())}"};
                ForecastDataMan.push(midArrayMan);
            }
            RenderSalesForecastPipelineMan(ForecastDataMan);
        } else if (event.type === 'exception') {
            
                console.log('BLYAAAAAAAAAAAAAAAAAAAAAAAAAAA');
                console.log(event.message);
                console.log(event.where);
        } else {
            console.log('BLYAAAAAAAAAAAAAAAAAAAAAAAAAAA');
            console.log(event.message);
        }
    }, 
    {escape: true}
);

function RenderSalesForecastPipelineMan(ForecastData){

    var salesForecastPipeline = Highcharts.chart('sales_forecast_pipeline_by_man', {
        credits: {
            enabled: false
        },
        chart: {
            type: 'bar',
            events: {
                click: function(event) {
                    var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_Manuf_SMD&title=Sales Forecast by Manufacturer Rep&click=chart';
                    url += '&duration=&str=';
                    url += '&dashboard=SMD_USA';
                    window.open(url, '_blank');
                }
            }
        },
        title: {
            text: ''
        },
        xAxis: {
            categories: Next12MonthsCategories,
            min: 0,
            max: 12, 
            labels: {
                useHTML: true,
                formatter: function(){
                    var monthYearList = this.value.split('\'');
                    var year = '20'+monthYearList[1];
                    var month = getMonthNumberFromMonthName(monthYearList[0]);
                    var urlString = '';
                    if(month == 'Missed'){
                        urlString = 'duration='+month;
                    } else {
                        urlString = 'year='+year+'&month='+month;
                    }
                    return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_Manuf_SMD&title=Sales Forecast by Manufacturer Rep&click=left&dashboard=SMD_USA&'+urlString+'\' target=\'blank\'>'+this.value+'</a>';    
                }
            } 
        },
        yAxis: {
            min: 0,
            allowDecimals: false,
            title: {
                text: 'Amount ($)'
            }
        },
        tooltip: {
            shared: false,
            formatter: function(){
                return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.series.name 
                + '</span><br/><span style="font-weight: bold">' + this.x 
                + '</span><br/>Expected Sales: ' + this.y.toLocaleString('en-US', {
                    style: 'currency',
                    currency: 'USD',
                });
            },
            split: true
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'top',
            floating: false,
            enabled: true,
            labelFormatter: function () {
                this.color = getSpecColor(this.name);
                return '<span style="color: '+this.color+'"></span>' + this.name;
            }
        },
        plotOptions: {
            series: {
                stacking: 'normal',
                cursor: 'pointer',
                events: {
                    legendItemClick: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_Manuf_SMD&title=Sales Forecast by Manufacturer Rep&click=legend';
                        url += '&duration=&str='+this.userOptions.name+'&month=&year=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                        event.preventDefault();
                    },
                    click: function(event) {                        
                        var numberToMinus = parseInt(event.point.x);
                        var d = new Date();
                        d.setMonth(d.getMonth() + numberToMinus);
                        
                        var month = d.getMonth();
                        var year = d.getFullYear();
                        
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_Manuf_SMD&title=Sales Forecast by Manufacturer Rep&click=bar';
                        url += '&duration='+event.point.category+'&str='+this.userOptions.name+'&month='+month+'&year='+year;
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            }
        },
        series: ForecastData
    });

    //For redraw the chart to add colors to the legend symbols
    salesForecastPipeline.addSeries({"data":[]});
    salesForecastPipeline.series[salesForecastPipeline.series.length - 1].remove();

}

</script>


<script>
    /* --------------------- Sales Last 12 Months by Specified Rep ------------------------- */
    var MonthlySalesDataSpecifiedRep = new Array();

    var mainArraySpecifiedRepMonthly = new Array();
    var midArraySpecifiedRepMonthly;
    var subArraySpecifiedRepMonthly = new Array();

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Monthly_Sales_Last_12_Months_Specified}',
        function(result, event){

            if (event.status) {
                for (var key in result) {
                    mainArraySpecifiedRepMonthly = new Array();
                    
                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        subArraySpecifiedRepMonthly = new Array();
    
                        subArraySpecifiedRepMonthly.push(item.valueindex, item.amount);
                        mainArraySpecifiedRepMonthly.push(subArraySpecifiedRepMonthly);
                    }

                    midArraySpecifiedRepMonthly = {name:key, data:mainArraySpecifiedRepMonthly, custom:key};
    
                    MonthlySalesDataSpecifiedRep.push(midArraySpecifiedRepMonthly);
                }
                RenderMonthlySalesLast12MonthsSpecifiedRep(MonthlySalesDataSpecifiedRep);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Monthly Sales Last 12 Months...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Monthly Sales Last 12 Months...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderMonthlySalesLast12MonthsSpecifiedRep(MonthlySalesData){

            var monthlySalesLastTwelveMonths = Highcharts.chart('Monthly_Sales_Last_12_Months_Spec_Rep', {
            credits: {
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_H&title=Monthly Sales Last 12 Months - Hospitality&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: Last12MonthsCategories,
                min: 0,
                max: 11,
                labels: {
                    useHTML: true,
                    formatter: function(){

                        var monthYearList = this.value.split('\'');
                        var year = '20'+monthYearList[1];
                        var month = getMonthNumberFromMonthName(monthYearList[0]);
                        return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_H&title=Monthly Sales Last 12 Months - Hospitality&click=left&dashboard=SMD_USA&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                    }
                } 
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Amount ($)'
                }
            },
            tooltip: {
                shared: false,
                formatter: function () {
                    return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                        this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                },
                split: true,
                positioner: function(labelWidth, labelHeight, point) {
                    return {
                        x: point.plotX - point.h/2 + labelWidth/2,
                        y: point.plotY
                    };
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,
                enabled: true,
                labelFormatter: function () {
                    this.color = getSpecColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    cursor: 'pointer',
                    enabled: true,
                    events: {
                        legendItemClick: function(event) {

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_H&title=Monthly Sales Last 12 Months - Hospitality&click=legend';
                            url += '&duration=&str='+event.target.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                            event.preventDefault();
                            
                        },
                        click: function(event) { 

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_H&title=Monthly Sales Last 12 Months - Hospitality&click=bar';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: MonthlySalesData
        });

        //For redraw the chart to add colors to the legend symbols
        monthlySalesLastTwelveMonths.addSeries({"data":[]});
        monthlySalesLastTwelveMonths.series[monthlySalesLastTwelveMonths.series.length - 1].remove();

    }
</script>
<script>
    /* --------------------- Sales Last 12 Months by Referrall Rep ------------------------- */
    var MonthlySalesDataReferrallRep = new Array();

    var mainArrayReferrallRepMonthly = new Array();
    var midArrayReferrallRepMonthly;
    var subArrayReferrallRepMonthly = new Array();

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Monthly_Sales_Last_12_Months_Referrall}',
        function(result, event){

            if (event.status) {
                for (var key in result) {
                    mainArrayReferrallRepMonthly = new Array();
                    
                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        subArrayReferrallRepMonthly = new Array();
    
                        subArrayReferrallRepMonthly.push(item.valueindex, item.amount);
                        mainArrayReferrallRepMonthly.push(subArrayReferrallRepMonthly);
                    }

                    midArrayReferrallRepMonthly = {name:key, data:mainArrayReferrallRepMonthly, custom:key};
    
                    MonthlySalesDataReferrallRep.push(midArrayReferrallRepMonthly);
                }
                RenderMonthlySalesLast12MonthsReferrallRep(MonthlySalesDataReferrallRep);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Monthly Sales Last 12 Months...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Monthly Sales Last 12 Months...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderMonthlySalesLast12MonthsReferrallRep(MonthlySalesData){

            var monthlySalesLastTwelveMonthsReferrallSales = Highcharts.chart('Monthly_Sales_Last_12_Months_Ref_Rep', {
            credits: {
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Ref&title=Monthly Sales Last 12 Months - Hospitality&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: Last12MonthsCategories,
                min: 0,
                max: 11,
                labels: {
                    useHTML: true,
                    formatter: function(){

                        var monthYearList = this.value.split('\'');
                        var year = '20'+monthYearList[1];
                        var month = getMonthNumberFromMonthName(monthYearList[0]);
                        return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Ref&title=Monthly Sales Last 12 Months - Hospitality&click=left&dashboard=SMD_USA&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                    }
                } 
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Amount ($)'
                }
            },
            tooltip: {
                shared: false,
                formatter: function () {
                    return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                        this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                },
                split: true,
                positioner: function(labelWidth, labelHeight, point) {
                    return {
                        x: point.plotX - point.h/2 + labelWidth/2,
                        y: point.plotY
                    };
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,
                enabled: true,
                labelFormatter: function () {
                    this.color = getSpecColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    cursor: 'pointer',
                    enabled: true,
                    events: {
                        legendItemClick: function(event) {

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Ref&title=Monthly Sales Last 12 Months - Hospitality&click=legend';
                            url += '&duration=&str='+event.target.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                            event.preventDefault();
                            
                        },
                        click: function(event) { 

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Ref&title=Monthly Sales Last 12 Months - Hospitality&click=bar';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: MonthlySalesData
        });

        //For redraw the chart to add colors to the legend symbols
        monthlySalesLastTwelveMonthsReferrallSales.addSeries({"data":[]});
        monthlySalesLastTwelveMonthsReferrallSales.series[monthlySalesLastTwelveMonthsReferrallSales.series.length - 1].remove();

    }
</script>
<script>
    /* --------------------- Sales Last 12 Months by Manufacture Rep ------------------------- */
    var MonthlySalesDataManufRep = new Array();

    var mainArrayManufRepMonthly = new Array();
    var midArrayManufRepMonthly;
    var subArrayManufRepMonthly = new Array();

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.SpecifiedDashboardController.Monthly_Sales_Last_12_Months_Manufacture}',
        function(result, event){

            if (event.status) {
                for (var key in result) {
                    mainArrayManufRepMonthly = new Array();
                    
                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        subArrayManufRepMonthly = new Array();
    
                        subArrayManufRepMonthly.push(item.valueindex, item.amount);
                        mainArrayManufRepMonthly.push(subArrayManufRepMonthly);
                    }

                    midArrayManufRepMonthly = {name:key, data:mainArrayManufRepMonthly, custom:key};
    
                    MonthlySalesDataManufRep.push(midArrayManufRepMonthly);
                }
                RenderMonthlySalesLast12MonthsManufRep(MonthlySalesDataManufRep);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Monthly Sales Last 12 Months...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Monthly Sales Last 12 Months...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderMonthlySalesLast12MonthsManufRep(MonthlySalesData){

            var monthlySalesLastTwelveMonthsReferrallSales = Highcharts.chart('Monthly_Sales_Last_12_Months_Man_Rep', {
            credits: {
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Man&title=Monthly Sales Last 12 Months - Hospitality&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_USA';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: Last12MonthsCategories,
                min: 0,
                max: 11,
                labels: {
                    useHTML: true,
                    formatter: function(){

                        var monthYearList = this.value.split('\'');
                        var year = '20'+monthYearList[1];
                        var month = getMonthNumberFromMonthName(monthYearList[0]);
                        return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Man&title=Monthly Sales Last 12 Months - Hospitality&click=left&dashboard=SMD_USA&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                    }
                } 
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Amount ($)'
                }
            },
            tooltip: {
                shared: false,
                formatter: function () {
                    return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                        this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                },
                split: true,
                positioner: function(labelWidth, labelHeight, point) {
                    return {
                        x: point.plotX - point.h/2 + labelWidth/2,
                        y: point.plotY
                    };
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,
                enabled: true,
                labelFormatter: function () {
                    this.color = getSpecColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    cursor: 'pointer',
                    enabled: true,
                    events: {
                        legendItemClick: function(event) {

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Man&title=Monthly Sales Last 12 Months - Hospitality&click=legend';
                            url += '&duration=&str='+event.target.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                            event.preventDefault();
                            
                        },
                        click: function(event) { 

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_Man&title=Monthly Sales Last 12 Months - Hospitality&click=bar';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                            url += '&dashboard=SMD_USA';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: MonthlySalesData
        });

        //For redraw the chart to add colors to the legend symbols
        monthlySalesLastTwelveMonthsReferrallSales.addSeries({"data":[]});
        monthlySalesLastTwelveMonthsReferrallSales.series[monthlySalesLastTwelveMonthsReferrallSales.series.length - 1].remove();

    }
</script>
</apex:page>