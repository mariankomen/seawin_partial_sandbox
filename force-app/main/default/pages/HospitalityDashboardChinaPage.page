<apex:page controller="HospitalityDashboardChinaController" rendered="{!SysAdminCHK}" readOnly="true">
    
    <style>
        .listButtons li:not(.lastItem) {
        display: none;
        }
        html, body, #collection_performance {
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
        }
        .gauge-value{
        font-size: 16px;
        font-weight: bold;
        margin-top: 20px;
        }
        img {
        border-radius: 50%;
        }
        table.tableClass {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 60%;
        cursor: pointer;
        }
        
        .tableClass td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
        }
        
        .tableClass tr:nth-child(even) {
        background-color: #dddddd;
        }
        
        .highcharts-background{
        cursor: pointer;
        }
        
        .blankspace{
        width: 1234px; height: 400px; background: white;
        }
        .message .messageText {
            font-size: 12px;
        }
        .title-dashboard{
            font-size: 2em;
            font-weight: bold;
        }
        .listViewportWrapper .listViewport .topNav h2.title {
            font-size: 1.5em;
        }
        .center {
          text-align: center;
        }
        .monthClass {
            background-color:#60cc63 !important;
        }
        .yearClass {
            background-color:#91e0d9 !important;
        }
        .totalClass{
        
        background-color:#c1caca !important;
        }
        .emptySpace{
            background-color: white;
            width: 100%; 
            height: 500px; 
        }
        .whiteSpace{
            background-color: white;
            width: 50%; 
            height: 500px; 
        }
        .dtatable{
            background-color: white;
            width: 100%; 
            height: 333px; 
        }
        .dashboard-title{
            text-align: center;
        }
        .transparentBg{
        
            background-color: transparent !important;
        
        }
        
        .float-left-half{
            width: 50%; 
            float: left; 
            position: relative; 
            z-index: 10;
        }
        .float-right-half{
            width: 50%; 
            float: right; 
            position: relative; 
            z-index: 10;
        }
        .float-full{
            width: 100%; 
        }
        .float-left-70{ 
            width: 70%; 
            float: left; 
            position: relative; 
            z-index: 10
        
        }
        .float-right-70{    
            width: 70%; 
            float: right; 
            position: relative; 
            z-index: 10
        
        }
        .float-left-30{ 
            width: 30%; 
            float: left; 
            position: relative; 
            z-index: 10
        
        }
        .float-right-30{    
            width: 30%; 
            float: right; 
            position: relative; 
            z-index: 10
        
        }
        .float-left-65{ 
            width: 65%; 
            float: left; 
            position: relative; 
            z-index: 10
        
        }
        .float-right-35{    
            width: 35%; 
            float: right; 
            position: relative; 
            z-index: 10
        
        }
        .width-33{    
            width: 33%; 
            position: relative; 
            display: inline-block;
            z-index: 10
        
        }
        .spinnerBg{
            width: 100%;
            height: 100%;
            position: absolute;
            background-color: transparent;
            opacity: 0.1;
            z-index: 999999;
        }
        .spinner{
            width: 100%;
            height: 100%;
            background-image: url("/img/loading32.gif");
            background-size: 56px;
            background-repeat: no-repeat;
            background-position: center;
            z-index: 9999999;
            opacity: 1;
        }
        .spinner_adjusted{
            width: 100%;
            height: 30%;
            background-image: url("/img/loading32.gif");
            background-size: 56px;
            background-repeat: no-repeat;
            background-position: center;
            z-index: 9999999;
            opacity: 1;
        }
        
    </style>

    <apex:outputPanel >
        
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'jquery.min.js')}"/>
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'highcharts.js')}"/>
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'accessibility.js')}"/>
        <apex:includeScript value="{!
         URLFOR($Resource.DashboardsScriptAndStyle,'gauge.min.js')}"/>
    </apex:outputPanel>
    <apex:pageBlock >

        <div class="dashboard-title">
            <apex:outputText value="Hospitality Dashboard China" styleClass="title-dashboard"></apex:outputText>
        </div>
        
        <br/>
        <br/>
        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Monthly Sales Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows last 12 months data from sales orders where Total is greater than zero, record type equals Seawin China Hospitality, Sales Reps belongs to Seawin China or Hong Kong Jurisdiction and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Monthly_Sales_Last_12_Months" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Current Sales Contest YTD<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows this year's data from sales orders where orders are created this year, total greater than zero, record type equals Seawin China Hospitality, Sales Reps belongs to Seawin China or Hong Kong Jurisdiction and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Sales_Contest_YTD" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" /></div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Current Sales Contest QTD<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows this quarter's data from sales orders where orders are created this year, total greater than zero, record type equals Seawin China Hospitality, Sales Reps belongs to Seawin China or Hong Kong Jurisdiction and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Sales_Contest_QTD" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Current Sales Contest This Month<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows this month's data from sales orders where orders are created this year, total greater than zero, record type equals Seawin China Hospitality, Sales Reps belongs to Seawin China or Hong Kong Jurisdiction and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Sales_Contest_TM" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Team Quota YTD<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows this year's percentage data from sales orders where Sales to Date to is calculated based on Total for all Sales rep in Seawin China jurisdiction, record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div class="center emptySpace">
                                    <canvas id="team_quota_ytd" width="310" height="190" 
                                            style="cursor: pointer;" 
                                            onclick="RedirectTo(); return false;"></canvas>
                                            <div id="spinnercontainer" class="spinnerBg" />
                                            <div id="spinnerlogo" class="spinner_adjusted" />
                                    <br/>
                                    <div id="guagedisplayId" class="gauge-value" style="display: none;">
                                        <apex:outputPanel >
                                            <span style="color:Grey">
                                                <span id="uptodateamountId"></span> (<span id="uptodatepercentageId"></span>%) 
                                            </span>
                                            <br/>
                                            <br/>
                                            <div style="font-weight: normal; font-size: 12px;">
                                                <span style="font-weight: bold;">Sales To Date:</span>
                                                <span id="uptodateamount2Id"></span><br/>
                                                <span style="font-weight: bold;">Expected Quota to Date:</span>
                                                <span id="uptodatequotaId"></span>
                                                <span style="color:red;">*</span><br/><br/>
                                                <span style="color:red;padding-right:0;">*</span>
                                                Expected Quota to Date is calculated based on 
                                                Monthly Quota for all Sales rep in Seawin China jurisdiction. 
                                            </div>
                                        </apex:outputPanel>
                                        <div id="monthlyquotaisnullId" style="display: none;">
                                            <span style="color: red; font-weight: bold;">Error: </span>
                                            <span  style="color: red;">
                                                Monthly Quota has not been assigned to any Sales rep.
                                            </span>
                                        </div> 
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Quota per Sales Rep YTD<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for percentage quota for sales rep in this year from all sales orders where created date inside this year, record type equals Seawin China Hospitality for all sales reps who belong to the Seawin China or Hong Kong jurisdiction and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="TeamQuotaPercent_SMD_CHK" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper float-full">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Forecast Pipeline<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows next 12 months data involving Sum of Expected Revenue(Amount * Probability%) from Opportunties having  based on close date, Forecast Category equals Pipeline, record type equals Seawin China Hospitality for all sales reps who belong to the Seawin China or Hong Kong jurisdiction and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="forecasts" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Company Total Pipeline Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for all opportunities that are open, summed till each month for each month collectively for all sales reps in the Seawin China or Hong Kong jurisdiction, Forecast Category equals Pipeline, record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="companypipeline" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Pipeline Last 12 Months by Sales Rep / Team<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for all opportunities that are open, summed till each month for each month for each sales reps in the Seawin China or Hong Kong jurisdiction including, Forecast Category equals Pipeline, record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="salesrepcollectivepipeline" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Pipeline Last 12 Months By Lead Source<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for all opportunities that are open, having record type Seawin China Hospitality, summed till each month for each month for each lead source in the Seawin China or Hong Kong jurisdiction including House Account user."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="CollectivePipelineByLeadSource" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Newly Submitted Opportunities Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for the last 12 months from opportunities where record type is Seawin China Hospitality based on Newly Submitted Quote First Date for each Sales rep in the Seawin China or Hong Kong jurisdiction, Forecast Category equals Pipeline or Stage  inside (Sleep, Closed Won, Closed Lost), Name not include (Change Order, Mock-Up, Mock Up, Mockup), Opportunity Parent equal to null, record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="newlysubmittedopportunities" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Newly Submitted Opportunities Last 12 Months By Sales Rep / Team<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for the last 12 months from opportunities where record type is Seawin China Hospitality based on Quote Submitted Date for each Sales rep in the Seawin China or Hong Kong jurisdiction."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeam" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Newly Submitted Opportunities Last 12 Months by Lead Source<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for the last 12 months from opportunities where record type is Seawin China Hospitality based on Newly Submitted Quote First Date for each Sales rep in the Seawin China or Hong Kong jurisdiction, Forecast Category equals Pipeline or Stage  inside (Sleep, Closed Won, Closed Lost), Name not include (Change Order, Mock-Up, Mock Up, Mockup), Opportunity Parent equal to null, record type equals Seawin China Hospitality, GL Account Variable 1 belongs to Seawin China or Hong Kong and  grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="newlySubmittedOpportunitiesLastTwelveMonthsByLeadSource" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Lost Opportunities Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for all opporutnities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, for all sales reps in the Seawin China or Hong Kong jurisdiction, Name not include (Change Order, Mock-Up, Mock Up, Mockup), Opportunity Parent equal to null, record type equals Seawin China Hospitality, GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="lostopportunities" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Lost Opportunities Last 12 Months By Sales Rep / Team<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for all opporutnities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, having record type Seawin China Hospitality, for all sales reps in the Seawin China or Hong Kong jurisdiction."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="lostOpportunitiesBySalesRepTeam" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper width-33">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Lost Opportunities Loss Reason Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart will show statistics about loss reasons of Closed Lost opportunities whose stage is Closed Lost and Closed Date is for the last 12 months including the current month, for all sales reps in the Seawin China or Hong Kong jurisdiction, Opportunity Parent equal to null, record type equals Seawin China Hospitality, GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="lossreasons" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales by Lead Source Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for the last 12 months from sales orders where record type equals Seawin China Hospitality for all sales reps in the Seawin China or Hong Kong jurisdiction, total greater than zero, record type equals Seawin China Hospitality, GL Account Variable 1 belongs to Seawin China or Hong Kong and grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Sales_By_Lead_Source_Last_12_Months" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
            
        </div>

        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Sales Forecast Pipeline by Lead Source<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data for the next 12 months involving Sum of Expected Revenue(Amount * Probability%) from Opportunties having record type Seawin China Hospitality, based on close date, Forecast Category equals Pipeline, for all Sales rep in the Seawin China or Hong Kong jurisdiction, record type equals Seawin China Hospitality, GL Account Variable 1 belongs to Seawin China or Hong Kong and grouped by Lead Source."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="sales_forecast_pipeline_by_lead_source" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper float-full">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Active Opportunities by Stage<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data to date from opportunities having record type Seawin China Hospitality, Stage is not equal to Closed Won/Closed Lost/Not Qualified for all Sales reps who are in Seawin China or Hong Kong jurisdiction, Amount greater than zero, Forecast Category not inside (Omitted, Closed), record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="activeopportunitiesbystage" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Negotiation Win Rate<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows % of Closed Won Opportunities which had Negotiation stage, w.r.t total Closed Won and Closed Lost Opportunities having Record Type equals Seawin China Hospitality and not having Change Order/Mockup in their name for each sales reps in the Seawin China or Hong Kong jurisdiction, record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Neg_Win_Rate_SMD_CHK" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Win Rate<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows % of Closed Won Opportunities w.r.t total Closed Won and Closed Lost Opportunities having Record Type equals Seawin China Hospitality and not having Change Order/Mockup in their name for each sales reps in the Seawin China or Hong Kong jurisdiction, record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="Win_Rate_SMD_CHK" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper float-full">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Activity Graph Last 12 Months<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                title="This chart shows the number of Opportunities where record type equals Seawin China Hospitality and GL Account Variable 1 is Seawin China or Hong Kong and ForecastCategoryName equal to Pipeline on which Inside Sales Users in Seawin China or Hong Kong jurisdiction belonging to various Sales Rep/Team have worked in the last 12 months in each month."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="activitygraph" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Tasks Completion<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data from all tasks which are open based on their due date for all Sales reps who are in Seawin China or Hong Kong jurisdiction."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="TasksCompletion" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">Neglected Opportunities<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                title="This chart shows data from opportunities having Record type as Seawin China Hospitality that are open on which there has been no activity since the last modified date(changes only by Seawin users)/last activity date and no open or over due task exists for all sales reps in the Seawin China or Hong Kong jurisdiction, Forecast Category equals Pipeline, record type equals Seawin China Hospitality and GL Account Variable 1 belongs to Seawin China or Hong Kong."/></span>
                            </h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="NeglectedOppty" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="individualPalette listViewportWrapper float-left-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">New Leads<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" 
                                     title="This chart shows data from all Leads having status New for all active Users who are in Seawin China or Hong Kong jurisdiction for the given period of time."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="NewLeads" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="individualPalette listViewportWrapper float-right-half">
            <div class="listViewport Custom29Block">
                <form>
                    <div class="topNav primaryPalette">
                        <div class="controls">
                            <h2 class="title">New Customers Last 12 Months by Type<span style="position: relative;left: 10px; bottom: 5px;">
                                <img src="/s.gif" alt="Help" class="helpIcon" title="This chart shows data for the last 12 months from opportunities where record type is Seawin China Hospitality based on Quote Submitted Date for each Sales rep in the Seawin China or Hong Kong jurisdiction, Accounting Type inside (Customer, Customer And Vendor) and GL Account Variable 1 equal to Seawin China or Hong Kong."/></span></h2>
                            <div class="filterLinks"></div>
                            <span class="divisionLabel"></span>
                            <div class="topNavTab"></div>
                            <div class="clearingBox"></div>
                            <apex:outputPanel >
                                <div style="text-align: center">
                                    <div id="newCustomersLast12MonthsByType" class="emptySpace">
                                        <div class="spinnerBg" />
                                        <div class="spinner" />
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </form>
            </div>
        </div>
            
        <br/>
        <br/>

        <apex:outputText value="0" style="color:white"></apex:outputText>

    </apex:pageBlock>
    
    <script>

        /*----------------------- Last 12 Months ------------------------- */
    
        var Last12MonthsCategories = new Array();
                
        function Last12Months() {
            var now = new Date();
            var currentMonth = now.getMonth();
            var month = now.getMonth();
            
            var names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
            
            for (var i = 0; i < 12; ++i) {
                var d = new Date();
                d.setMonth(parseInt(currentMonth) - i);
                Last12MonthsCategories.push(names[month] + ' \'' + d.getFullYear().toString().substring(2));
                if (--month === -1) {
                    month = 11;
                }
            }
        }
                
        Last12Months();

        /*----------------------- Last 12 Months Reverse ------------------------- */

        var Last12MonthsReverseCategories = new Array();
        var Last12MonthsReverseCategories_Temp = new Array();

        function Last12Months_Reverse() {
                var now = new Date();
                var currentMonth = now.getMonth();
                var month = now.getMonth();
                
                var names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                
                for (var i = 0; i < 12; ++i) {
                    var d = new Date();
                    d.setMonth(parseInt(currentMonth) - i);
                    Last12MonthsReverseCategories_Temp.push(names[month] + ' \'' + d.getFullYear().toString().substring(2));
                    if (--month === -1) {
                        month = 11;
                    }
                }
                
                for (var i = 11; i >= 0; i--) {
                    Last12MonthsReverseCategories.push(Last12MonthsReverseCategories_Temp[i]);
                }
            }

            
        Last12Months_Reverse();

        /*----------------------- Next 12 Months ------------------------- */

        var Next12MonthsCategories = new Array();
            
        function Next12Months() {
            var now = new Date();
            var currentMonth = parseInt(now.getMonth());
            var month = parseInt(now.getMonth());
            
            var names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                            'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];

            for (var i = 0; i < 12; ++i) {
                var d = new Date();
                d.setMonth(parseInt(currentMonth) + i);
                if(i == 0) Next12MonthsCategories.push("Missed");
                Next12MonthsCategories.push(names[month] + ' \'' + d.getFullYear().toString().substring(2));
                if (++month === 12) {
                    month = 0;
                }
            }
        }

        Next12Months();
    
    
    </script>
    <script>

        var colorList = new Array('#058DC7','#64E572','#6AF9C4','#AA4643','#89A54E','#80699B','#3D96AE','#DB843D','#92A8CD', '#A47D7C','#B5CA92',"#7cb5ec","#434348","#90ed7d", "#00203FFF","#ADEFD1FF","#606060FF","#D6ED17FF","#D85A7FFF","#2C5F2D","#97BC62FF","#00539CFF","#EEA47FFF", "#603F83FF","#C7D3D4FF","#2BAE66FF","#FAD0C9FF","#6E6E6DFF","#2D2926FF","#E94B3CFF","#DAA03DFF","#616247FF", '#FFF263', "#990011FF","#435E55FF","#D64161FF","#76528BFF","#FAEBEFFF","#333D79FF","#F93822FF","#FDD20EFF", "#ED561B", "#50B432", "#F2EDD7FF","#755139FF","#006B38FF","#FFD662FF","#D7C49EFF","#343148FF", "#f7a35c","#8085e9","#f15c80","#e4d354", "#FFA177FF","#F5C7B8FF","#DF6589FF","#3C1053FF","#FFE77AFF","#2C5F2DFF","#DD4132FF","#9E1030FF","#F1F4FFFF",'#24CBE5', "#FCF951FF","#422057FF","#4B878BFF","#D01C1FFF","#1C1C1BFF","#CE4A7EFF","#00B1D2FF","#FDDB27FF","#79C000FF","#FF7F41FF", "#BD7F37FF","#A13941FF","#E3C9CEFF","#9FC131FF","#00239CFF","#E10600FF","#B0B8B4FF","#184A45FF","#FFA351FF", '#DDDF00', "#FFBE7BFF","#EED971FF","#567572FF","#964F4CFF","#696667FF","#DA291CFF","#56A8CBFF","#53A567FF","#D7A9E3FF","#8BBEE8FF", "#A8D5BAFF","#7DB46CFF","#E7EBE0FF","#ABD6DFFF","#F9A12EFF","#9B4A97FF","#A59C94FF","#AE0E36FF","#D32E5EFF","#EDC2D8FF", "#8ABAD3FF","#FC766AFF","#783937FF","#F1AC88FF","#F6EA7BFF","#FFBA52FF","#E683A9FF","#F65058FF", "#FBDE44FF","#28334AFF","#95DBE5FF","#078282FF","#339E66FF","#643E46FF","#BA0020FF","#EE2737FF","#FF3EA5FF","#EDFF00FF", "#00A4CCFF","#E95C20FF","#006747FF","#4F2C1DFF","#D9514EFF","#2A2B2DFF","#2DA8D8FF","#963CBDFF","#FF6F61FF","#C5299BFF", "#FEAE51FF","#F0E1B9FF","#F3DB74FF","#2460A7FF","#85B3D1FF","#B3C7D6FF","#D9B48FFF","#FFD653FF","#ED2B33FF", '#FF9655', "#0063B2FF","#9CC3D5FF","#D198C5FF","#E0C568FF","#101820FF","#FEE715FF","#CBCE91FF","#EA738DFF","#B1624EFF","#5CC8D7FF", "#89ABE3FF","#FCF6F5FF","#E3CD81FF","#B1B3B3FF","#101820FF","#F2AA4CFF","#A07855FF","#D4B996FF","#195190FF","#A2A2A1FF", "#DDB65DFF","#EEB238FF","#6E4C1EFF","#669DB3FF","#F0F6F7FF","#A89C94FF","#FF4F58FF","#0A5E2AFF","#6DAC4FFF","#EFEFE8FF", "#FE0000FF","#FFDDE2FF","#FAA094FF","#9ED9CCFF","#008C76FF","#93385FFF","#9F6B99FF","#4F3466FF","#301728FF","#F1F3FFFF", "#F7CED7FF","#F99FC9FF","#EF6079FF","#ABD1C9FF","#DFDCE5FF","#DBB04AFF","#97B3D0FF","#5F4B8BFF", "#e87855", "#F95700FF", "#2b908f","#f45b5b","#91e8e1","#592e6f","#703585","#5B84B1FF","#E69A8DFF","#42EADDFF","#CDB599FF","#000000FF",'#4572A7');

        var allSalesRep = {};
        var iterator = 0;
        <apex:repeat value="{!All_SalesReps}" var="rep">
            if(!allSalesRep.hasOwnProperty('{!rep}')){
                allSalesRep['{!rep}'] = colorList[iterator];
                iterator++;
            }
        </apex:repeat>


        iterator = 0;
        var allLeadSoruces = {};
        <apex:repeat value="{!All_Lead_Soruces}" var="leadSource">
            if(!allLeadSoruces.hasOwnProperty('{!leadSource}')){
                allLeadSoruces['{!leadSource}'] = colorList[iterator];
                iterator++;
            }
        </apex:repeat>

        iterator = 0;
        var allAccountTypes = {};
        <apex:repeat value="{!All_Account_Types}" var="accountType">
            if(!allAccountTypes.hasOwnProperty('{!accountType}')){
                allAccountTypes['{!accountType}'] = colorList[iterator];
                iterator++;
            }
        </apex:repeat>


        function getRepsColor(repName){

            color = repName in allSalesRep ? allSalesRep[repName] : 'red';

            
            return color; 
        }


        function getLeadSourceColor(leadSource){

            color = leadSource in allLeadSoruces ? allLeadSoruces[leadSource] : 'red';
            return color; 
        }


        function getAccountTypeColor(accountType){

            color = accountType in allAccountTypes ? allAccountTypes[accountType] : 'red';
            return color; 
        }
        

        function getMonthNumberFromMonthName(monthString){

            var month = 1;

            if(monthString.trim() == 'Jan'){
                month = 1;
            } else if(monthString.trim() == 'Feb'){
                month = 2;
            } else if(monthString.trim() == 'Mar'){
                month = 3;
            } else if(monthString.trim() == 'Apr'){
                month = 4;
            } else if(monthString.trim() == 'May'){
                month = 5;
            } else if(monthString.trim() == 'Jun'){
                month = 6;
            } else if(monthString.trim() == 'Jul'){
                month = 7;
            } else if(monthString.trim() == 'Aug'){
                month = 8;
            } else if(monthString.trim() == 'Sept'){
                month = 9;
            } else if(monthString.trim() == 'Oct'){
                month = 10;
            } else if(monthString.trim() == 'Nov'){
                month = 11;
            } else if(monthString.trim() == 'Dec'){
                month = 12;
            } else if(monthString.trim() == 'Missed'){
                month = 'Missed';
            }
            return month;
        }
        
    </script>
    <script>
        /* --------------------- Monthly Sales Last 12 Months ------------------------- */
        var MonthlySalesData = new Array();

        var mainArray = new Array();
        var midArray;
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Monthly_Sales_Last_12_Months}',
            function(result, event){

                if (event.status) {
                    console.log('result monthly sales: ',JSON.stringify(result))
                    for (var key in result) {
                        mainArray = new Array();
                        
                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            subArray = new Array();
        
                            subArray.push(item.valueindex, item.amount);
                            mainArray.push(subArray);
                        }

                        midArray = {name:key, data:mainArray, custom:key};
        
                        MonthlySalesData.push(midArray);
                    }

                    RenderMonthlySalesLast12Months(MonthlySalesData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Monthly Sales Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Monthly Sales Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderMonthlySalesLast12Months(MonthlySalesData){

                var monthlySalesLastTwelveMonths = Highcharts.chart('Monthly_Sales_Last_12_Months', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_CHK&title=Monthly Sales Last 12 Months - Hospitality&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: Last12MonthsCategories,
                    min: 0,
                    max: 11,
                    labels: {
                        useHTML: true,
                        formatter: function(){

                            var monthYearList = this.value.split('\'');
                            var year = '20'+monthYearList[1];
                            var month = getMonthNumberFromMonthName(monthYearList[0]);
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_CHK&title=Monthly Sales Last 12 Months - Hospitality&click=left&dashboard=SMD_CHK&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function () {
                        return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                            this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    },
                    split: true,
                    positioner: function(labelWidth, labelHeight, point) {
                        return {
                            x: point.plotX - point.h/2 + labelWidth/2,
                            y: point.plotY
                        };
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getRepsColor(this.name);
                        //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        enabled: true,
                        events: {
                            legendItemClick: function(event) {

                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_CHK&title=Monthly Sales Last 12 Months - Hospitality&click=legend';
                                url += '&duration=&str='+event.target.name;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                                event.preventDefault();
                                
                            },
                            click: function(event) { 

                                var d = new Date();
                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                                var duration = '';

                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Monthly_Sales_Last_12_Months_SMD_CHK&title=Monthly Sales Last 12 Months - Hospitality&click=bar';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: MonthlySalesData
            });

            //For redraw the chart to add colors to the legend symbols
            monthlySalesLastTwelveMonths.addSeries({"data":[]});
            monthlySalesLastTwelveMonths.series[monthlySalesLastTwelveMonths.series.length - 1].remove();

        }
        </script>
        <script>
        /* ----------------------- Current Sales Contest YTD --------------------------- */

        var SalesContestYTDData = new Array();
        var SalesContestYTDCategories = new Array();
        
        var midArray;
            var mainArray = new Array(); 
            
                Visualforce.remoting.timeout = 120000;
        
                Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.HospitalityDashboardChinaController.Current_Sales_Contest_YTD}',
                    function(result, event){
                        if (event.status) {
                            for (var key in result) {
                                mainArray = new Array();
                                
                                result[key].forEach(buildarray);
                                
                                SalesContestYTDCategories.push(key);
                                
                                function buildarray(item, index) {
                                    
                                    subArray = new Array();
                
                                    subArray.push(item.valueindex, item.amount);
                                    mainArray.push(subArray);
                                }
        
                                midArray = {name:key.split(',')[0], data:mainArray, custom:key};
                    
                                SalesContestYTDData.push(midArray);
                            }
        
                            RenderCurrentSalesContestYTD(SalesContestYTDData);
                        } else if (event.type === 'exception') {
                            
                                console.log('Exception has occured in Current Sales Contest YTD...');
                                console.log(event.message);
                                console.log(event.where);
                        } else {
                            console.log('Error occured in Current Sales Contest YTD...');
                            console.log(event.message);
                        }
                    }, 
                    {escape: true}
                );
            function RenderCurrentSalesContestYTD(SalesContestYTDData){
        
                var salesContestYTD = Highcharts.chart('Sales_Contest_YTD', {
                    credits: {
                        enabled: false
                    },
                    chart: {
                        type: 'bar',
                        events: {
                            click: function(event) {
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Current_Sales_Contest_YTD_SMD_CHK&title=Current Sales Contest YTD&click=chart';
                                url += '&duration=&str=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    },
                    title: {
                        text: ''
                    },
                    xAxis: {
                        categories: SalesContestYTDCategories,
                        min: 0,
                        labels: {
                            useHTML: true,
                            formatter: function(){
                                var lst = this.value.split(',');
                                return "<span>"+lst[0]+"</span>";                     
                            }
                        } 
                    },
                    yAxis: {
                        min: 0,
                        allowDecimals: false,
                        title: {
                            text: 'Amount ($)'
                        }
                    },
                    tooltip: {
                        useHTML: true,
                        borderRadius: 15,
                        formatter: function () {
                            return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                                this.x.split(',')[0] + '</b><br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                        }
                    },
                    legend: {
                        layout: 'vertical',
                        align: 'right',
                        verticalAlign: 'top',
                        floating: false,
                        enabled: true,
                        labelFormatter: function () {
                            this.color = getRepsColor(this.name);
                            //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                            return '<span style="color: '+this.color+'"></span>' + this.name ;
                        }
                    },
                    plotOptions: {
                        series: {
                            stacking: 'normal',
                            cursor: 'pointer',
                            pointWidth: 25,
                            minPointLength: 5,
                            events: {
                                
                                click: function(event) {                           
                                    var index = event.point.x;
                                    var duration = '';
                                    
                                    var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Current_Sales_Contest_YTD_SMD_CHK&title=Current Sales Contest YTD&click=bar';
                                    url += '&duration='+duration+'&str='+this.userOptions.name;
                                    url += '&dashboard=SMD_CHK';
                                    window.open(url, '_blank');
                                }
                            }
                        }
                    },
                    series: SalesContestYTDData
                });
        
                //For redraw the chart to add colors to the legend symbols
                salesContestYTD.addSeries({"data":[]});
                salesContestYTD.series[salesContestYTD.series.length - 1].remove();
            
            }

        </script>
        <script>
            /* ------------------ Current Sales Contest QTD ------------------------ */
        var SalesContestQTDData = new Array();
        
        var SalesContestQTDCategories = new Array();
        
        var midArray;
        var mainArray = new Array(); 
    
        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Current_Sales_Contest_QTD}',
            function(result, event){
                if (event.status) {
                    for (var key in result) {
                        mainArray = new Array();
                        
                        result[key].forEach(buildarray);
                        
                        SalesContestQTDCategories.push(key);
                        
                        function buildarray(item, index) {

                            subArray = new Array();
        
                            subArray.push(item.valueindex, item.amount);
                            mainArray.push(subArray);
                        }

                        midArray = {name:key.split(',')[0], data:mainArray, custom:key};
            
                        SalesContestQTDData.push(midArray);
                    }

                    RenderCurrentSalesContestQTD(SalesContestQTDData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Current Sales Contest QTD...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Current Sales Contest QTD...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );
        
        function RenderCurrentSalesContestQTD(SalesContestQTDData){
        
            var salesContestQTD = Highcharts.chart('Sales_Contest_QTD', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Current_Sales_Contest_QTD_SMD_CHK&title=Current Sales Contest QTD&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                    //height: 500
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: SalesContestQTDCategories,
                    min: 0,
                    labels: {
                        useHTML: true,
                        formatter: function(){
                            var lst = this.value.split(',');
                            return "<span>"+lst[0]+
                                "</span>";                        
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function () {
                        return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                            this.x.split(',')[0] + '</b><br> Amount: '+ this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getRepsColor(this.name);
                        //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        pointWidth: 25,
                        minPointLength: 5,
                        events: {
                            click: function(event) {                           
                                var index = event.point.x;
                                var duration = '';
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Current_Sales_Contest_QTD_SMD_CHK&title=Current Sales Contest QTD&click=bar';
                                url += '&duration='+duration+'&str='+this.userOptions.name;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: SalesContestQTDData
            });
    
            //For redraw the chart to add colors to the legend symbols
            salesContestQTD.addSeries({"data":[]});
            salesContestQTD.series[salesContestQTD.series.length - 1].remove();
        }

        </script>
        <script>
            /* --------------------- Current Sales Contest This Month ----------------------- */
            var SalesContestTMData = new Array();
            
            var SalesContestTMCategories = new Array();
            
            var midArray;
            var mainArray = new Array(); 
            
                Visualforce.remoting.timeout = 120000;
        
                Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.HospitalityDashboardChinaController.Current_Sales_Contest_TM}',
                    function(result, event){
                        console.log('resjdhfskjdhfskjdhf:',JSON.stringify(result))
                        if (event.status) {
                            let renderer_data = []

                            for(let char in result){
                                SalesContestTMCategories.push(char)
                            }
                            let first_arr = result[SalesContestTMCategories[0]]
                            for(let char in first_arr){
                                renderer_data.push({
                                    name: SalesContestTMCategories[first_arr[char].valueindex],
                                    data: [[first_arr[char].valueindex, first_arr[char].amount]],
                                    custom: SalesContestTMCategories[first_arr[char].valueindex]
                                })
                            }
                            RenderCurrentSalesContestTM(renderer_data);
                        } else if (event.type === 'exception') {
                            
                                console.log('Exception has occured in Current Sales Contest TM...');
                                console.log(event.message);
                                console.log(event.where);
                        } else {
                            console.log('Error occured in Current Sales Contest TM...');
                            console.log(event.message);
                        }
                    }, 
                    {escape: true}
                );
            function RenderCurrentSalesContestTM(SalesContestTMData){
                
                var salesContestTM = Highcharts.chart('Sales_Contest_TM', {
                    credits: {
                        enabled: false
                    },
                    chart: {
                        type: 'bar',
                        events: {
                            click: function(event) {
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Current_Sales_Contest_TM_SMD_CHK&title=Current Sales Contest This Month&click=chart';
                                url += '&duration=&str=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                        //height: 500
                    },
                    title: {
                        text: ''
                    },
                    xAxis: {
                        categories: SalesContestTMCategories,
                        min: 0,
                        labels: {
                            useHTML: true,
                            formatter: function(){
                                var lst = this.value;
                                return "<span>"+lst+
                                    "</span>";                        
                            }
                        } 
                    },
                    yAxis: {
                        min: 0,
                        allowDecimals: false,
                        title: {
                            text: 'Amount ($)'
                        }
                    },
                    tooltip: {
                        shared: false,
                        formatter: function () {
                            return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                                this.x.split(',')[0] + '</b><br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                        }
                    },
                    legend: {
                        layout: 'vertical',
                        align: 'right',
                        verticalAlign: 'top',
                        floating: false,
                        enabled: true,
                        labelFormatter: function () {
                            this.color = getRepsColor(this.name);
                            return '<span style="color: '+this.color+'"></span>' + this.name;
                        }
                    },
                    plotOptions: {
                        series: {
                            stacking: 'normal',
                            cursor: 'pointer',
                            pointWidth: 25,
                            minPointLength: 5,
                            events: {
                                click: function(event) {                           
                                    var index = event.point.x;
                                    var duration = '';
                                    
                                    var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Current_Sales_Contest_TM_SMD_CHK&title=Current Sales Contest This Month&click=bar';
                                    url += '&duration='+duration+'&str='+this.userOptions.name;
                                    url += '&dashboard=SMD_CHK';
                                    window.open(url, '_blank');
                                }
                            }
                        }
                    },
                    series: SalesContestTMData
                });
    
                salesContestTM.addSeries({"data":[]});
                salesContestTM.series[salesContestTM.series.length - 1].remove();
           
            }
        </script>
        <script>
            /*---------------- Team Quota YTD ----------------------- */
            function RedirectTo(){
                
                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Team_Quota_YTD_SMD_CHK&title=Team Quota YTD&click=chart';
                url += '&duration=&str=';
                url += '&dashboard=SMD_CHK';
                window.open(url, '_blank');
                
            }
        
        var opts = {
                angle: 0, // The span of the gauge arc
                lineWidth: 0.1, // The line thickness
                radiusScale: 1, // Relative radius
                pointer: {
                    length: 0.4, // // Relative to gauge radius
                    strokeWidth: 0.035, // The thickness
                    color: '#000000' // Fill color
                },
                limitMax: false,     // If false, max value increases automatically if value > maxValue
                limitMin: false,     // If true, the min value of the gauge will be fixed
                colorStart: '#6FADCF',   // Colors
                colorStop: '#8FC0DA',    // just experiment with them
                strokeColor: '#E0E0E0',  // to see which ones work best for you
                generateGradient: true,
                highDpiSupport: true,     // High resolution support
                // renderTicks is Optional
                renderTicks: {
                    divisions: 5,
                    divWidth: 1.1,
                    divLength: 0.7,
                    divColor: '#333333',
                    subDivisions: 5,
                    subLength: 0.5,
                    subWidth: 1.2,
                    subColor: '#666666'
                },
                staticLabels: {
                    font: "18px sans-serif",  // Specifies font
                    labels: [0, 50, 100, 150, 200],  // Print labels at these values
                    color: "#000000",  // Optional: Label text color
                    fractionDigits: 0  // Optional: Numerical precision. 0=round off.
                },
                staticZones: [
                    {strokeStyle: "#800700", min: 0, max: 50}, // dark red
                    {strokeStyle: "#F03E3E", min: 50, max: 100}, // red
                    {strokeStyle: "#FFF200", min: 100, max: 150}, // yellow
                    {strokeStyle: "#30B32D", min: 150, max: 200}, // green
                    {strokeStyle: "#1C4F00", min: 200, max: 250} // dark green
                ]
            };
    
            var UptodateQuota = 0.00;
            var UptoDatePercentage = 0.00;
            var UptoDateAmount = 0.00; 
            var UptodateQuotaYTD = 0.00;
    
            Visualforce.remoting.timeout = 120000;

            // penguin
    
            Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.HospitalityDashboardChinaController.Team_Quota_YTD_Check}',
                function(result, event){
                    
                    if (event.status) {
                        
                        UptodateQuota = result;
                            
                        CallTheRenderTeamQuotaYTD(UptodateQuota);
                    } else if (event.type === 'exception') {
                        
                            console.log('Exception has occured in Team Quota YTD Check ...');
                            console.log(event.message);
                            console.log(event.where);
                    } else {
                        console.log('Error occured in Team Quota YTD Check...');
                        console.log(event.message);
                    }
                }, 
                {escape: true}
            );

        function CallTheRenderTeamQuotaYTD(UptodateQuota){
            
            UptodateQuotaYTD = 0.00;
            
            if(UptodateQuota == ""){
                
                //document.getElementById("monthlyquotaisnullId").style.display = "";
                UptodateQuota = 0.00
            }
            
            UptodateQuotaYTD = UptodateQuota;

            Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.HospitalityDashboardChinaController.Team_Quota_YTD}',
                function(result, event){
                    
                    if (event.status) {
                        // shark
                        UptoDateAmount = result[0].sum;
                        
                        UptoDatePercentage = UptodateQuota > 0
                        ? (UptoDateAmount / UptodateQuota) * 100
                        : 0;
                        
                        UptoDateAmount = UptoDateAmount.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
                        
                        document.getElementById("uptodateamountId").innerHTML = UptoDateAmount;
                        document.getElementById("uptodateamount2Id").innerHTML = UptoDateAmount;
                        
                        UptoDatePercentage = UptoDatePercentage.toFixed(2);
                        
                        document.getElementById("uptodatepercentageId").innerHTML = UptoDatePercentage;
    
                        RenderChartGuage(UptoDatePercentage);
                    } else if (event.type === 'exception') {
                        
                            console.log('Exception has occured in Team Quota YTD ...');
                            console.log(event.message);
                            console.log(event.where);
                    } else {
                        console.log('Error occured in Team Quota YTD...');
                        console.log(event.message);
                    }
                }, 
                {escape: true}
            );
    }
    function RenderChartGuage(UptoDatePercentage){

        document.getElementById("spinnercontainer").remove();
        document.getElementById("spinnerlogo").remove();
        document.getElementById("team_quota_ytd").style.marginTop = '18%';
            
        var QuotaPercentage = UptoDatePercentage > 250 ? 250 : UptoDatePercentage;
        var target = document.getElementById('team_quota_ytd'); // your canvas element
        var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 250; // set max gauge value
        gauge.setMinValue(0);  // Prefer setter over gauge.minValue = 0
        gauge.animationSpeed = 32; // set animation speed (32 is default value)
        gauge.set(QuotaPercentage); // set actual value  

        document.getElementById("guagedisplayId").style.display = '';

        if(UptodateQuota == ""){
                
                document.getElementById("monthlyquotaisnullId").style.display = "";
        }

        UptodateQuotaYTD = UptodateQuotaYTD.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
            
        document.getElementById("uptodatequotaId").innerHTML = UptodateQuotaYTD;
    }
    </script>
    <script>

        /* ------------------- Quota per Sales Rep YTD ------------------------- */
        function hex (c) {

            var s = "0123456789abcdef";
            var i = parseInt (c);
            if (i == 0 || isNaN (c))
                return "00";
            i = Math.round (Math.min (Math.max (0, i), 255));

            return s.charAt ((i - i % 16) / 16) + s.charAt (i % 16);
        }


        /* Convert an RGB triplet to a hex string */
        function convertToHex (rgb) {

            return hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);
        }


        /* Remove '#' in color hex string */
        function trim (s) { 
            
            return (s.charAt(0) == '#') ? s.substring(1, 7) : s 
        }


        /* Convert a hex string to an RGB triplet */
        function convertToRGB (hex) {

            var color = [];
            color[0] = parseInt ((trim(hex)).substring (0, 2), 16);
            color[1] = parseInt ((trim(hex)).substring (2, 4), 16);
            color[2] = parseInt ((trim(hex)).substring (4, 6), 16);
            
            return color;
        }


        function generateColor(colorStart, colorEnd, colorCount){

            // The beginning of your gradient
            var start = convertToRGB (colorStart);    

            // The end of your gradient
            var end   = convertToRGB (colorEnd);    

            // The number of colors to compute
            var len = colorCount;

            //Alpha blending amount
            var alpha = 0.0;

            var saida = [];

            for (i = 0; i < len; i++) {

                var c = [];
                alpha += (1.0/len);
                
                c[0] = start[0] * alpha + (1 - alpha) * end[0];
                c[1] = start[1] * alpha + (1 - alpha) * end[1];
                c[2] = start[2] * alpha + (1 - alpha) * end[2];

                saida.push('#'+convertToHex (c));               
            }
            
            return saida;
        }


        function getColorIndex(percentageValue){

            return (percentageValue/100).toFixed(2);
        }


        function getColorValue(percentageValue){

            var color = '';
            percentageValue = percentageValue.toFixed(0);
            if(percentageValue > 50 && percentageValue < 100){
                var colorList = generateColor('#1C4F00', '#FFF200', 50);
                color = colorList[percentageValue - 50];
            }
            else if(percentageValue > 0 && percentageValue < 50){
                var colorList = generateColor('#FFF200', '#800700', 50);
                color = colorList[percentageValue];
            }
            else if(percentageValue >= 100){
                color = '#1C4F00';
            }
            else if(percentageValue == 50){
                color = '#FFF200';
            }
            else if(percentageValue <= 0){
                color = '#800700';
            }

            return color;
        }
        //Gradient Color Script === Stop ===


        var TQData = new Array();
        var TQCategories = new Array();

        var indexItem = 0;
        var mainArray = new Array();
        var midArray;
        var subArray = new Array(); 

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Team_Quota_Percent}',
            function(result, event){
                if (event.status) {
                    for (var key in result) {
                        mainArray = new Array();

                        TQCategories.push(key);
                        
                        subArray = new Array();
                        subArray.push(indexItem, result[key]);
                        mainArray.push(subArray);

                        var color = getColorValue(mainArray[0][1]);
                        midArray = {name:key, data:mainArray, custom:key, color:color};              
                        TQData.push(midArray);
                        indexItem++;
                    }

                    RenderQuotaperSalesRepYTD(TQData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Quota per Sales Rep YTD...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Quota per Sales Rep YTD...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );
        function RenderQuotaperSalesRepYTD(TQData){
            var teamQuotePercent = Highcharts.chart('TeamQuotaPercent_SMD_CHK', {
                credits:{
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Team_Quota_Percent_SMD_CHK&title=Quota per Sales Rep YTD&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        },
                        load: function() {
                            var chart = this,
                            series = chart.series;

                            series.forEach(function(s) {

                                points = s.points;
                                points.forEach(function(point) {

                                    if (point.y <= 0) {
                                        point.update(null, false);
                                    }
                                });
                            });
                            chart.redraw();
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: TQCategories,
                    min: 0,
                    labels: {
                        useHTML: true,
                        formatter: function(){
                            // var lst = this.value.split(',');
                            // return "<span>"+lst[0]+"</span>";
                            return this.value;                        
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: '% of Quota'
                    }
                },
                tooltip: {
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                        + '</span><br/><span style="font-weight: bold">% of Quota:</span> '+this.y+'%';
                    },
                    shared: false
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: false,
                    labelFormatter: function () {
                        this.color = getColorValue(this.userOptions.data[0][1]);
                        return '<span style="color: '+this.color+'"></span>' + this.name;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        pointWidth: 25,
                        minPointLength: 5,
                        events: {
                            click: function(event) { 
                                
                                var category = event.point.category;
                                // var duration = this.userOptions.name;
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Team_Quota_Percent_SMD_CHK&title=Quota per Sales Rep YTD&click=bar';
                                url += '&duration=&year=&str='+category;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                                
                            }
                        }
                    }
                },
                series: TQData
            });
        }

        </script>
    <script>
        /* --------------- Sales Forecast Pipeline ----------------------*/
        var ForecastData = new Array();
        
        var midArray;
        var mainArray = new Array();
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Sales_Forecast_Pipeline}',
            function(result, event){
                
                if (event.status) {
                    for (var key in result) {
                        mainArray = new Array();
                        subArray = new Array();
                        var i = 0;
                        
                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            if(i == 0){
                                subArray = new Array();
                                var checkNum = item.misc + "abc";
                                var valueIs = 0;
                                if(checkNum == "abc" || checkNum == "0abc"){
                                
                                valueIs = null;
                                }else{
                                
                                valueIs = parseFloat(item.misc);
                                }
                                
                                subArray.push(0, valueIs);
                                mainArray.push(subArray);
                            }
                            
                            subArray = new Array();
                            subArray.push(parseInt(item.valueindex + 1), item.amount);
                            mainArray.push(subArray);
                            i++;
                        }

                        midArray = {name:key, data:mainArray, custom:"{!YEAR(TODAY())}"};
                        ForecastData.push(midArray);
                    }

                    RenderSalesForecastPipeline(ForecastData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Sales Forecast Pipeline...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Sales Forecast Pipeline...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderSalesForecastPipeline(ForecastData){
        
            var salesForecastPipeline = Highcharts.chart('forecasts', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_SMD_CHK&title=Sales Forecast Pipeline&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: Next12MonthsCategories,
                    min: 0,
                    max: 12, 
                    labels: {
                        useHTML: true,
                        formatter: function(){
                            var monthYearList = this.value.split('\'');
                            var year = '20'+monthYearList[1];
                            var month = getMonthNumberFromMonthName(monthYearList[0]);
                            var urlString = '';
                            if(month == 'Missed'){
                                urlString = 'duration='+month;
                            } else {
                                urlString = 'year='+year+'&month='+month;
                            }
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_SMD_CHK&title=Sales Forecast Pipeline&click=left&dashboard=SMD_CHK&'+urlString+'\' target=\'blank\'>'+this.value+'</a>';    
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.series.name 
                        + '</span><br/><span style="font-weight: bold">' + this.x 
                        + '</span><br/>Expected Sales: ' + this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                    },
                    split: true
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getRepsColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_SMD_CHK&title=Sales Forecast Pipeline&click=legend';
                                url += '&duration=&str='+this.userOptions.name+'&month=&year=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                                event.preventDefault();
                            },
                            click: function(event) {                        
                                var numberToMinus = parseInt(event.point.x);
                                var d = new Date();
                                d.setMonth(d.getMonth() + numberToMinus);
                                
                                var month = d.getMonth();
                                var year = d.getFullYear();
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_SMD_CHK&title=Sales Forecast Pipeline&click=bar';
                                url += '&duration='+event.point.category+'&str='+this.userOptions.name+'&month='+month+'&year='+year;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: ForecastData
            });

            //For redraw the chart to add colors to the legend symbols
            salesForecastPipeline.addSeries({"data":[]});
            salesForecastPipeline.series[salesForecastPipeline.series.length - 1].remove();

        }

        </script>
    <script>
        /* ---------------------- Company Total Pipeline Last 12 Months ---------------------- */
        var CompanyTotalPipelineData = new Array();
        
        //Calculate map of last 12 year-month
        function getMapLast12Month(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = 12 - month;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }
                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }

            return year_month_obj;
        }
        var DataArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Company_Total_Pipeline_Last_12_Months}',
                function(result, event){

                if (event.status) {
                    const month_year_map = getMapLast12Month();

                    const dashboard_arr = []
                    const month_amount = []
                    result.forEach(el => {
                        for(let char in month_year_map){
                            if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                month_amount.push([char, el.amount])
                            }
                        }
                    })
                    let setted_month = []
                    month_amount.forEach(el => {
                        setted_month.push(el[0])
                    })

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i.toString())){
                            month_amount.push([i.toString(), 0])
                        }
                    }
                    month_amount.sort((a, b) => b[0] - a[0]).reverse()
                    dashboard_arr.push({
                        name: 'companydata',
                        data: month_amount
                    })

                    RenderCompanyTotalPipelineLast12Months(dashboard_arr);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Company Total Pipeline Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Company Total Pipeline Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyTotalPipelineLast12Months(CompanyTotalPipelineData){
        
            Highcharts.chart('companypipeline', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Company Total Pipeline Last 12 Months";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_SMD_CHK&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'middle',
                    enabled: false
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {

                                var chartName = "Company Total Pipeline Last 12 Months";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_SMD_CHK&title='+encodeURI(chartName)+'&click=legend';
                            url += '&duration=&str='+event.target.userOptions.name+'&year=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                                event.preventDefault();
                                
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                let full_year = '20'
                                // var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = full_year + YearIndex
                                var duration = '';

                                var chartName = "Company Total Pipeline Last 12 Months";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Company_Total_Pipeline_SMD_CHK&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                    event.point.series.userOptions.name;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                
                series: CompanyTotalPipelineData
                
            });
        }
        </script>
    <script>
        /* ---------------- Pipeline Last 12 Months by Sales Rep / Team ----------------------*/
        var SalesRepTotalPipelineData = new Array();
        
        var SalesRepTotalPipelineCategories_Temp = new Array();
        var SalesRepTotalPipelineCategories = new Array();
        function getMapLast12Month(){
            let date = new Date();
            date.setDate(1);
            let year_month_obj = {};
            for(let month = 1; month <= 12; month++){
                let index = 12 - month;
                let iteration_month = date.getMonth() + 1;
                let iteration_year = date.getFullYear();

                year_month_obj[index] = {
                    month: iteration_month,
                    year: iteration_year
                }
                //month_year_map[month] = year_month_obj;
                date.setMonth(date.getMonth() - 1);
            }

            return year_month_obj;
        }
        var mainArray = new Array(); 
        var midArray;
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Sales_Reps_Total_Pipeline_Last_12_Months}',
            function(result, event){

                if (event.status) {
                    const month_year_map = getMapLast12Month();
                    const sales_rep_data = []
                    for(let char in result){
                        const month_amount = []
                        result[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        sales_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })

                    }
                    RenderCompanyPipelineLast12MonthsbySalesRepTeam(sales_rep_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Pipeline Last 12 Months by Sales Rep / Team...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Pipeline Last 12 Months by Sales Rep / Team...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyPipelineLast12MonthsbySalesRepTeam(SalesRepTotalPipelineData){
        
            var salesRepsTotalPipelineLastTwelveMonths = Highcharts.chart('salesrepcollectivepipeline', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Pipeline Last 12 Months by Sales Rep / Team";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Reps_Total_Pipeline_SMD_CHK&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br>'+this.series.userOptions.name+'<br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getRepsColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                console.log('YearIndexYearIndexYearIndexYearIndex: ',YearIndex)
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                
                                // var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = '20' + YearIndex 
                                var duration = '';

                                var chartName = "Pipeline Last 12 Months by Sales Rep / Team";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Reps_Total_Pipeline_SMD_CHK&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                    event.point.series.userOptions.name;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            },
                            afterAnimate: function () {
                                this.chart.redraw();
                            }
                        }
                    }
                },
                
                series: SalesRepTotalPipelineData
                
            });

            //For redraw the chart to add colors to the legend symbols
            salesRepsTotalPipelineLastTwelveMonths.addSeries({"data":[]});
            salesRepsTotalPipelineLastTwelveMonths.series[salesRepsTotalPipelineLastTwelveMonths.series.length - 1].remove();

        }

        </script>
    <script>
        /* --------------- Pipeline Last 12 Months By Lead Source ------------------- */
        var TotalPipelineByLeadSourceData = new Array();
        
        var mainArray = new Array();
        var midArray;
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Pipeline_Last_12_Months_By_Lead_Source}',
            function(result, event){

                if (event.status) {
                    const month_year_map = getMapLast12Month();
                    const sales_rep_data = []
                    for(let char in result){
                        const month_amount = []
                        result[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        sales_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })

                    }

                    RenderCompanyPipelineLast12MonthsByLeadSource(sales_rep_data);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Pipeline Last 12 Months By Lead Source...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Pipeline Last 12 Months By Lead Source...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderCompanyPipelineLast12MonthsByLeadSource(TotalPipelineByLeadSourceData){
        
            var salesRepsTotalPipelineLastTwelveMonths = Highcharts.chart('CollectivePipelineByLeadSource', {
                credits: {
                    enabled: false
                },
                title: {
                    text: ''
                },
                chart: {
                    events: {
                        click: function(event) {
                            var chartName = "Pipeline Last 12 Months By Lead Source";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Total_Pipeline_By_Lead_Source_SMD_CHK&title='+encodeURI(chartName)+'&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                subtitle: {
                    text: ''
                },
                
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    },
                    allowDecimals: false
                },
                
                xAxis: {
                    min: 0,
                    categories: Last12MonthsReverseCategories,
                    max:11
                },
                tooltip: {
                    formatter: function () {
                        return '<b style="color: '+this.color+'; font-weight:bold">' + 
                            this.x + '</b><br>'+this.series.userOptions.name+'<br> Amount: '+ this.y.toLocaleString('en-US', {
                                style: 'currency',
                                currency: 'USD',
                            });
                    }
                },
                
                legend: {
                    layout: 'horizontal',
                    align: 'center',
                    verticalAlign: 'bottom',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getLeadSourceColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name ;
                    }
                },
                
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                            },
                            click: function(event) {
                                var d = new Date();

                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var YearIndex = (CategArray[1]).replace("'", "");
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                
                                // var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                                var year = '20' + YearIndex
                                var duration = '';

                                var chartName = "Pipeline Last 12 Months By Lead Source";
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Total_Pipeline_By_Lead_Source_SMD_CHK&title='+encodeURI(chartName)+'&click=point';
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            },
                            afterAnimate: function () {
                                this.chart.redraw();
                            }
                        }
                    }
                },
                
                series: TotalPipelineByLeadSourceData
                
            });

            //For redraw the chart to add colors to the legend symbols
            salesRepsTotalPipelineLastTwelveMonths.addSeries({"data":[]});
            salesRepsTotalPipelineLastTwelveMonths.series[salesRepsTotalPipelineLastTwelveMonths.series.length - 1].remove();

        }

        </script>
    <script>
        /* ------------------- Newly Submitted Opportunities Last 12 Months ------------------------ */
        var NewlySubmittedOpportunitiesDataCountPerMonth = new Array();
        var NewlySubmittedOpportunitiesData = new Array();
        var NewlySubmittedOpportunitiesCategories = new Array();

        
        function NewlySubmittedOpportunities() {
            
            for (var i = 11; i >= 0; i--) {

                if(typeof NewlySubmittedOpportunitiesDataCountPerMonth[11-i] === 'undefined') {
                    NewlySubmittedOpportunitiesDataCountPerMonth[11-i] = 0;
                }
                NewlySubmittedOpportunitiesCategories.push(Last12MonthsCategories[i]+ 
                                                           ' ('+NewlySubmittedOpportunitiesDataCountPerMonth[11-i]+')');
            }
        }

        var mainArray = new Array(); 
        var DataArray = new Array();
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Newly_Submitted_Opportunities}',
            function(result, event){

                if (event.status) {
                    for (var key in result) {

                        DataArray = new Array();

                        mainArray = new Array(); 

                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            subArray = new Array();
                            var amount = item.amount;
                            if(amount != ""){
                                amount = parseInt(amount);
                                subArray.push(item.valueindex, item.amount);
                                DataArray.push(subArray);
                                if(typeof NewlySubmittedOpportunitiesDataCountPerMonth[item.valueindex] === 'undefined') {
                                    NewlySubmittedOpportunitiesDataCountPerMonth[item.valueindex] = amount;
                                }
                                else{
                                    NewlySubmittedOpportunitiesDataCountPerMonth[item.valueindex] += amount;
                                }
                            }
                        }

                        MainArray = {name:"newlySubmittedData", data:DataArray};
                        NewlySubmittedOpportunitiesData.push(MainArray);
                    }
                    
                    NewlySubmittedOpportunities();
                    let setted_month = []
                    NewlySubmittedOpportunitiesData[0].data.forEach(el => setted_month.push(el[0]))

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            NewlySubmittedOpportunitiesData[0].data.push([i, 0])
                        }
                    }
                    NewlySubmittedOpportunitiesData[0].data.sort((a, b) => b[0] - a[0]).reverse()
                    RenderNewlySubmittedOpportunitiesLast12Months(NewlySubmittedOpportunitiesData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Newly Submitted Opportunities Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Newly Submitted Opportunities Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        ); 

        function RenderNewlySubmittedOpportunitiesLast12Months(NewlySubmittedOpportunitiesData){

            var NewlySubmittedOpportunitiesLastTwelveMonths = Highcharts.chart('newlysubmittedopportunities', {

                credits: {
                    enabled: false
                },
                chart: {

                    type: 'line',

                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_SMD_CHK&title=Newly Submitted Opportunities Last 12 Months&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: NewlySubmittedOpportunitiesCategories,
                    min: 0,
                    max: 11
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: '# of Opportunities'
                    }
                },
                tooltip: {
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                        + '</span><br/># of Opportunities: ' + this.y;
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'center',
                    verticalAlign: 'bottom',
                    enabled: false
                },
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        events: {
                            click: function(event) {

                                var d = new Date();
                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                                var duration = '';

                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_SMD_CHK&title=Newly Submitted Opportunities Last 12 Months&click=month-point';
                                url += '&duration=&month='+month+'&year='+year+'&str=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: NewlySubmittedOpportunitiesData
            });

            //For redraw the chart to add colors to the legend symbols
            NewlySubmittedOpportunitiesLastTwelveMonths.addSeries({"data":[]});
            NewlySubmittedOpportunitiesLastTwelveMonths.series[NewlySubmittedOpportunitiesLastTwelveMonths.series.length - 1].remove();
        }
        </script>
        <script>

            /* -------------------- Newly Submitted Opportunities Last 12 Months By Sales Rep / Team */
            
            var NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamDataCountPerMonth = new Array();
            var NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamData = new Array();
            var NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamCategories = new Array();

            
            function NewlySubmittedOpportunitiesSalesTeam() {
                
                for (var i = 11; i >= 0; i--) {

                    if(typeof NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamDataCountPerMonth[11-i] === 'undefined') {
                        NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamDataCountPerMonth[11-i] = 0;
                    }
                    NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamCategories.push(Last12MonthsCategories[i]+
                     ' ('+NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamDataCountPerMonth[11-i]+')');
                }
            }

            var midArray;
            var mainArray = new Array();
            
            Visualforce.remoting.timeout = 120000;

            Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.HospitalityDashboardChinaController.Newly_Submitted_Opportunities_Last_Twelve_Months_By_Sales_Rep_Team}',
                function(result, event){

                    if (event.status) {
                        for (var key in result) {

                            mainArray = new Array(); 

                            result[key].forEach(buildarray);
                            
                            function buildarray(item, index) {

                                subArray = new Array();
                                var amount = item.amount;
                                if(amount != ""){
                                    amount = parseInt(amount);
                                    subArray.push(item.valueindex, item.amount);
                                    mainArray.push(subArray);
                                    if(typeof NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamDataCountPerMonth[item.valueindex] === 'undefined') {
                                        NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamDataCountPerMonth[item.valueindex] = amount;
                                    }
                                    else{
                                        NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamDataCountPerMonth[item.valueindex] += amount;
                                    }
                                }
                            }

                            midArray = {name:key, data:mainArray, custom:key};
                            NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamData.push(midArray);
                        }
                        NewlySubmittedOpportunitiesSalesTeam();


                        NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamData.forEach(el => {
                            let setted_month = []
                            el.data.forEach(el => setted_month.push(el[0]))

                            for(let i = 0; i<12; i++){
                                if(!setted_month.includes(i)){
                                    el.data.push([i, 0])
                                }
                            }
                            el.data.sort((a, b) => b[0] - a[0]).reverse()
                        })
                        RenderNewlySubmittedOpportunitiesSalesRepTeam(NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamData);
                    } else if (event.type === 'exception') {
                        
                            console.log('Exception has occured in Newly Submitted Opportunities by Sales Rep Team...');
                            console.log(event.message);
                            console.log(event.where);
                    } else {
                        console.log('Error occured in Newly Submitted Opportunities by Sales Rep Team...');
                        console.log(event.message);
                    }
                }, 
                {escape: true}
            );

            function RenderNewlySubmittedOpportunitiesSalesRepTeam(NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamData){
                var NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamLastTwelveMonths = Highcharts.chart('NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeam', {
    
                    credits: {
                        enabled: false
                    },
                    chart: {
    
                        type: 'line',
    
                        events: {
                            click: function(event) {
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_SMD_CHK&title=Newly Submitted Opportunities Last 12 Months&click=chart';
                                url += '&duration=&str=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    },
                    title: {
                        text: ''
                    },
                    xAxis: {
                        categories: NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamCategories,
                        min: 0,
                        max: 11
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: '# of Opportunities'
                        }
                    },
                    tooltip: {
                        formatter: function(){
                            return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                            + '</span><br/><span style="font-weight: bold">' + this.series.name 
                            + '</span><br/># of Opportunities: ' + this.y;
                        }
                    },
                    legend: {
                        layout: 'horizontal',
                        align: 'center',
                        verticalAlign: 'bottom',
                        floating: false,
                        enabled: true,
                        labelFormatter: function () {
                            this.color = getRepsColor(this.name);
                            //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                            return '<span style="color: '+this.color+'"></span>' + this.name ;
                        }
                    },
                    plotOptions: {
                        line: {
                            dataLabels: {
                                enabled: false
                            }
                        },
                        series: {
                            label: {
                                connectorAllowed: false
                            },
                            marker: {
                                enabled: true
                            },
                            stickyTracking: false,
                            cursor: 'pointer',
                            events: {
                                click: function(event) {
    
                                    var d = new Date();
                                    var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                    
                                    var CategArray = event.point.category.split(" ");
                                    var CurrentMonth = parseInt(d.getMonth()) + 1;
                                    
                                    var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                    var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                                    var duration = '';
    
                                    var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_SMD_CHK&title=Newly Submitted Opportunities Last 12 Months&click=point';
                                    url += '&duration=&month='+month+'&year='+year+'&str='+this.userOptions.name;
                                    url += '&dashboard=SMD_CHK';
                                    window.open(url, '_blank');
                                }
                            }
                        }
                    },
                    series: NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamData
                });
    
                //For redraw the chart to add colors to the legend symbols
                NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamLastTwelveMonths.addSeries({"data":[]});
                NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamLastTwelveMonths.series[NewlySubmittedOpportunitiesLastTwelveMonthsBySalesRepTeamLastTwelveMonths.series.length - 1].remove();
            }
            </script>
    <script>
        /* ------------------------- Newly Submitted Opportunities Last 12 Months by Lead Source ---------------------- */
        var NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceDataCountPerMonth = new Array();
        var NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceData = new Array();
        var NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceCategories = new Array();
        
        function NewlySubmittedOpportunitiesLeadSource() {
            
            for (var i = 11; i >= 0; i--) {

                if(typeof NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceDataCountPerMonth[11-i] === 'undefined') {
                    NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceDataCountPerMonth[11-i] = 0;
                }
                NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceCategories.push(
                    Last12MonthsCategories[i]+ 
                    ' ('+NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceDataCountPerMonth[11-i]+')');
            }
        }

        var midArray;
        var mainArray = new Array();
        
        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Newly_Submitted_Opportunities_Last_12_Months_By_Lead_Source}',
            function(result, event){

                if (event.status) {
                    for (var key in result) {

                        mainArray = new Array(); 

                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            subArray = new Array();
                            var amount = item.amount;
                            if(amount != ""){
                                amount = parseInt(amount);
                                subArray.push(item.valueindex, item.amount);
                                mainArray.push(subArray);
                                if(typeof NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceDataCountPerMonth[item.valueindex] === 'undefined') {
                                    NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceDataCountPerMonth[item.valueindex] = amount;
                                }
                                else{
                                    NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceDataCountPerMonth[item.valueindex] += amount;
                                }
                            }
                        }

                        midArray = {name:key, data:mainArray, custom:key};
                        NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceData.push(midArray);
                    }
                    NewlySubmittedOpportunitiesLeadSource();
                    NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceData.forEach(el => {
                        let setted_month = []
                        el.data.forEach(el => setted_month.push(el[0]))

                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i)){
                                el.data.push([i, 0])
                            }
                        }
                        el.data.sort((a, b) => b[0] - a[0]).reverse()
                    })
                    RenderNewlySubmittedOpportunitiesLeadSource(NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Newly Submitted Opportunities by Lead Source...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Newly Submitted Opportunities by Lead Source...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderNewlySubmittedOpportunitiesLeadSource(NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceData){
        var NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSource = 
            Highcharts.chart('newlySubmittedOpportunitiesLastTwelveMonthsByLeadSource', {
            credits: {
                enabled: false
            },
            chart: {
               
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_By_Lead_Source_SMD_CHK&title=Newly Submitted Opportunities Last 12 Months by Lead Source&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceCategories,
                min: 0,
                max: 11
            },
            yAxis: {
                min: 0,
                title: {
                    text: '# of Opportunities'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/><span style="font-weight: bold">' + this.series.name 
                    + '</span><br/># of Opportunities: ' + this.y;
                }
            },
            legend: {
                layout: 'horizontal',
                align: 'center',
                verticalAlign: 'bottom',
                enabled: true,
                labelFormatter: function () {
                    this.color = getLeadSourceColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    events: {
                        legendItemClick: function(event) {
                        },
                        click: function(event) {

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Newly_Submitted_Opportunities_Last_12_Months_By_Lead_Source_SMD_CHK&title=Newly Submitted Opportunities Last 12 Months By Lead Source&click=point';
                            url += '&duration=&month='+month+'&year='+year+'&str='+this.userOptions.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSourceData
        });

        //For redraw the chart to add colors to the legend symbols
        NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSource.addSeries({"data":[]});
        NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSource.series[NewlySubmittedOpportunitiesLastTwelveMonthsByLeadSource.series.length - 1].remove();
        }
        </script>
    <script>
        /* ---------------------- Lost Opportunities Last 12 Months ------------------------ */
        var LostOpptysDataCountPerMonth = new Array();
        var LostOpptysData = new Array();
        var LostOpptysCategories = new Array();
        
        function LostOpportunities() {
            
            for (var i = 11; i >= 0; i--) {
                if(typeof LostOpptysDataCountPerMonth[11-i] === 'undefined') {
                    LostOpptysDataCountPerMonth[11-i] = 0;
                }
                LostOpptysCategories.push(Last12MonthsCategories[i]+ 
                ' ('+LostOpptysDataCountPerMonth[11-i]+')');
            }
        }
        
        var dataArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Lost_Opportunities}',
            function(result, event){

                if (event.status) {
                    for (var key in result) {

                        mainArray = new Array();  

                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            var subArray = new Array();
                            var amount = item.amount;
                            if(amount != ""){
                                amount = parseInt(amount);
                                subArray.push(item.valueindex, item.amount);
                                dataArray.push(subArray);
                                if(typeof LostOpptysDataCountPerMonth[item.valueindex] === 'undefined') {
                                    LostOpptysDataCountPerMonth[item.valueindex] = amount;
                                }
                                else{
                                    LostOpptysDataCountPerMonth[item.valueindex] += amount;
                                }
                            }
                        }
                    }

                    var mainArray = {name:"lostOpportunities", data:dataArray};
                    LostOpptysData.push(mainArray);

                    LostOpportunities();
                    let setted_month = []
                    LostOpptysData[0].data.forEach(el => setted_month.push(el[0]))

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            LostOpptysData[0].data.push([i, 0])
                        }
                    }
                    LostOpptysData[0].data.sort((a, b) => b[0] - a[0]).reverse()
                    RenderChartLostOpportunities(LostOpptysData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Lost Opportunities Last 12 Months...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                    console.log('Error occured in Lost Opportunities Last 12 Months...');
                    console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderChartLostOpportunities(LostOpptysData){
        
            var LostOpportunitiesLastTwelveMonths = Highcharts.chart('lostopportunities', {
                credits: {
                    enabled: false
                },
                chart: {
                    
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_SMD_CHK&title=Lost Opportunities Last 12 Months&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: LostOpptysCategories,
                    min:0,
                    max:11
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: '# of Opportunities'
                    },
                    allowDecimals: false
                },
                tooltip: {
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                        + '</span><br/># of Opportunities: ' + this.y;
                    }
                },
                legend: {
                    layout: 'vertical',
                    align: 'center',
                    verticalAlign: 'bottom',
                    enabled: false
                },             
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        }
                    },
                    series: {
                        label: {
                            connectorAllowed: false
                        },
                        marker: {
                            enabled: true
                        },
                        stickyTracking: false,
                        cursor: 'pointer',
                        
                        events: {
                            click: function(event) { 
                                var d = new Date();
                                var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                                
                                var CategArray = event.point.category.split(" ");
                                var CurrentMonth = parseInt(d.getMonth()) + 1;
                                
                                var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                                var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                                var duration = '';
                                
                                
                                var chartName = "Lost Opportunities Last 12 Months";          
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_SMD_CHK&title='+encodeURI(chartName)+'&click=month-point';                                 
                                url += '&duration='+duration+'&month='+month+'&year='+year+'&str=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: LostOpptysData
            });

            //For redraw the chart to add colors to the legend symbols
            LostOpportunitiesLastTwelveMonths.addSeries({"data":[]});
            LostOpportunitiesLastTwelveMonths.series[LostOpportunitiesLastTwelveMonths.series.length - 1].remove();

        }

        </script>
    <script>
        /* ------------------------ Lost Opportunities Last 12 Months By Sales Rep / Team ----------------- */
    var LostOpptysBySalesRepTeamDataCountPerMonth = new Array();
    var LostOpptysBySalesRepTeamData = new Array();
    var LostOpptysBySalesRepTeamCategories = new Array();
    
    function LostOpportunitiesSalesTeam() {
        
        for (var i = 11; i >= 0; i--) {
            
            if(typeof LostOpptysBySalesRepTeamDataCountPerMonth[11-i] === 'undefined') {
                LostOpptysBySalesRepTeamDataCountPerMonth[11-i] = 0;
            }
            LostOpptysBySalesRepTeamCategories.push(Last12MonthsCategories[i]+ 
            ' ('+LostOpptysBySalesRepTeamDataCountPerMonth[11-i]+')');
        }
    }
    
    
    var midArray;
    var mainArray = new Array(); 
    var subArray = new Array();


    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Lost_Opportunities_by_Sales_Rep_Team}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();  

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        subArray = new Array();
                        var amount = item.amount;
                        if(amount != ""){
                            amount = parseInt(amount);
                            subArray.push(item.valueindex, item.amount);
                            mainArray.push(subArray);
                            if(typeof LostOpptysBySalesRepTeamDataCountPerMonth[item.valueindex] === 'undefined') {
                                LostOpptysBySalesRepTeamDataCountPerMonth[item.valueindex] = amount;
                            }
                            else{
                                LostOpptysBySalesRepTeamDataCountPerMonth[item.valueindex] += amount;
                            }
                        }
                    }

                    midArray = {name:key, data:mainArray, custom:"{!YEAR(TODAY())}"};
                    LostOpptysBySalesRepTeamData.push(midArray); 
                }

                LostOpportunitiesSalesTeam();
                LostOpptysBySalesRepTeamData.forEach(el => {
                    let setted_month = []
                    el.data.forEach(el => setted_month.push(el[0]))

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            el.data.push([i, 0])
                        }
                    }
                    el.data.sort((a, b) => b[0] - a[0]).reverse()
                })
                RenderChartLostOpportunitiesSalesTeam(LostOpptysBySalesRepTeamData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Lost Opportunities by Sales Rep Team...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Lost Opportunities by Sales Rep Team...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );
    function RenderChartLostOpportunitiesSalesTeam(LostOpptysBySalesRepTeamData){
        var LostOpportunitiesLastTwelveMonthsBySalesRepTeam = Highcharts.chart('lostOpportunitiesBySalesRepTeam', {
            credits: {
                enabled: false
            },
            chart: {
                
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_SMD_CHK&title=Lost Opportunities&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: LostOpptysBySalesRepTeamCategories,
                min:0,
                max:11
            },
            yAxis: {
                min: 0,
                title: {
                    text: '# of Opportunities'
                },
                allowDecimals: false
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/><span style="font-weight: bold">' + this.series.name 
                    + '</span><br/># of Opportunities: ' + this.y;
                }
            },
            legend: {
                layout: 'horizontal',
                align: 'center',
                verticalAlign: 'bottom',
                enabled: true,
                labelFormatter: function () {
                    this.color = getRepsColor(this.name);
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    
                    events: {
                        click: function(event) { 
                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';
                            
                            
                            var chartName = "Lost Opportunities";          
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Lost_Opportunities_SMD_CHK&title='+encodeURI(chartName)+'&click=point';                                 
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: LostOpptysBySalesRepTeamData
        });

        //For redraw the chart to add colors to the legend symbols
        LostOpportunitiesLastTwelveMonthsBySalesRepTeam.addSeries({"data":[]});
        LostOpportunitiesLastTwelveMonthsBySalesRepTeam.series[LostOpportunitiesLastTwelveMonthsBySalesRepTeam.series.length - 1].remove();
    }
    </script>
    <script>
        /* ------------------- Lost Opportunities Loss Reason Last 12 Months ------------------- */
    var LossReasonsDataCountPerMonth = new Array();
    var LossReasonsData = new Array();
    var LossReasonsCategories = new Array();
    
    function LostOpportunitiesLossReason() {
        
        for (var i = 11; i >= 0; i--) {
            
            if(typeof LossReasonsDataCountPerMonth[11-i] === 'undefined') {
                LossReasonsDataCountPerMonth[11-i] = 0;
            }
            LossReasonsCategories.push(Last12MonthsCategories[i]+ 
            ' ('+LossReasonsDataCountPerMonth[11-i]+')');
        }
    }
    

    var midArray; 
    var mainArray = new Array();
    var subArray = new Array(); 

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Loss_Reasons}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();
                    subArray = new Array();  

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        var subArray = new Array();        
                        var amount = item.amount;
                        if(amount != ""){
                            amount = parseInt(amount);
                            subArray.push(item.valueindex, item.amount);
                            mainArray.push(subArray);

                            if(typeof LossReasonsDataCountPerMonth[item.valueindex] === 'undefined') {
                                LossReasonsDataCountPerMonth[item.valueindex] = amount;
                            }
                            else{
                                LossReasonsDataCountPerMonth[item.valueindex] += amount;
                            }
                        }
                    }

                    midArray = {name:key, data:mainArray, custom:"{!YEAR(TODAY())}"};
                    LossReasonsData.push(midArray);  
                }

                LostOpportunitiesLossReason();
                LossReasonsData.forEach(el => {
                    let setted_month = []
                    el.data.forEach(el => setted_month.push(el[0]))

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            el.data.push([i, 0])
                        }
                    }
                    el.data.sort((a, b) => b[0] - a[0]).reverse()
                })
                RenderChartLostOpportunitiesLossReason(LossReasonsData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Lost Opportunities by Loss Reason...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                console.log('Error occured in Lost Opportunities by Loss Reason...');
                console.log(event.message);
            }
        }, 
        {escape: true}
    );
    function RenderChartLostOpportunitiesLossReason(LossReasonsData){

        Highcharts.chart('lossreasons', {
            credits: {
                enabled: false
            },
            chart: {
                
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Loss_Reasons_SMD_CHK&title=Loss Reason&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: LossReasonsCategories,
                min:0,
                max:11
            },
            yAxis: {
                min: 0,
                title: {
                    text: '# of Opportunities'
                },
                allowDecimals: false
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/><span style="font-weight: bold">' + this.series.name 
                    + '</span><br/># of Opportunities: ' + this.y;
                }
            },
            legend: {
                layout: 'horizontal',
                align: 'center',
                horizontalAlign: 'bottom',
                enabled: true
            },
            
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    
                    events: {
                        click: function(event) { 
                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';
                            
                            
                            var chartName = "Loss Reason";          
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Loss_Reasons_SMD_CHK&title='+encodeURI(chartName)+'&click=point';                                 
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: LossReasonsData
        });
    }
    </script>
    <script>
        /* -------------------- Sales by Lead Source Last 12 Months ------------------ */
    var SalesByLeadSourceLastTwelveMonthsData = new Array();
    
    var midArray;
    var mainArray = new Array();
    var subArray = new Array(); 

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Sales_By_Lead_Source_Last_12_Months}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();  

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        subArray = new Array();
    
                        subArray.push(item.valueindex, item.amount);
                        mainArray.push(subArray);
                    }

                    midArray = {name:key, data:mainArray, custom:key};
    
                    SalesByLeadSourceLastTwelveMonthsData.push(midArray); 
                }

                RenderChartSalesByLeadSource(SalesByLeadSourceLastTwelveMonthsData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Sales_By_Lead_Source_Last_12_Months...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in Sales_By_Lead_Source_Last_12_Months...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartSalesByLeadSource(SalesByLeadSourceLastTwelveMonthsData){
    
        var salesByLeadSourceLastTwelveMonths = Highcharts.chart('Sales_By_Lead_Source_Last_12_Months', {
            credits: {
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_By_Lead_Source_Last_12_Months_SMD_CHK&title=Sales by Lead Source Last 12 Months - Hospitality&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: Last12MonthsCategories,
                min: 0,
                max: 11,
                labels: {
                    useHTML: true,
                    formatter: function(){

                        var monthYearList = this.value.split('\'');
                        var year = '20'+monthYearList[1];
                        var month = getMonthNumberFromMonthName(monthYearList[0]);
                        return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_By_Lead_Source_Last_12_Months_SMD_CHK&title=Sales by Lead Source Last 12 Months - Hospitality&click=left&dashboard=SMD_CHK&year='+year+'&month='+month+'\' target=\'blank\'>'+this.value+'</a>';   
                    }
                } 
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Amount ($)'
                }
            },
            tooltip: {
                shared: false,
                formatter: function () {
                    return '<b style="color: '+this.series.color+'; font-weight:bold">' + 
                        this.series.userOptions.custom + '</b><br>'+ this.x +'<br>Amount: '+ this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                },
                split: true,
                positioner: function(labelWidth, labelHeight, point) {
                    return {
                        x: point.plotX - point.h/2 + labelWidth/2,
                        y: point.plotY
                    };
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,
                enabled: true,
                labelFormatter: function () {
                    this.color = getLeadSourceColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    cursor: 'pointer',
                    enabled: true,
                    events: {
                        legendItemClick: function(event) {

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_By_Lead_Source_Last_12_Months_SMD_CHK&title=Sales by Lead Source Last 12 Months - Hospitality&click=legend';
                            url += '&duration=&str='+event.target.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                            event.preventDefault();
                            
                        },
                        click: function(event) { 
                            
                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_By_Lead_Source_Last_12_Months_SMD_CHK&title=Sales by Lead Source Last 12 Months - Hospitality&click=bar';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+event.point.series.userOptions.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: SalesByLeadSourceLastTwelveMonthsData
        });

        //For redraw the chart to add colors to the legend symbols
        salesByLeadSourceLastTwelveMonths.addSeries({"data":[]});
        salesByLeadSourceLastTwelveMonths.series[salesByLeadSourceLastTwelveMonths.series.length - 1].remove();

    }

    </script>
    <script>
        /* ------------------- Sales Forecast Pipeline by Lead Source -------------------- */
        var SalesForecastPipelineByLeadSourceData = new Array();
        
        var midArray;
        var mainArray = new Array();
        var subArray = new Array();
        var i = 0;

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Sales_Forecast_Pipeline_By_Lead_Source}',
            function(result, event){

                if (event.status) {
                    for (var key in result) {

                        mainArray = new Array();
                        subArray = new Array();
                        i = 0; 

                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            if(i == 0){
                                subArray = new Array();
                                var checkNum = item.misc + "abc";
                                var valueIs = 0;
                                if(checkNum == "abc" || checkNum == "0abc"){
                                
                                valueIs = null;
                                }else{
                                
                                valueIs = parseFloat(item.misc);
                                }
                                
                                subArray.push(0, valueIs);
                                mainArray.push(subArray);
                            }
                            
                            subArray = new Array();
                            subArray.push(parseInt(item.valueindex) + 1, item.amount);
                            mainArray.push(subArray);
                            i++;
                        }

                        midArray = {name:key, data:mainArray, custom:"{!YEAR(TODAY())}"};
                        SalesForecastPipelineByLeadSourceData.push(midArray); 
                    }

                    RenderChartSalesForecastLineByLeadSource(SalesForecastPipelineByLeadSourceData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Sales Forecast Pipeline By Leadsource...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                        console.log('Error occured in Sales Forecast Pipeline By Leadsource...');
                        console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function RenderChartSalesForecastLineByLeadSource(SalesForecastPipelineByLeadSourceData){
        
            var salesForecastPipelineByLeadSource = Highcharts.chart('sales_forecast_pipeline_by_lead_source', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_By_Lead_Source_SMD_CHK&title=Sales Forecast Pipeline by Lead Source&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: Next12MonthsCategories,
                    min: 0,
                    max: 12, 
                    labels: {
                        useHTML: true,
                        formatter: function(){
                            var monthYearList = this.value.split('\'');
                            var year = '20'+monthYearList[1];
                            var month = getMonthNumberFromMonthName(monthYearList[0]);
                            var urlString = '';
                            if(month == 'Missed'){
                                urlString = 'duration='+month;
                            } else {
                                urlString = 'year='+year+'&month='+month;
                            }
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_By_Lead_Source_SMD_CHK&title=Sales Forecast Pipeline by Lead Source&click=left&dashboard=SMD_CHK&'+urlString+'\' target=\'blank\'>'+this.value+'</a>';    
                        }
                    } 
                },
                yAxis: {
                    min: 0,
                    allowDecimals: false,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.series.name 
                        + '</span><br/><span style="font-weight: bold">' + this.x 
                        + '</span><br/>Expected Sales: ' + this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                    },
                    split: true
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true,
                    labelFormatter: function () {
                        this.color = getLeadSourceColor(this.name);
                        return '<span style="color: '+this.color+'"></span>' + this.name;
                    }
                },
                plotOptions: {
                    series: {
                        stacking: 'normal',
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_By_Lead_Source_SMD_CHK&title=Sales Forecast Pipeline by Lead Source&click=legend';
                                url += '&duration=&str='+this.userOptions.name+'&month=&year=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                                event.preventDefault();
                            },
                            click: function(event) {                        
                                var numberToMinus = parseInt(event.point.x);
                                var d = new Date();
                                d.setMonth(d.getMonth() + numberToMinus);
                                
                                var month = d.getMonth();
                                var year = d.getFullYear();
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Sales_Forecast_Pipeline_By_Lead_Source_SMD_CHK&title=Sales Forecast Pipeline by Lead Source&click=bar';
                                url += '&duration='+event.point.category+'&str='+this.userOptions.name+'&month='+month+'&year='+year;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: SalesForecastPipelineByLeadSourceData
            });

            //For redraw the chart to add colors to the legend symbols
            salesForecastPipelineByLeadSource.addSeries({"data":[]});
            salesForecastPipelineByLeadSource.series[salesForecastPipelineByLeadSource.series.length - 1].remove();
        }
        </script>
        <script>
            /* --------------------- Active Opportunities by Stage -------------------- */
        var ActiveOpptyData = new Array();
        var ActiveOpptyCategories = new Array();
        
        var midArray;
        var subArray = new Array();

        Visualforce.remoting.timeout = 120000;

        Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.HospitalityDashboardChinaController.Active_Opportunities_By_Stage}',
            function(result, event){

                if (event.status) {
                    for (var key in result) {

                        mainArray = new Array();

                        result[key].forEach(buildarray);
                        
                        function buildarray(item, index) {

                            ActiveOpptyCategories.push(item.name);

                            subArray = new Array();
                            subArray.push(item.valueindex, item.amount);
                            
                            mainArray.push(subArray);
                        }

                        midArray = {name:key, data:mainArray, custom:key};
        
                        ActiveOpptyData.push(midArray);
                    }

                    ActiveOpptyCategories = ActiveOpptyCategories.filter(onlyUnique);

                    ActiveOpptyCategories.sort();

                    RenderChartActiveOpportunitiesByStage(ActiveOpptyData);
                } else if (event.type === 'exception') {
                    
                        console.log('Exception has occured in Active Opportunities by Stage...');
                        console.log(event.message);
                        console.log(event.where);
                } else {
                        console.log('Error occured in Active Opportunities by Stage...');
                        console.log(event.message);
                }
            }, 
            {escape: true}
        );

        function onlyUnique(value, index, self) {
            return self.indexOf(value) === index;
        }

        function RenderChartActiveOpportunitiesByStage(ActiveOpptyData){
        
            var activeOpportunitiesByStage = Highcharts.chart('activeopportunitiesbystage', {
                credits: {
                    enabled: false
                },
                chart: {
                    type: 'bar',
                    events: {
                        click: function(event) {
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Active_Opportunities_By_Stage_SMD_CHK&title=Active Opportunities By Stage&click=chart';
                            url += '&duration=&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                },
                title: {
                    text: ''
                },

                xAxis: {
                    categories: ActiveOpptyCategories,
                    min:0,
                    max: ActiveOpptyCategories.length - 1,
                    labels: {
                        useHTML: true,
                        formatter: function(){
                            return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Active_Opportunities_By_Stage_SMD_CHK&title=Active Opportunities By Stage&click=left&dashboard=SMD_CHK&str='+this.value+'\' target=\'blank\'>'+this.value+'</a>';    
                        }
                    } 
                },

                yAxis: {
                    min: 0,
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: false,
                    formatter: function(){
                        return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                        + '</span><br/><span style="font-weight: bold">' + this.series.name 
                        + '</span><br/>Amount: ' + this.y.toLocaleString('en-US', {
                            style: 'currency',
                            currency: 'USD',
                        });
                    },
                    split: true
                },
                legend: {
                    layout: 'vertical',
                    align: 'right',
                    verticalAlign: 'top',
                    floating: false,
                    enabled: true
                    // labelFormatter: function () {
                    //     this.color = getLeadSourceColor(this.name);
                    //     return '<span style="color: '+this.color+'"></span>' + this.name;
                    // }
                },
                plotOptions: {
                    series: {
                        stacking: 'column',
                        cursor: 'pointer',
                        events: {
                            legendItemClick: function(event) {
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Active_Opportunities_By_Stage_SMD_CHK&title=Active Opportunities By Stage&click=legend';
                                url += '&duration='+this.userOptions.name+'&str=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                                event.preventDefault();
                                
                            },
                            click: function(event) {                           
                                var category = event.point.category;
                                var duration = this.userOptions.name;
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Active_Opportunities_By_Stage_SMD_CHK&title=Active Opportunities By Stage&click=bar';
                                url += '&duration='+duration+'&str='+category;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                        }
                    }
                },
                series: ActiveOpptyData
            });

            //For redraw the chart to add colors to the legend symbols
            activeOpportunitiesByStage.addSeries({"data":[]});
            activeOpportunitiesByStage.series[activeOpportunitiesByStage.series.length - 1].remove();
        }
        </script>
    <script>
        /* ------------------- Negotiation Win Rate ----------------------- */
    var NegWinRateData = new Array();
    var NegWinRateCategories = new Array();
    var midArray;

    var mainArray = new Array(); 

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Negotiation_WinRate}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        var subArray = new Array();
                        subArray.push(item.valueindex, item.amount);
                        mainArray.push(subArray);
                    }

                    NegWinRateCategories.push(key);
                    midArray = {name:key.split(',')[0], data:mainArray, custom:key};      
                    NegWinRateData.push(midArray);

                }

                NegWinRateCategories = NegWinRateCategories.filter(onlyUnique);

                NegWinRateCategories.sort();

                RenderChartNegotiationWinRate(NegWinRateData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Negotiation Win Rate...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in Negotiation Win Rate...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartNegotiationWinRate(NegWinRateData){
    
        var NeglectedWinRateSMD = Highcharts.chart('Neg_Win_Rate_SMD_CHK', {
            credits:{
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Neg_Win_Rate_SMD_CHK&title=Negotiation Win Rate&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,
                enabled: true,
                labelFormatter: function () {
                    this.color = getRepsColor(this.name);
                    return '<span style="color: '+this.color+'"></span>' + this.name;
                }         
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: NegWinRateCategories,
                crosshair: false,
                min: 0
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Rate (%)'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/>Win Rate: '+this.y+'%';
                },
                shared: false
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    minPointLength: 5,
                    cursor: 'pointer',
                    events: {
                        click: function(event) { 
                            
                            var category = event.point.category;
                            // var duration = this.userOptions.name;
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Neg_Win_Rate_SMD_CHK&title=Negotiation Win Rate&click=bar';
                            url += '&duration=&year=&str='+category;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                            
                        }
                    }
                }
            },
            series: NegWinRateData
        });

        //For redraw the chart to add colors to the legend symbols
        NeglectedWinRateSMD.addSeries({"data":[]});
        NeglectedWinRateSMD.series[NeglectedWinRateSMD.series.length - 1].remove();

    }

    </script>
    <script>
        /* -------------------- Win Rate ------------------------ */
    var WinRateData = new Array();
    var WinRateCategories = new Array();
    var midArray;

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Win_Rate}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        var subArray = new Array();
                        subArray.push(item.valueindex, item.amount);
                        mainArray.push(subArray);
                    }

                    WinRateCategories.push(key);
                    midArray = {name:(key).split(',')[0], data:mainArray, custom:key};      
                    WinRateData.push(midArray);
     
                }

                WinRateCategories = WinRateCategories.filter(onlyUnique);

                WinRateCategories.sort();

                RenderChartWinRate(WinRateData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Win Rate...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in Win Rate...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );
    
    function RenderChartWinRate(WinRateData){
        var winRateSMD = Highcharts.chart('Win_Rate_SMD_CHK', {
            credits:{
                enabled: false
            },
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Win_Rate_SMD_CHK&title=Win Rate&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                floating: false,  
                enabled: true,
                labelFormatter: function () {
                    this.color = getRepsColor(this.name);
                    return '<span style="color: '+this.color+'"></span>' + this.name;
                }     
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: WinRateCategories,
                crosshair: false,
                min: 0,  
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: 'Rate (%)'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/>Win Rate: '+this.y+'%';
                },
                shared: false
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    minPointLength: 5,
                    cursor: 'pointer',
                    events: {
                        click: function(event) { 
                            
                            var category = event.point.category;
                            // var duration = this.userOptions.name;
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Win_Rate_SMD_CHK&title=Win Rate&click=bar';
                            url += '&duration=&year=&str='+category;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                            
                        }
                    }
                }
            },
            series: WinRateData
        });

        //For redraw the chart to add colors to the legend symbols
        winRateSMD.addSeries({"data":[]});
        winRateSMD.series[winRateSMD.series.length - 1].remove();
    }
    </script>
    <script>
        /* ------------------- Activity Graph Last 12 Months ----------------------- */
    var ActivityGraphData = new Array();
    
    var midArray;
    var subArray = new Array();
    function getMapLast12Month(){
        let date = new Date();
        date.setDate(1);
        let year_month_obj = {};
        for(let month = 1; month <= 12; month++){
            let index = 12 - month;
            let iteration_month = date.getMonth() + 1;
            let iteration_year = date.getFullYear();

            year_month_obj[index] = {
                month: iteration_month,
                year: iteration_year
            }
            //month_year_map[month] = year_month_obj;
            date.setMonth(date.getMonth() - 1);
        }

        return year_month_obj;
    }
    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Activity_Graph_Last_12_Months}',
        function(result, event){

            if (event.status) {
                const month_year_map = getMapLast12Month();
                    const sales_rep_data = []
                    for(let char in result){
                        const month_amount = []
                        result[char].forEach(el => {
                            for(let char in month_year_map){
                                if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                    month_amount.push([char, el.amount])
                                }
                            }
                        })
                        let setted_month = []
                        month_amount.forEach(el => {
                            setted_month.push(el[0])
                        })
                        for(let i = 0; i<12; i++){
                            if(!setted_month.includes(i.toString())){
                                month_amount.push([i.toString(), 0])
                            }
                        }
                        month_amount.sort((a, b) => b[0] - a[0]).reverse()

                        sales_rep_data.push({
                            name: char,
                            data: month_amount,
                            custom: char
                        })
                    }
                RenderChartActivityGraph(sales_rep_data);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Activity Graph...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in Activity Graph...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartActivityGraph(ActivityGraphData){
    
        var ActivityGraphLastTwelveMonths = Highcharts.chart('activitygraph', {
            credits: {
                enabled: false
            },
            title: {
                text: ''
            },
            chart: {
                events: {
                    click: function(event) {
                        var chartName = "Activity Graph Last 12 Months";
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Activity_Graph_Last_12_Months_SMD_CHK&title='+encodeURI(chartName)+'&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            subtitle: {
                text: ''
            },
            
            yAxis: {
                min: 0,
                title: {
                    text: '# of Opportunities'
                }
            },
            
            xAxis: {
                min: 0,
                categories: Last12MonthsReverseCategories,
                max:11
            },
            tooltip: {
                formatter: function () {
                    return '<b style="color: '+this.color+'; font-weight:bold">' + 
                        this.x + '</b><br>'+this.series.userOptions.name
                        +'<br> <b># of Activity Opportunities: </b>'+ this.y
                }
            },
            
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                enabled: true,
                labelFormatter: function () {
                    this.color = getRepsColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    events: {
                        legendItemClick: function(event) {
                        },
                        click: function(event) {
                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            var chartName = "Activity Graph Last 12 Months";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Activity_Graph_Last_12_Months_SMD_CHK&title='+encodeURI(chartName)+'&click=point';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                event.point.series.userOptions.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            
            series: ActivityGraphData
            
        });

        //For redraw the chart to add colors to the legend symbols
        ActivityGraphLastTwelveMonths.addSeries({"data":[]});
        ActivityGraphLastTwelveMonths.series[ActivityGraphLastTwelveMonths.series.length - 1].remove();
    }
    </script>
    <script>
        /* -------------------------- Tasks Completion ------------------------------ */
    var TasksCompletionData = new Array();
    var TasksCompletionCategories = new Array();

    var midArray;

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Tasks_Completion}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        TasksCompletionCategories.push(item.name);

                        var innerArray = new Array();
                        innerArray.push(item.valueindex, item.amount);
                        mainArray.push(innerArray);
                    }

                    midArray = {name:key, data:mainArray, custom:key};
                    TasksCompletionData.push(midArray);
                }

                TasksCompletionCategories = TasksCompletionCategories.filter(onlyUnique);

                TasksCompletionCategories.sort();

                RenderChartTasksCompletion(TasksCompletionData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Tasks Completion...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in Tasks Completion...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartTasksCompletion(TasksCompletionData){

        Highcharts.chart('TasksCompletion', {
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Tasks_Completion_SMD_CHK&title=Tasks Completion&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: TasksCompletionCategories,
                min:0,
                max: TasksCompletionCategories.length - 1,
                title: {
                    text: null
                },
                crosshair: true,
                labels: {
                    useHTML: true,
                    formatter: function(){
                        return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=Tasks_Completion_SMD_CHK&title=Tasks Completion&click=left&dashboard=SMD_CHK&str='+this.value+'\' target=\'blank\'>'+this.value+'</a>';    
                    }
                } 
            },

            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: '# of Tasks'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/><span style="font-weight: bold">' + this.series.name 
                    + '</span><br/># of Tasks: ' + this.y;
                }
            },
            plotOptions: {
                bar: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series:{
                    minPointLength: 5,
                    cursor: 'pointer',
                    events: {
                        legendItemClick: function(event) {
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Tasks_Completion_SMD_CHK&title=Tasks Completion&click=legend';
                            url += '&duration='+this.userOptions.name+'&str=';
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                            event.preventDefault();
                            
                        },
                        click: function(event) {                           
                            //var index = event.point.x;
                            var duration = this.userOptions.name;
                            
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Tasks_Completion_SMD_CHK&title=Tasks Completion&click=bar';
                            url += '&duration='+duration+'&str='+event.point.category;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top'
            },
            credits: {
                enabled: false
            },
            series: TasksCompletionData
        });
    }
    </script>
    <script>
        /* ----------------------- Neglected Opportunities ------------------ */
    var NeglectedOpptyData = new Array();
    var NeglectedOpptyCategories = new Array();

    var midArray;
    function getMapLast12Month(){
        let date = new Date();
        date.setDate(1);
        let year_month_obj = {};
        for(let month = 1; month <= 12; month++){
            let index = 12 - month;
            let iteration_month = date.getMonth() + 1;
            let iteration_year = date.getFullYear();

            year_month_obj[index] = {
                month: iteration_month,
                year: iteration_year
            }
            //month_year_map[month] = year_month_obj;
            date.setMonth(date.getMonth() - 1);
        }

        return year_month_obj;
    }
    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.Neglected_Opportunities}',
        function(result, event){
            if (event.status) {
                const month_year_map = getMapLast12Month();
                const sales_rep_data = [];
                for(let char in result){
                    const month_amount = []
                    const custom = []
                    result[char].forEach(el => {
                        for(let char in month_year_map){
                            if(el.year == month_year_map[char].year && el.month == month_year_map[char].month){
                                month_amount.push([+char, el.neglected_opportunity_amount])
                                let custom_str = [el.neglected_opportunity_amount, el.all_opportunity_amount, el.neglection_percent].join(':')
                                custom.push([+char, custom_str])
                            }

                        }
                    })
                    let setted_month = []
                    let custom_arr = []
                    month_amount.forEach(el => {
                        setted_month.push(el[0])
                    })
                    custom.forEach(el => {
                        custom_arr.push(el[0])
                    })
                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            month_amount.push([i, 0])
                        }

                        if(!custom_arr.includes(i)){
                            custom.push([i, 0])
                        }
                    }

                    month_amount.sort((a, b) => b[0] - a[0]).reverse()
                    custom.sort((a, b) => b[0] - a[0]).reverse()

                    sales_rep_data.push({
                        name: char,
                        data: month_amount,
                        custom: custom
                    })

                }
                console.log('negle: ', JSON.stringify(sales_rep_data));
            RenderChartNeglectedOpportunities(sales_rep_data);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in Neglected Opportunities...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in Neglected Opportunities...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartNeglectedOpportunities(NeglectedOpptyData){
        var neglectedopportunitieschart = Highcharts.chart('NeglectedOppty', {
            chart: {
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Neglected_Opportunities_SMD_CHK&title=Neglected Opportunities&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                min: 0,
                categories: Last12MonthsReverseCategories,
                max:11
            },

            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: '# of Opportunities (with %)'
                }
            },
            tooltip: {
                formatter: function(){

                    var tool = this;
                    var negOpptys;
                    var totalOpptys;
                    var percentNeg;
 
                    this.series.userOptions.custom.forEach(function(item, index){

                        // if(item[0] == tool.point.options.x){
                        //     negOpptys = item[1].split(':')[0];
                        //     totalOpptys = item[1].split(':')[1];
                        //     percentNeg = item[1].split(':')[2];
                        // }
                        if(item[0] == tool.point.options.x){
                            negOpptys = item[1] !== 0 ? item[1].toString().split(':')[0] : 0;
                            totalOpptys = item[1] !== 0 ? item[1].toString().split(':')[1] : 0;
                            percentNeg = item[1] !== 0 ? item[1].toString().split(':')[2] : 0;
                        }

                    });

                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/><span>' + this.series.name
                    + '</span><br/><b># of Neglected Opportunities: </b>' + negOpptys
                    + '</span><br/><b>Total Pipeline Opportunities: </b>' + totalOpptys
                    + '</span><br/><b>% of Neglect: </b>' + percentNeg + '%';
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top',
                enabled: true,
                labelFormatter: function () {
                    this.color = getRepsColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    events: {
                        legendItemClick: function(event) {
                                
                        },
                        click: function(event) {

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            var chartName = "Neglected Opportunities";
                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=Neglected_Opportunities_SMD_CHK&title=Neglected Opportunities&click=point';
                            url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                                event.point.series.userOptions.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            credits: {
                enabled: false
            },
            series: NeglectedOpptyData
        });

        //For redraw the chart to add colors to the legend symbols
        neglectedopportunitieschart.addSeries({"data":[]});
        neglectedopportunitieschart.series[neglectedopportunitieschart.series.length - 1].remove();
    }
    </script>
    <script>
        /* ----------------------- New Leads -------------------- */
    var NewLeadsData = new Array();
    var NewLeadsCategories = new Array();
    
    
    var midArray;
    var mainArray = new Array();

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.NewLeads}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        NewLeadsCategories.push(item.name);

                        var innerArray = new Array();
                        innerArray.push(item.valueindex, item.amount);
                        mainArray.push(innerArray);
                    }

                    midArray = {name:key, data:mainArray, custom:key};
                    NewLeadsData.push(midArray);
                }

                NewLeadsCategories = NewLeadsCategories.filter(onlyUnique);

                NewLeadsCategories.sort();

                RenderChartNewLeads(NewLeadsData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in New Leads...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in New Leads...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartNewLeads(NewLeadsData){

        Highcharts.chart('NewLeads', {
            chart: {
                type: 'bar',
                events: {
                    click: function(event) {
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=New_Leads_SMD_CHK&title=New Leads&click=chart';
                        url += '&duration=&str=';
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');
                    }
                }
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: NewLeadsCategories,
                min: 0,
                max: NewLeadsCategories.length - 1,
                title: {
                    text: null
                },
                crosshair: true,
                labels: {
                    useHTML: true,
                    formatter: function(){
                        return '<a href=\'{!communityUrl}/apex/ListOfRecordsPage?chart=New_Leads_SMD_CHK&title=New Leads&click=left&dashboard=SMD_CHK&str='+this.value+'\' target=\'blank\'>'+this.value+'</a>';    
                    }
                } 
            },
            yAxis: {
                min: 0,
                allowDecimals: false,
                title: {
                    text: '# of Leads'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/><span style="font-weight: bold">' + this.series.name 
                    + '</span><br/># of Leads: ' + this.y;
                }
            },
            plotOptions: {
                bar: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series:{
                    minPointLength: 5,
                    cursor: 'pointer',
                    events: {
                        legendItemClick: function(event) {
                                var duration = this.userOptions.name;
                                var year = '';
                                var month = '';
                            
                                if(duration.indexOf("'") > -1){
                                    // this is month with year string
                                    var HasMonth = duration.split("'");
                                    year = HasMonth[1];
                                    
                                    var dt = new Date();
                                    
                                    month = dt.getMonth() + 1;
                                }else{
                                    year = duration;
                                    month = '';
                                }
                            
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=New_Leads_SMD_CHK&title=New Leads&click=legend';
                                url += '&year='+year+'&month='+month+'&str=';
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            
                                event.preventDefault();
                            },
                            click: function(event) {
                                var duration = this.userOptions.name;
                                var year = '';
                                var month = '';
                                
                                if(duration.indexOf("'") > -1){
                                    // this is month with year string
                                    var HasMonth = duration.split("'");
                                    year = HasMonth[1];
                                    
                                    var dt = new Date();
                                    
                                    month = dt.getMonth() + 1;
                                }else{
                                    year = duration;
                                    month = '';
                                }
                                
                                
                                var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=New_Leads_SMD_CHK&title=New Leads&click=bar';
                                url += '&year='+year+'&month='+month+'&str='+event.point.category;
                                url += '&dashboard=SMD_CHK';
                                window.open(url, '_blank');
                            }
                    }
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'top'
            },
            credits: {
                enabled: false
            },
            series: NewLeadsData
        });
    }
    </script>
    <script>
        /* -------------------- New Customers Last 12 Months by Type --------------------- */
    var NewCustomersLastTwelveMonthsByTypeData = new Array();

    var midArray;

    Visualforce.remoting.timeout = 120000;

    Visualforce.remoting.Manager.invokeAction(
    '{!$RemoteAction.HospitalityDashboardChinaController.New_Customers_Last_12_Months_By_Type}',
        function(result, event){

            if (event.status) {
                for (var key in result) {

                    mainArray = new Array();

                    result[key].forEach(buildarray);
                    
                    function buildarray(item, index) {

                        var subArray = new Array();
                        subArray.push(item.valueindex, item.amount);
                        mainArray.push(subArray);
                    }

                    midArray = {name:key, data:mainArray, custom:key};
                    NewCustomersLastTwelveMonthsByTypeData.push(midArray);
                }
                NewCustomersLastTwelveMonthsByTypeData.forEach(el => {
                    let setted_month = []
                    el.data.forEach(el => setted_month.push(el[0]))

                    for(let i = 0; i<12; i++){
                        if(!setted_month.includes(i)){
                            el.data.push([i, 0])
                        }
                    }
                    el.data.sort((a, b) => b[0] - a[0]).reverse()
                })
                RenderChartNewCustomersByType(NewCustomersLastTwelveMonthsByTypeData);
            } else if (event.type === 'exception') {
                
                    console.log('Exception has occured in New Customers by Type...');
                    console.log(event.message);
                    console.log(event.where);
            } else {
                    console.log('Error occured in New Customers by Type...');
                    console.log(event.message);
            }
        }, 
        {escape: true}
    );

    function RenderChartNewCustomersByType(NewCustomersLastTwelveMonthsByTypeData){
    
        var NewCustomersLastTwelveMonthsByType = Highcharts.chart('newCustomersLast12MonthsByType', {
            credits: {
                enabled: false
            },
            chart: {
            
                events: {
                    click: function(event) {

                        var d = new Date();

                        var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                        
                        var CategArray = event.point.category.split(" ");
                        var CurrentMonth = parseInt(d.getMonth()) + 1;
                        
                        var YearIndex = (CategArray[1]).replace("'", "");
                        
                        var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                        
                        var year = parseInt(YearIndex) == 21 ? d.getFullYear() : parseInt(YearIndex) == 20 ? d.getFullYear() - 1 : d.getFullYear() + 1;
                        var duration = '';

                        var chartName = "New Customers Last 12 Months by Type";
                        var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=New_Customers_Last_12_Months_by_Type_SMD_CHK&title='+encodeURI(chartName)+'&click=point';
                        url += '&duration='+duration+'&month='+month+'&year='+year+'&str='+
                            event.point.series.userOptions.name;
                        url += '&dashboard=SMD_CHK';
                        window.open(url, '_blank');

                    }
                }
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: Last12MonthsReverseCategories,
                min: 0,
                max: 11
            },
            yAxis: {
                min: 0,
                title: {
                    text: '# of Customers'
                }
            },
            tooltip: {
                formatter: function(){
                    return '<span style="color:'+this.series.color+'; font-weight: bold">'+ this.x 
                    + '</span><br/><span style="font-weight: bold">' + this.series.name 
                    + '</span><br/># of Customers: ' + this.y;
                }
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                enabled: true,
                labelFormatter: function () {
                    this.color = getAccountTypeColor(this.name);
                    //return '<span style="color: '+this.color+'">'+ this.name + '</span>';
                    return '<span style="color: '+this.color+'"></span>' + this.name ;
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    }
                },
                series: {
                    label: {
                        connectorAllowed: false
                    },
                    marker: {
                        enabled: true
                    },
                    stickyTracking: false,
                    cursor: 'pointer',
                    events: {
                        legendItemClick: function(event) {
                        },
                        click: function(event) {

                            var d = new Date();
                            var MonthArray = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];
                            
                            var CategArray = event.point.category.split(" ");
                            var CurrentMonth = parseInt(d.getMonth()) + 1;
                            
                            var month = parseInt(MonthArray.indexOf(CategArray[0]) + 1);
                            var year = (month >= 1 && month <= CurrentMonth) ? d.getFullYear(): d.getFullYear() - 1;
                            var duration = '';

                            var url = '{!communityUrl}/apex/ListOfRecordsPage?chart=New_Customers_Last_12_Months_by_Type_SMD_CHK&title=New Customers Last 12 Months by Type&click=point';
                            url += '&duration=&month='+month+'&year='+year+'&str='+this.userOptions.name;
                            url += '&dashboard=SMD_CHK';
                            window.open(url, '_blank');
                        }
                    }
                }
            },
            series: NewCustomersLastTwelveMonthsByTypeData
        });

        //For redraw the chart to add colors to the legend symbols
        NewCustomersLastTwelveMonthsByType.addSeries({"data":[]});
        NewCustomersLastTwelveMonthsByType.series[NewCustomersLastTwelveMonthsByType.series.length - 1].remove();
    }
    </script>
</apex:page>